{"text": "Informationssicherheit – SoSe 2025 Organisatorisches & Motivation Prof. Dr. Holger Schmidt holger.schmidt004[at]fh-dortmund.de Fachhochschule Dortmund Fachbereich Informatik Professur für IT-Sicherheit, Informatik 1. April 2025, 10:20:47 1 / 41 IT-Sicherheit, Informatik 2 / 41 Professur für IT-Sicherheit, Informatik I ▶Prof. Dr. Holger Schmidt ▶Informationssicherheit (46813) (alter Titel: Datenschutz und Datensicherheit) ▶Informatik (Bachelor, 4. Sem., Pflicht) ▶Informatik Dual (Bachelor, 2. Sem., Pflicht) ▶Datenschutz und Datensicherheit (46813) entspricht inhaltlich der Veranstaltung Informationssicherheit ▶Wirtschaftsinformatik (Bachelor, 5./6. Sem., Wahlpflicht) ▶Informationssicherheit für die Medizin (46815) basiert inhaltlich auf der Veranstaltung Informationssicherheit, ergänzt um einen Medizinkontext ▶Medizinische Informatik (Bachelor, 4. Sem., Pflicht) ▶Medizinische Informatik Dual (Bachelor, 4. Sem., Pflicht) 3 / 41 Professur für IT-Sicherheit, Informatik II ▶Fortgeschrittene Informationssicherheit (46900) (alter Titel: Mobile Sicherheit) ▶Informatik (Bachelor, 4.-6. Sem., Wahlpflicht) ▶Informatik Dual (Bachelor, 5.-9.. Sem., Wahlpflicht) ▶Medizinische Informatik (Bachelor, 5.-7. Sem., Wahlpflicht) ▶Medizinische Informatik Dual (Bachelor, 7.-9. Sem., Wahlpflicht) ▶Seminar (Inhalt) (45182) ▶Informatik (Bachelor, 6. Sem., Wahlpflicht) ▶Medizinische Informatik (Bachelor, 5.-6. Sem., Wahlpflicht) 4 / 41 Professur für IT-Sicherheit, Informatik III ▶Ausgewählte Aspekte der Informationssicherheit (46857) ▶Informatik (Master, 1.-3. Sem., Wahlpflicht) ▶Medizinische Informatik (Master, 1.-3. Sem., Wahlpflicht) ▶Wirtschaftsinformatik (Master, 1.-3. Sem., Wahlpflicht) ▶Projekt- und Abschlussarbeiten 5 / 41 Organisatorisches 6 / 41 Konzept und Planung Materialien, Zeitplan ILIAS (https://www.ilias.fh-dortmund.de/) Vorlesung 2 SWS Vorlesung in Präsenz Vorlesungsfolien und handschriftliche Notizen Übung/Praktikum je 1 SWS Übung/Praktikum in Präsenz Bearbeitung von Übungs-/Praktikumsblättern als Hausaufgaben (Aufwand ca. 1-4h!) Präsentation der Hausaufgaben durch Studierende Gruppeneinteilung siehe Studienportal (https://portal.fh-dortmund.de/) Medizinische Informatik Tw. spezielle Übungs-/Praktikumsblätter, Zusatztermin mittlere Blockwoche, siehe ILIAS 7 / 41 Prüfung – Teilprüfung Praktika ▶Praktika (ein CTF Event 6 SWS, drei Einzelpraktika je 2 SWS) ▶Semesterbegleitende Teilprüfung, paarweise abgelegt ▶Bewertung: ▶Unterstützt durch Hilfskraft ▶CTF Event 0-12 Punkte anhand # Challenges ▶Einzelpraktika je 0 Punkte nicht bestanden bzw. 4 Punkte bestanden ▶0-24 Punkte insgesamt erreichbar ▶20% Anteil an Gesamtnote ▶Bei Nichtbestehen der Klausur, bestandene Praktika für Klausur nur im direkt nachfolgenden Semester anrechenbar 8 / 41 Prüfung – Teilprüfung Klausur ▶90-minütige Klausur ▶Semesterabschließende Teilprüfung ▶Inhalte der Praktika sind Gegenstand der Klausur ▶80% Anteil an Gesamtnote 9 / 41 Prüfungshinweise 10 / 41 Prüfungshinweise ▶Sämtliche in der Vorlesung, den Übungen und Praktika behandelten Inhalte sind relevant für die Klausur (siehe auch Lernziele). ▶Die Klausuraufgaben orientieren sich typischerweise an den Übungs- und Praktikumsaufgaben und an den in der Vorlesung vorgestellten Materialien. ▶Es sind keine Hilfsmittel für die Klausur zugelassen. ▶Klausureinsicht gemäß §13 RahmenPO 11 / 41 Hacking Hinweise 12 / 41 Hacking Hinweise Earl Boebert: „In my view, a defender who doesn’t know how to attack is no defender at all.“ ▶Die in der Veranstaltung behandelten Schwachstellen und Angriffe dienen ausschließlich der Ausbildung im Rahmen des Studiums. ▶Entsprechend dürfen auf keinen Fall Schwachstellen ausgenutzt und Angriffe durchgeführt werden, denn dies hat in der Regel strafrechtliche Konsequenzen im Sinne hoher Geld- und Haftstrafen. ▶Sogenanntes „Pentesting“ (Ethical Hacking) darf (wenn überhaupt) nur unter Laborbedingungen durchgeführt werden, d. h. ohne dabei einen laufenden IT-Betrieb zu stören und nur unter Verwendung vollständig lokaler, nicht vernetzter sowie eigener Infrastruktur. ▶Im Zweifel erkundigen Sie sich vorab bei Prof. Dr. Holger Schmidt. 13 / 41 Nutzungsbedingungen 14 / 41 Nutzungsbedingungen ▶Das gesamte Lehr- und Lernmaterial (Vorlesungsfolien, Vorlesungsnotizen, Übungsblätter, Screencasts, etc.) wird ausschließlich begleitend zur diessemestrigen Lehrveranstaltung zur Verfügung gestellt. ▶Der Zugriff auf diese Materialien ist durch ein Passwort geschützt und wird somit nur den Veranstaltungsteilnehmern ermöglicht. ▶Eine Weiterverbreitung dieser Materialien, insbesondere auch über das Internet, ist ausdrücklich untersagt bzw. bedarf einer vorherigen expliziten Erlaubnis von Prof. Dr. Holger Schmidt. 15 / 41 Veranstaltungsprofil 16 / 41 Veranstaltungsprofil ▶Konstruktiver Ansatz, eher Verteidigersicht ▶Technischer Fokus ▶Software-Entwicklung Informationssicherheit einerseits dynamisches Fachgebiet, andererseits viele Bereiche mit konservativem Charakter (getrieben durch Standards, z. B. im Bereich Kryptographie) 17 / 41 Themen & Lernziele 18 / 41 Themen & Relevanz ▶Terminologie ▶Best Practices, Standards & Recht ▶Entwicklung sicherer (Software-)Systeme ▶Technische Sicherheitsmaßnahmen ▶Kryptographische Verfahren ▶Authentifikation ▶Zugriffskontrolle ▶Faktor Mensch OWASP Top 101 A01 Broken Access Control A02 Cryptographic Failures A03 Injection A04 Insecure Design A07 Identification and Authentication Failures A08 Software and Data Integrity Failures 1https://owasp.org/Top10/, aufgerufen am 1. April 2025 19 / 41 Lernziele Die Studierenden sind in der Lage, ▶grundlegende Terminologie der Informationssicherheit zu definieren, zu differenzieren und zu erklären. ▶die zentrale Bedeutung von Standardisierung in der Informationssicherheit zu verstehen und methodisch abzubilden. ▶selbständig Informationen über Bedrohungen und Schwachstellen zu entwickeln, zu analysieren und darauf aufbauend systematisch Entscheidungen zu treffen. ▶organisatorische und technische Sicherheitsmaßnahmen zu erklären und anzuwenden. 20 / 41 Literatur ▶IT-Sicherheit – Konzepte - Verfahren - Protokolle von Eckert (2023) ▶Kryptografie – Verfahren - Protokolle - Infrastrukturen von Schmeh (2016) Ergänzend: ▶Security Engineering: A Guide to Building Dependable Distributed Systems von Anderson (2020) ▶ISO/IEC 27000, 2018 Die Literatur ist typischerweise in der Hochschulbibliothek (auch als eBooks) verfügbar. 21 / 41 Ausblick 22 / 41 (White Hat) Hacker 23 / 41 Motivation 24 / 41 Quelle des Logos: http://heartbleed.com/, aufgerufen am 1. April 2025 25 / 41 Heartbleed Bruce Schneier1: „‘Catastrophic’ is the right word. On the scale of 1 to 10, this is an 11.“ ▶Schwachstelle (CVE-2014-0160) in OpenSSL ▶Offenlegung geheimer Schlüssel und dadurch nachträgliche Entschlüsselung aufgezeichneter SSL/TLS verschlüsselter Verbindungen ▶Sehr große Verbreitung von OpenSSL im Web, Kommunikation, Embedded Systems u. v. m. ▶Heartbleed bestand 27 Monate: veröffentlicht am 14.03.2012 mit OpenSSL 1.0.1 und behoben am 07.04.2014 mit OpenSSL 1.0.1g Quelle des Logos: http://heartbleed.com/, aufgerufen am 1. April 2025 1https://www.schneier.com/blog/archives/2014/04/heartbleed.html, aufgerufen am 1. April 2025 26 / 41 Hintergrund – SSL/TLS ▶Secure Socket Layer (SSL) bzw. die mit Version 3.0 eingeführte Bezeichnung Transport Layer Security (TLS) ▶SSL/TLS nutzt ein symmetrisches Kryptosystem, d. h. beide Teilnehmer (Server und Client) verwenden den gleichen Schlüssel. ▶Die Schlüssel werden individuell bei der Erstellung einer Session zwischen Client und Server generiert. ▶SSL/TLS wird typischerweise bei HTTPS eingesetzt. ▶OpenSSL ist eine der verbreitetsten Implementierungen von SSL/TLS. 27 / 41 Namensgebung ▶Heartbleed stammt vom Namen der betroffenen Heartbeat-Komponente RFC 65202 (Requests for Comments) von OpenSSL ab. ▶Heartbeat simuliert einen Herzschlag durch regelmäßigen Austausch von Datenpaketen (Payload) zwischen Server und Client. ▶Heartbeat dient als Mechanismus zur Aufrechterhaltung einer SSL/TLS Verbindung und als Bestätigung der Verfügbarkeit beider Seiten. 2https://tools.ietf.org/html/rfc6520, aufgerufen am 1. April 2025 28 / 41 xkcd Webcomic – Teil 1 „Heartbleed Explanation“, https://xkcd.com/1354/, aufgerufen am 1. April 2025, lizensiert unter CC BY-NC 2.5.03 3https://creativecommons.org/licenses/by-nc/2.5/ 29 / 41 xkcd Webcomic – Teil 2 „Heartbleed Explanation“, https://xkcd.com/1354/, aufgerufen am 1. April 2025, lizensiert unter CC BY-NC 2.5.04 4https://creativecommons.org/licenses/by-nc/2.5/ 30 / 41 Ursache ▶OpenSSL ist größtenteils in der Programmiersprache C verfasst. ▶Ursächlich für Heartbleed ist ein Programmierfehler: ▶Prüfung einer Eingabevariable versäumt, in der die Länge der zurückzuliefernden Daten mitgeteilt wird ▶Dadurch ist ein lesender Zugriff über die Grenzen der zurückzuliefernden Daten hinaus möglich (buffer over-read). 31 / 41 Analyse Auswirkungen: ▶Offenlegung von kritischen Daten, z. B. Benutzernamen mit Passwörtern und privater Schlüssel des Serverzertifikats Fehlerbehebung: ▶Ignorieren von Heartbeat-Nachrichten, die nach mehr Daten fragen als für den Payload nötig Analyse: ▶Fehler in Komponente zur Gewährleistung der Verbindungsverfügbarkeit bedroht Maßnahmen die Vertraulichkeitsziele implementieren ▶Banale Fehler (unvollständige Implementierung) ▶Performanz über Sicherheit (OpenSSL umgeht vorhandene C-Sicherheitsmechanismen) ▶Keine Rollentrennung (Spezifikation, Programmierung und Validierung durch eine Person) 32 / 41 xkcd Webcomic „Dependency“, https://xkcd.com/2347/, aufgerufen am 1. April 2025, lizensiert unter CC BY-NC 2.5.05 5https://creativecommons.org/licenses/by-nc/2.5/ 33 / 41 Fehlerdetails ▶Fehler in Funktion tls1_process_heartbeat(SSL *s)6 ▶Eine HeartbeatMessage wird via SSL3_RECORD Struct übermittelt. ▶SSL3_RECORD enthält u. a. die Variablen length als Beschreibung der Anzahl übermittelter", "source": "infoSicherheit_merged.pdf", "start": 0, "end": 1200}
{"text": "41 xkcd Webcomic – Teil 1 „Heartbleed Explanation“, https://xkcd.com/1354/, aufgerufen am 1. April 2025, lizensiert unter CC BY-NC 2.5.03 3https://creativecommons.org/licenses/by-nc/2.5/ 29 / 41 xkcd Webcomic – Teil 2 „Heartbleed Explanation“, https://xkcd.com/1354/, aufgerufen am 1. April 2025, lizensiert unter CC BY-NC 2.5.04 4https://creativecommons.org/licenses/by-nc/2.5/ 30 / 41 Ursache ▶OpenSSL ist größtenteils in der Programmiersprache C verfasst. ▶Ursächlich für Heartbleed ist ein Programmierfehler: ▶Prüfung einer Eingabevariable versäumt, in der die Länge der zurückzuliefernden Daten mitgeteilt wird ▶Dadurch ist ein lesender Zugriff über die Grenzen der zurückzuliefernden Daten hinaus möglich (buffer over-read). 31 / 41 Analyse Auswirkungen: ▶Offenlegung von kritischen Daten, z. B. Benutzernamen mit Passwörtern und privater Schlüssel des Serverzertifikats Fehlerbehebung: ▶Ignorieren von Heartbeat-Nachrichten, die nach mehr Daten fragen als für den Payload nötig Analyse: ▶Fehler in Komponente zur Gewährleistung der Verbindungsverfügbarkeit bedroht Maßnahmen die Vertraulichkeitsziele implementieren ▶Banale Fehler (unvollständige Implementierung) ▶Performanz über Sicherheit (OpenSSL umgeht vorhandene C-Sicherheitsmechanismen) ▶Keine Rollentrennung (Spezifikation, Programmierung und Validierung durch eine Person) 32 / 41 xkcd Webcomic „Dependency“, https://xkcd.com/2347/, aufgerufen am 1. April 2025, lizensiert unter CC BY-NC 2.5.05 5https://creativecommons.org/licenses/by-nc/2.5/ 33 / 41 Fehlerdetails ▶Fehler in Funktion tls1_process_heartbeat(SSL *s)6 ▶Eine HeartbeatMessage wird via SSL3_RECORD Struct übermittelt. ▶SSL3_RECORD enthält u. a. die Variablen length als Beschreibung der Anzahl übermittelter Bytes und data als Zeiger auf den Anfang der HeartbeatMessage. ▶Die Variable payload_length der HeartbeatMessage beschreibt die Anzahl der Bytes des zurückzusendenden Payloads. ▶Der Sender der HeartbeatMessage bestimmt die Größe des Payloads und kann diese wegen fehlender Überprüfung gezielt missbrauchen. ▶SSL3_RECORD length und HeartbeatMessage payload_length müssten verglichen und auf Abweichungen hin überprüft werden. ▶Angreifer kann von SSL3_RECORD length abweichende Payloads anfordern und erhält diese auch. 6https://github.com/openssl/openssl/commit/4817504d069b4c5082161b02a22116ad75f822b1#diff-dab2861 0cae9e6261080acadaed86ba230fa4daba6f7218cf1134674ea5fe2e4, aufgerufen am 1. April 2025 34 / 41 Lösungsmöglichkeiten ▶Die Entwickler von OpenSSL haben einen Patch (Version 1.0.1g)7 veröffentlicht („Patch and pray“). ▶Alternativ kann bzw. konnte jeder Zeit OpenSSL ohne die betroffene Heartbeat-Komponente kompiliert werden (-DOPENSSL_NO_HEARTBEATS) ▶Besser: Designprinzip Perfect Forward Secrecy 7https://github.com/openssl/openssl/commit/731f431497f463f3a2a97236fe0187b11c44aead#diff-dab28610c ae9e6261080acadaed86ba230fa4daba6f7218cf1134674ea5fe2e4, aufgerufen am 1. April 2025 35 / 41 Nach 3 Jahren ...OpenSSL blutet noch Quelle: https://x.com/achillean/status/823275177802862592/photo/1, aufgerufen am 1. April 2025 36 / 41 Zusammenfassung 37 / 41 Zusammenfassung ▶Organisatorische Rahmenbedingungen festgelegt ▶Themen und Lernziele übergreifend definiert ▶Motivierendes Beispiel kennengelernt 38 / 41 Weiterführende Literatur 39 / 41 Weiterführende Literatur ▶https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0160, aufgerufen am 1. April 2025 ▶https://www.theregister.co.uk/2014/04/09/heartbleed_explained/, aufgerufen am 1. April 2025 ▶https://web.archive.org/web/20220228010525/https: //nakedsecurity.sophos.com/2014/04/08/anatomy-of-a-data-leak-b ug-openssl-heartbleed/, aufgerufen am 1. April 2025 40 / 41 Literatur Anderson, R. (2020). Security Engineering: A Guide to Building Dependable Distributed Systems (3. Aufl.). John Wiley & Sons Inc. https://www.cl.cam.ac.uk/~rja14/book.html (siehe S. 21). Eckert, C. (2023). IT-Sicherheit: Konzepte - Verfahren - Protokolle (11. Aufl.). De Gruyter Oldenbourg. (Siehe S. 21). ISO/IEC 27000. (2018). Information technology – Security techniques – Information security management systems – Overview and vocabulary. https://www.iso.org/standard/73906.html (siehe S. 21). Schmeh, K. (2016). Kryptografie – Verfahren - Protokolle - Infrastrukturen (6. Aufl.). dpunkt.verlag. (Siehe S. 21). 41 / 41 Informationssicherheit – SoSe 2025 Sicherheitsbegriffe, Asset, Schwachstelle, Verwundbarkeit, CIA, Systemmod., Asset-Id. u. -Analyse Prof. Dr. Holger Schmidt holger.schmidt004[at]fh-dortmund.de Fachhochschule Dortmund Fachbereich Informatik Professur für IT-Sicherheit, Informatik 4. April 2025, 06:52:51 1 / 34 Themen & Lernziele 2 / 34 Themen ▶Informations- und IT-Sicherheit, Security vs. Safety ▶Asset, Schwachstelle, Verwundbarkeit ▶CIA-Triad ergänzt um Authentifikation ▶Systemmodellierung ▶Asset-Identifikation und -Analyse 3 / 34 Lernziele Die Studierenden sind in der Lage, ▶verschiedene Sicherheitsbegriffe zu differenzieren und zu erklären. ▶die Begriffe Asset, Schwachstelle, Verwundbarkeit und die verschiedenen Sicherheitsziele zu definieren und zu erklären. ▶selbständig Informationen über Schwachstellen zu sichten und zusammenzufassen. ▶eine abstrakte Systemmodellierung als Datenflussdiagramm zu erstellen. ▶Assets basierend auf einer Systemmodellierung zu identifizieren und zu analysieren. 4 / 34 Terminologie: IT-Sicherheit, Informationssicherheit, Asset, Schwachstelle, Verwundbarkeit, CIA 5 / 34 IT-Sicherheit Daten Umgebung System Umgebung unautorisierter kein Zugriff Software Hardware Maschine Feindliche (z. B. Angreifer) Abbildung selbst erstellt ▶System ∧= Maschine + Umgebung nach Zave und Jackson, 1997 ▶Hier: IT-Sicherheit ∧= Security ▶IT-Sicherheit ist eine Eigenschaft des Systems (und nicht nur z. B. der Software). 6 / 34 IT-Sicherheit vs. Informationssicherheit vs. Cyber-Sicherheit ▶IT-Sicherheit bezieht sich immer auf Informationstechnologie, z. B. Schutz von Informationen die mit Hilfe einer Webanwendung verarbeitet wird ▶Informationssicherheit hat eine allgemeinere Bedeutung und bezieht sich auch auf Systeme ohne Informationstechnologie, z. B. Schutz von Informationen „analog“ auf handschriftlich verfassten Papieren. ▶Cyber-Sicherheit ist im Wesentlichen ähnlich zum Begriff IT-Sicherheit, jedoch mit expliziter Einbeziehung des Internet. 7 / 34 Terminologie „in a nutshell“ Abbildung 6.2 aus Lund et al., 2010 8 / 34 Schützenswerte Ressource / Asset Ein asset ist das was wir schützen wollen. „...an asset which has a value requiring appropriate protection ...“ ISO/IEC 27000, 2018 ▶Informationen, z. B. Datenbanken, Quellcode ▶Materielle Güter, z. B. Hardware, Maschinen, Räume ▶Immaterielle Güter, z. B. Reputation ▶Personen, z. B. Kunden, Mitarbeiter 9 / 34 Schwachstelle / Weakness und Verwundbarkeit / Vulnerability „weakness of an asset or control ...that can be exploited by one or more threats“ ISO/IEC 27000, 2018 ▶Schwachstelle (weakness) ist häufig Asset, Sicherheitsmaßnahme, oder Funktionalität, an dem / der ein System verwundbar ist. ▶Schwachstellen sind u. a. technischer (z. B. Softwarefehler, unsichere Kommunikationsverbindungen), natürlicher (z. B. Anfälligkeit für Naturkatastrophen), physischer (z. B. Einbruch in Serverraum) oder menschlicher (z. B. unsachgemäße Systemnutzung) Art. Eine Verwundbarkeit ist eine ausnutzbare Schwachstelle im System. ▶Verwundbarkeit (vulnerability) ist ausnutzbar (exploitable), z. B. durch Umgehen, Täuschung oder unautorisierte Modifikation sicherheitsrelevanter Systemdienste. 10 / 34 Eine Auswahl bekannter Schwachstellen CVE-2016-2118 CVE-2017-5754 CVE-2017-5753, CVE-2017-5715 CVE-2015-3197 CVE-2017-17688, CVE-2016-5195 CVE-2017-17689 Quelle der Logos: https://commons.wikimedia.org/wiki/Category:Security_vulnerability_logos, aufgerufen am 4. April 2025 11 / 34 Schutzziele „preservation of confidentiality ..., integrity ...and availability ...of information“ ISO/IEC 27000, 2018 ▶CIA-Triad ▶Wir betrachten Schutzziele allgemeiner als in der ISO/IEC 27000, 2018: asset statt information ▶Anhaltende Debatte über eine Erweiterung der CIA-Triad 12 / 34 CIA-Schutzziel Vertraulichkeit / Confidentiality „property that information is not made available or disclosed to unauthorized individuals, entities, or processes“ ISO/IEC 27000, 2018 ▶Ziel: Beschränkung und Kontrolle des Zugriffs auf Informationen für autorisierte Personen, Instanzen und Prozesse ▶Bedrohungen: z. B. Abhören von Finanzstatus beim Internetbanking ▶Vorfall, z. B. : Auslesen von 900 Sozialversicherungsnummern von Servern des kanadischen Finanzamtes basierend auf Heartbleed1 ▶Technische Maßnahmen, z. B. : ▶Zur Wahrung der Vertraulichkeit bei Speicherung und Transfer sensibler Informationen werden Verfahren zur Verschlüsselung eingesetzt. ▶Zugangskontrollen und Regulierung der Informationsflüsse dienen zum Schutz vor unautorisierten Zugriffen. 1https: //www.heise.de/security/meldung/Heartbleed-Datendiebstahl-beim-kanadischen-Finanzamt-2169832.html, aufgerufen am 4. April 2025 13 / 34 CIA-Schutzziel – Integrität / Integrity „property of accuracy and completeness“ ISO/IEC 27000, 2018 ▶Ziel: Wahrung von Vollständigkeit und Korrektheit von Informationen bzw. Daten und Systemen ▶Bedrohungen: z. B. Manipulation von Quellcode ▶Vorfall, z. B. : Ransomware verschlüsselt Daten auf Bezahlterminals der Stadtbahn in San Francisco2 ▶Technische Maßnahmen, z. B. : ▶Geregelte und funktionsfähige Berechtigungen und Zugangskontrollen ▶Möglichkeiten der Manipulation werden durch präzise funktionale Einschränkung bzw. Modularisierung reduziert. ▶Redundanz (Backup, RAID) ▶Datenveränderungen können z. B. mittels Hashfunktionen ermittelt werden. 2https://heise.de/-3506080, aufgerufen am 4. April 2025 14 / 34 CIA-Schutzziel – Verfügbarkeit / Availability „property of being accessible and usable on demand by an authorized entity“ ISO/IEC 27000, 2018 ▶Ziel: Sicherstellung des Zugriffs durch autorisierte Instanzen und somit die Gewährleistung von Erreichbarkeit und damit verbundener Produktivität ▶Bedrohungen: z. B. gezielte Angriffe, Naturgewalten, technische Fehler ▶Vorfall, z. B. : Störung von Telekom-Routern über Fernwartungs-Port3 ▶Technische Maßnahmen, z. B. : ▶Intrusion Detection Systeme ▶Firewalls ▶Lastverteilung 3https://www.heise.de/security/meldung/Grossstoerung-bei-der-Telekom-Angreifer-nutzten-Luecke-und -Botnetz-Code-3507088.html, aufgerufen am 4. April 2025 15 / 34 Erweitertes Schutzziel Authentizität / Authenticity „provision of assurance that a claimed characteristic of an entity is", "source": "infoSicherheit_merged.pdf", "start": 1000, "end": 2200}
{"text": "Verschlüsselung eingesetzt. ▶Zugangskontrollen und Regulierung der Informationsflüsse dienen zum Schutz vor unautorisierten Zugriffen. 1https: //www.heise.de/security/meldung/Heartbleed-Datendiebstahl-beim-kanadischen-Finanzamt-2169832.html, aufgerufen am 4. April 2025 13 / 34 CIA-Schutzziel – Integrität / Integrity „property of accuracy and completeness“ ISO/IEC 27000, 2018 ▶Ziel: Wahrung von Vollständigkeit und Korrektheit von Informationen bzw. Daten und Systemen ▶Bedrohungen: z. B. Manipulation von Quellcode ▶Vorfall, z. B. : Ransomware verschlüsselt Daten auf Bezahlterminals der Stadtbahn in San Francisco2 ▶Technische Maßnahmen, z. B. : ▶Geregelte und funktionsfähige Berechtigungen und Zugangskontrollen ▶Möglichkeiten der Manipulation werden durch präzise funktionale Einschränkung bzw. Modularisierung reduziert. ▶Redundanz (Backup, RAID) ▶Datenveränderungen können z. B. mittels Hashfunktionen ermittelt werden. 2https://heise.de/-3506080, aufgerufen am 4. April 2025 14 / 34 CIA-Schutzziel – Verfügbarkeit / Availability „property of being accessible and usable on demand by an authorized entity“ ISO/IEC 27000, 2018 ▶Ziel: Sicherstellung des Zugriffs durch autorisierte Instanzen und somit die Gewährleistung von Erreichbarkeit und damit verbundener Produktivität ▶Bedrohungen: z. B. gezielte Angriffe, Naturgewalten, technische Fehler ▶Vorfall, z. B. : Störung von Telekom-Routern über Fernwartungs-Port3 ▶Technische Maßnahmen, z. B. : ▶Intrusion Detection Systeme ▶Firewalls ▶Lastverteilung 3https://www.heise.de/security/meldung/Grossstoerung-bei-der-Telekom-Angreifer-nutzten-Luecke-und -Botnetz-Code-3507088.html, aufgerufen am 4. April 2025 15 / 34 Erweitertes Schutzziel Authentizität / Authenticity „provision of assurance that a claimed characteristic of an entity is correct“ ISO/IEC 27000, 2018 ▶Ziel: Gewährleistung von Echtheit, Glaubwürdigkeit und Überprüfbarkeit von Objekten und Subjekten ▶z. B. Fälschung von biometrischen Merkmalen, Erraten von Passwörtern, Diebstahl von Smartcards ▶Vorfall, z. B. : Überwindung des iPhone 5S Fingerabdrucksensors mithilfe von Attrappen4 ▶Technische Maßnahmen, z. B. : ▶Passwörter ▶Biometrische Merkmale, Smartcards 4https://youtu.be/HM8b8d8kSNQ, aufgerufen am 4. April 2025 16 / 34 Systemmodellierung 17 / 34 Systemmodellierung ▶Aktivität in Software- bzw. Systementwicklung ▶Ziele: ▶Ist-Zustand ▶Geltungsbereich ▶Hilfsmittel zur Kommunikation im Entwicklungsteam und mit Kunden (bzw. allg. Stakeholders) ▶Gefordert in Standards, z. B. BSI-Standard 200-2, 2017, „Strukturanalyse“ ▶System graphisch als Datenflussdiagramm / Data flow diagram (DFD) (DeMarco, 1979) 18 / 34 System als Datenflussdiagramm I Externe Entität (external entity) z. B. Server, Benutzer Prozess (process) z. B. Programme, Berechnungen Datenfluss (data flow) Datentransfer zw. Externe Entität, Prozess bzw. Datenspeicher z. B. Netzwerke, RPC Kanäle Datenspeicher (data storage) stationäre Daten z. B. Dateien, Datenbanken, Formulardaten Vertrauensgrenze (trust boundary) Bereiche unterschiedlicher Kontrolle, z. B. Internet, Lokales Netzwerk Trust Boundary Process Data Storage External Entity DFD Syntax 19 / 34 System als Datenflussdiagramm II ▶Abstraktion variabel, für Ist- und Soll-Modellierung anwendbar, dadurch in verschiedenen Entwicklungsphasen einsetzbar ▶Fokus auf IT (ggf. fehlende „Breite“) ▶Alternativen: z. B. CORAS (Lund et al., 2010) nutzt aus Objektorientierung bekannte UML5 Diagramme ▶Software-Werkzeuge: z. B. OWASP Threat Dragon6, Microsoft Threat Modeling Tool7, Draw.io8 mit Threat Modeling Bibliothek9 5https://www.uml.org/, aufgerufen am 4. April 2025 6https://owasp.org/www-project-threat-dragon/, aufgerufen am 4. April 2025 7https://learn.microsoft.com/en-us/azure/security/develop/threat-modeling-tool, aufgerufen am 4. April 2025 8https://app.diagrams.net/, aufgerufen am 4. April 2025 9https://github.com/michenriksen/drawio-threatmodeling, aufgerufen am 4. April 2025 20 / 34 Beispiel: Online-Banküberweisung DFD Bank Network Local System, Client Network Internet Bank Client Web Application Process Browser Bank Server DFD selbst erstellt mit OWASP Threat Dragon 21 / 34 Fakten und Annahmen Fakten sind relevante Aussagen über Systembestandteile die immer wahr sind. Z. B. bzgl. Online-Banküberweisung DFD: „Nach der Eingabe von Receipient, IBAN, Amount sind diese Daten im Arbeitspeicher des Computer gespeichert.“ Annahmen sind relevante Aussagen über Systembestandteile deren Wahrheit nur angenommen werden kann. Annahmen beziehen sich typischerweise auf Menschen. Z. B. bzgl. Online-Banküberweisung DFD: „Bank clients geben Receipient, IBAN, Amount nur an autorisierte Entitäten weiter.“ ▶Annahmen münden häufig in organisatorischen Sicherheitsmaßnahmen (z. B. Richtlinien, Bedienungsanleitungen) 22 / 34 Validierung I ▶Qualitätssicherung von z. B. Modellen, Ausgaben von Methoden ▶Validierungskriterien, basierend auf Spezifikation ▶Prüfung und Dokumentation z. B. basierend auf Walkthroughs und Checklisten 23 / 34 Validierung II Vollständigkeit Sind alle Bestandteile der Spezifikation im Systemmodell adressiert? Z. B. bzgl. DFD: „Sind alle Bestandteile der Spezifikation (z. B. textuelle Beschreibung) in Form von DFD Modellelementen adressiert?.“ Prüfung durch Walkthrough der Spezifikation und Abgleich mit DFD Korrektheit Entspricht das Systemmodell der Spezifikation? Ist die Modellierung adäquat? Z. B. bzgl. DFD: „Sind Daten u. Datensammlungen der Spezifikation als Data Storage Modellelemente modelliert und entsprechend beschriftet?“ Prüfung durch Walkthrough der Spezifikation und Abgleich mit DFD 24 / 34 Asset-Identifikation und -Analyse 25 / 34 Asset-Identifikation und -Analyse ▶Aktivität in Software- bzw. Systementwicklung ▶Ziele: ▶Assets ▶Schaden, z. B. Verstoß gegen Gesetze, finanzielle Verluste, Reputationsverlust ▶Schutzziele bezogen auf Assets und Stakeholders ▶Gefordert in Standards, z. B. BSI-Standard 200-2, 2017, „Kronjuwelen“ ▶Tabelle, alternativ z. B. Annotation in DFD (Schneider & Scandariato, 2023) 26 / 34 Methode zur Asset-Identifikation und -Analyse Eingabe Systemmodell z. B. als DFD Ausgabe Assets in Relation zu Schutzzielen und Stakeholders, pot. Schäden, ggf. verbessertes Systemmodell Methode Für alle Prozesse, Datenspeicher und -flüsse: 1. Ermittle ob die Daten wertvoll sind. Dazu überlege ob ein Schaden bzw. Wertverlust eintritt, wenn jeder die Daten lesen könnte (C), die Daten verändert (I) oder gelöscht würden (A). 2. Ermittle welche Stakeholders ein Interesse an der Unversehrtheit der ermittelten Assets haben, dabei jeweils separat bzgl. CIA. 3. Ermittle welcher Schaden für welchen Stakeholder relevant ist. 4. Dokumentiere die Erkenntnisse z. B. tabellarisch. Asset Schutzziel Stakeholders Begründung / pot. Schaden ... ... ... ... Validierung Vollständigkeit, Korrektheit 27 / 34 Zusammenfassung 28 / 34 Zusammenfassung ▶Verschiedene Sicherheitsbegriffe im Kontext System präsentiert ▶Begriffe Asset, Schwachstelle, Verwundbarkeit und verschiedene Sicherheitsziele definiert und erklärt ▶Systemmodellierung als DFD präsentiert ▶Methode für Asset-Identifikation und -Analyse vorgestellt 29 / 34 Weiterführende Literatur 30 / 34 Weiterführende Literatur ▶IT-Sicherheit – Konzepte - Verfahren - Protokolle, Kapitel 1 von Eckert (2023) ▶Security Engineering: A Guide to Building Dependable Distributed Systems, Kapitel 1 von Anderson (2020) ▶How Dataflow Diagrams Impact Software Security Analysis: an Empirical Experiment, von Schneider, Ferreyra, Quéval, Simhandl, Zdun und Scandariato (2024) ▶Solution-aware data flow diagrams for security threat modeling, von Sion, Yskout, Van Landuyt und Joosen (2018) 31 / 34 Literatur I Anderson, R. (2020). Security Engineering: A Guide to Building Dependable Distributed Systems (3. Aufl.). John Wiley & Sons Inc. https://www.cl.cam.ac.uk/~rja14/book.html (siehe S. 31). BSI-Standard 200-2. (2017). BSI-Standard 200-2 – IT-Grundschutz-Methodik. https://www.bsi.bund.de/SharedDocs/ Downloads/DE/BSI/Grundschutz/BSI_Standards/standard_200_2. pdf?__blob=publicationFile&v=2 (siehe S. 18, 26). DeMarco, T. (1979). Structured Analysis and System Specification. Yourdon Press. (Siehe S. 18). Eckert, C. (2023). IT-Sicherheit: Konzepte - Verfahren - Protokolle (11. Aufl.). De Gruyter Oldenbourg. (Siehe S. 31). ISO/IEC 27000. (2018). Information technology – Security techniques – Information security management systems – Overview and vocabulary. https://www.iso.org/standard/73906.html (siehe S. 9, 10, 12–16). 32 / 34 Literatur II Lund, M. S., Solhaug, B., & Stølen, K. (2010). Model-Driven Risk Analysis: The CORAS Approach (1st). Springer Publishing Company, Incorporated. (Siehe S. 8, 20). Schneider, S., Ferreyra, N. E. D., Quéval, P.-J., Simhandl, G., Zdun, U., & Scandariato, R. (2024). How Dataflow Diagrams Impact Software Security Analysis: an Empirical Experiment. (Siehe S. 31). Schneider, S., & Scandariato, R. (2023).Automatic extraction of security-rich dataflow diagrams for microservice applications written in Java. Journal of Systems and Software, 202, 111722. https://doi.org/https://doi.org/10.1016/j.jss.2023.111722 (siehe S. 26). Sion, L., Yskout, K., Van Landuyt, D., & Joosen, W. (2018).Solution-aware data flow diagrams for security threat modeling. Proceedings of the 33rd Annual ACM Symposium on Applied Computing, 1425–1432. https://doi.org/10.1145/3167132.3167285 (siehe S. 31). 33 / 34 Literatur III Zave, P., & Jackson, M. (1997).Four dark corners of requirements engineering. ACM Transactions on Software Engineering and Methodology, 6(1), 1–30 (siehe S. 6). 34 / 34 Informationssicherheit – SoSe 2025 Bedrohung, Bedrohungsmod., Risiko, Sicherheitsmaßnahme, Sicherheitsziel, Sicherheitsanf. Prof. Dr. Holger Schmidt holger.schmidt004[at]fh-dortmund.de Fachhochschule Dortmund Fachbereich Informatik", "source": "infoSicherheit_merged.pdf", "start": 2000, "end": 3200}
{"text": "(11. Aufl.). De Gruyter Oldenbourg. (Siehe S. 31). ISO/IEC 27000. (2018). Information technology – Security techniques – Information security management systems – Overview and vocabulary. https://www.iso.org/standard/73906.html (siehe S. 9, 10, 12–16). 32 / 34 Literatur II Lund, M. S., Solhaug, B., & Stølen, K. (2010). Model-Driven Risk Analysis: The CORAS Approach (1st). Springer Publishing Company, Incorporated. (Siehe S. 8, 20). Schneider, S., Ferreyra, N. E. D., Quéval, P.-J., Simhandl, G., Zdun, U., & Scandariato, R. (2024). How Dataflow Diagrams Impact Software Security Analysis: an Empirical Experiment. (Siehe S. 31). Schneider, S., & Scandariato, R. (2023).Automatic extraction of security-rich dataflow diagrams for microservice applications written in Java. Journal of Systems and Software, 202, 111722. https://doi.org/https://doi.org/10.1016/j.jss.2023.111722 (siehe S. 26). Sion, L., Yskout, K., Van Landuyt, D., & Joosen, W. (2018).Solution-aware data flow diagrams for security threat modeling. Proceedings of the 33rd Annual ACM Symposium on Applied Computing, 1425–1432. https://doi.org/10.1145/3167132.3167285 (siehe S. 31). 33 / 34 Literatur III Zave, P., & Jackson, M. (1997).Four dark corners of requirements engineering. ACM Transactions on Software Engineering and Methodology, 6(1), 1–30 (siehe S. 6). 34 / 34 Informationssicherheit – SoSe 2025 Bedrohung, Bedrohungsmod., Risiko, Sicherheitsmaßnahme, Sicherheitsziel, Sicherheitsanf. Prof. Dr. Holger Schmidt holger.schmidt004[at]fh-dortmund.de Fachhochschule Dortmund Fachbereich Informatik Professur für IT-Sicherheit, Informatik 15. April 2025, 17:21:42 1 / 33 Themen & Lernziele 2 / 33 Themen ▶Bedrohung & Bedrohungsmodellierung ▶Risiko ▶Sicherheitsmaßnahme ▶Sicherheitsziel und -anforderung 3 / 33 Lernziele Die Studierenden sind in der Lage, ▶die Begriffe Bedrohung, Risiko, Sicherheitsmaßnahme, Sicherheitsziel und -anforderung zu definieren und zu erklären. ▶Bedrohungen basierend auf einer Systemmodellierung zu modellieren und zu analysieren. 4 / 33 Terminologie: Bedrohung 5 / 33 Bedrohung / Threat Eine Bedrohung ist das wogegen wir schützen wollen. „potential cause of an unwanted incident, which can result in harm to a system or organization“ ISO/IEC 27000, 2018 ▶Ausnutzung einer oder mehrerer Verwundbarkeiten eines Systems, um eine Verletzung der Schutzziele zu erreichen ▶„...the enemy knows the system ...“ (Shannon, 1949) ▶Bedrohungsmodell betrachtet entsprechend Asset, Schutzziele, Verwundbarkeit und zusätzlich (insb. feindliche) Umgebung, z. B. Angreifer und dessen Fähigkeiten und Ziele 6 / 33 Klassifikation von Bedrohungsfaktoren ▶Höhere Gewalt Blitzschlag, Feuer, Überschwemmung, Erdbeben, Demonstration, Streik ▶Fahrlässigkeit Irrtum, Fehlbedienung, unsachgemäße Behandlung ▶Vorsatz Manipulation, Einbruch, Hacking, Vandalismus, Spionage, Sabotage ▶Technisches Versagen Stromausfall, Hardware-Ausfall, Fehlfunktionen ▶Organisatorische Mängel Unberechtigter Zugriff, Raubkopie, ungeschultes Personal 7 / 33 Bedrohungsmodellierung 8 / 33 Bedrohungsmodellierung ▶Aktivität in Software- bzw. Systementwicklung ▶Ziele: ▶Bedrohungen ▶Potentielle Angreifer ▶Problemverständnis ▶Gefordert in Standards, z. B. BSI-Standard 200-2, 2017, „Gefährdungen“ ▶Jedoch keine standardisierte Methode, aber Ansätze z. B. STRIDE (Shostack, 2014), Attack Trees1 ähneln sich ▶Threat Modeling Manifesto2 mit Prinzipien und Ressourcen ▶Tabelle, strukturierter Text, Misuse cases (Sindre & Opdahl, 2001) 1https://www.schneier.com/academic/archives/1999/12/attack_trees.html, aufgerufen am 15. April 2025 2https://www.threatmodelingmanifesto.org/, aufgerufen am 15. April 2025 9 / 33 Bedrohungsmodellierung mit STRIDE ▶STRIDE (Shostack, 2014), ursprünglich von Microsoft ▶Software-Werkzeuge siehe Systemmodellierung, zusätzlich z. B. Threagile3 ▶Abstraktion variabel, dadurch in verschiedenen Entwicklungsphasen bzw. für ungeschützte oder bereits (tw.) geschützte Systeme einsetzbar ▶Unterstützt Serious Gaming Ansatz (Kartenspiel „Elevation of Privilege“4) ▶Angreifersicht 3https://threagile.io/, aufgerufen am 15. April 2025 4https://agilestationery.com/products/elevation-of-privilege-game, aufgerufen am 15. April 2025 10 / 33 STRIDE Bedrohungskategorien „Gegenteile“ der gewollten Systemeigenschaften Spoofing Vorgeben jemand (oder etwas) zu sein, der (oder das) man nicht ist. Tampering Etwas verändern, das man nicht verändern darf. Repudiation Behaupten, dass man etwas nicht getan hat. Information disclosure Etwas lesen, das man nicht lesen darf. Denial of service Verhindern, dass ein Dienst erbracht wird. Elevation of privilege Privilegien erlangen, die man nicht haben darf. 11 / 33 STRIDE Methodik anhand Bedrohungskategorien Eingabe Systemmodell z. B. als DFD Ausgabe Bedrohungen, ggf. verbessertes Systemmodell Methode Für alle Modellelemente (EE, P, DF, DS) 1. Ermittle für jede STRIDE Bedrohungskategorie ob für gewähltes Modellelement ein Schaden auftreten kann, dabei typischerweise S T R I D E EE, P DS, DF, P P P, DS, DF P, DS, DF P 2. Dokumentiere identifizierte Bedrohungen (Modell-spezifische Erläuterung) Validierung Vollständigkeit, Korrektheit 12 / 33 Beispiel: DBMS DFD DFD DBMS selbst erstellt mit OWASP Threat Dragon 13 / 33 Beispiel: Anwendung von STRIDE auf DBMS STRIDE DBMS selbst erstellt mit OWASP Threat Dragon 14 / 33 Terminologie: Risiko, Sicherheitsmaßnahme, Sicherheitsziel, Sicherheitsanforderung 15 / 33 Risiko / Risk I „effect of uncertainty on objectives“ ISO/IEC 27000, 2018 Anmerkung: „Information security risk is associated with the potential that threats will exploit vulnerabilities of an information asset or group of information assets and thereby cause harm to an organization.“ ISO/IEC 27000, 2018 ▶Risiko einer Bedrohung beschreibt Eintrittswahrscheinlichkeit (relative Häufigkeit) von Schadensereignis und Höhe eines potentiellen Schadens ▶Bedrohungsrisiko abhängig von Angreifermodell, welches potentielle Angreifer nach Fähigkeiten und Zielen charakterisiert (z. B. Kenntnisse, Ressourcen und Budget) 16 / 33 Risiko / Risk II durch Sicherheitsmaßnahmen Abbildung selbst erstellt ▶Ausgehend von Risiko und Assets Konzept für Schutzbedarf entwickeln ▶Wirtschaftlichkeit von Informationssicherheit 17 / 33 Sicherheitsmaßnahme / countermeasure bzw. control I „measure that is modifying risk“ ISO/IEC 27000, 2018 ▶Ziel: Risikoreduktion (Härtung) ▶Abschreckung durch Strafen (Recht) ▶Verhinderung bzw. Prävention durch ▶technische Sicherheitsmaßnahmen, z. B. Einsatz von Verfahren zur Verschlüsselung ▶nicht-technische Sicherheitsmaßnahmen, z. B. Passwortrichtlinien 18 / 33 Sicherheitsmaßnahme / countermeasure bzw. control II ▶Falls Prävention nicht gelingt oder nicht möglich, dann zumindest Erkennung: ▶Schwierig bei passiven Angriffen ▶Schaden in Kauf nehmen (nur Erkennung) oder Schaden verhindern (Angriff stoppen) ▶Reaktion erforderlich ▶Wiederherstellung bei Schäden ▶Mehrstufiges Schichtenkonzept 19 / 33 Sicherheitsmaßnahme / countermeasure bzw. control III STRIDE Bedrohungskategorie Sicherheitsmaßnahme Spoofing Authentisierung Tampering Zugangskontrolle Hashing Repudiation Digitale Signaturen Logging Information Disclosure Verschlüsselung Zugangskontrolle Denial of Service Zugangskontrolle Authentisierung Elevation of privilege Zugangskontrolle ▶OWASP Threat Dragon unterstützt Dokumentation von Sicherheitsmaßnahmen 20 / 33 Terminologie: Sicherheitsziel, Sicherheitsanforderung 21 / 33 Sicherheitsziel / security goal und Sicherheitsanforderung / security requirement ▶Sicherheitsziele beschreiben den Wunsch Assets vor Schaden zu schützen (Haley et al., 2008) bzw. das Bedrohungsrisiko auf ein tolerierbares Maß zu senken. ▶Sicherheitsziele sind abstrakt formuliert - ohne dabei Bezug auf eine Umsetzung (Sicherheitsmaßnahme) zu nehmen. ▶Sicherheitsanforderungen sind typischerweise Bedingungen für funktionale Anforderungen. ▶Sicherheitsanforderungen sind implementierbare Sicherheitsziele. 22 / 33 Beispiel: Sicherheitsziel und -anforderung ▶Smart Metering Gateway bietet eine sichere Kommunikation zwischen Energiezählern, Verbrauchern und Energieversorgern. ▶Common Criteria for Information Technology Security Evaluation (CC, 2022a, 2022b, 2022c, 2022d, 2022e) für Produktzertifizierung Aus Security Target für SMARTY IQ-SMGW LTE von Sagemcom Dr. Neuhaus GmbH5 5https://commoncriteriaportal.org/files/epfiles/0822V3b_pdf.pdf, aufgerufen am 15. April 2025 23 / 33 The Security Twin Peaks Refinement Risk reduction Problem Peak Solution Peak Security goals Counter- measures Security require- ments Security goals from feedback Feedback Angelehnt an Heyman et al., 2011, Fig. 3 ▶Iterative Anwendung von Aktivitäten wie z. B. Asset-Identifikation und Analyse, Bedrohungsmodellierung ▶Einbeziehung von Feedback 24 / 33 Ausblick ▶Entwicklungsmodelle z. B. OWASP SAMM6 ▶Bedrohungsmodellierung für Penetration Testing ▶Sicherheitsanforderungen für Anforderungs-getriebenes Testen und Architektur ▶Risikomanagement z. B. gemäß ISO/IEC 27001, 2022 ▶Systemmodellierung für Festlegung Geltungsbereich ▶Bedrohungsmodellierung für Risikoidentifikation, -bewertung und -priorisierung ▶Sicherheitsmaßnahmen für Risikobehandlung 6https://owaspsamm.org/, aufgerufen am 15. April 2025 25 / 33 Zusammenfassung 26 / 33 Zusammenfassung ▶Begriffe Bedrohung, Risiko, Sicherheitsmaßnahme, Sicherheitsziel und -anforderung definiert und erklärt ▶Bedrohungsmodellierung mit STRIDE präsentiert ▶Security Twin Peaks kennengelernt 27 / 33 Weiterführende Literatur 28 / 33 Weiterführende Literatur ▶IT-Sicherheit – Konzepte - Verfahren - Protokolle, Kapitel 1 von Eckert (2023) ▶Security Engineering: A Guide to Building Dependable Distributed Systems, Kapitel 1 von Anderson (2020) ▶Uncover Security Design Flaws Using The STRIDE Approach7 ▶Demystifying the threat modeling process, von Torr (2005) ▶A descriptive study of Microsoft’s threat modeling technique,", "source": "infoSicherheit_merged.pdf", "start": 3000, "end": 4200}
{"text": "2022e) für Produktzertifizierung Aus Security Target für SMARTY IQ-SMGW LTE von Sagemcom Dr. Neuhaus GmbH5 5https://commoncriteriaportal.org/files/epfiles/0822V3b_pdf.pdf, aufgerufen am 15. April 2025 23 / 33 The Security Twin Peaks Refinement Risk reduction Problem Peak Solution Peak Security goals Counter- measures Security require- ments Security goals from feedback Feedback Angelehnt an Heyman et al., 2011, Fig. 3 ▶Iterative Anwendung von Aktivitäten wie z. B. Asset-Identifikation und Analyse, Bedrohungsmodellierung ▶Einbeziehung von Feedback 24 / 33 Ausblick ▶Entwicklungsmodelle z. B. OWASP SAMM6 ▶Bedrohungsmodellierung für Penetration Testing ▶Sicherheitsanforderungen für Anforderungs-getriebenes Testen und Architektur ▶Risikomanagement z. B. gemäß ISO/IEC 27001, 2022 ▶Systemmodellierung für Festlegung Geltungsbereich ▶Bedrohungsmodellierung für Risikoidentifikation, -bewertung und -priorisierung ▶Sicherheitsmaßnahmen für Risikobehandlung 6https://owaspsamm.org/, aufgerufen am 15. April 2025 25 / 33 Zusammenfassung 26 / 33 Zusammenfassung ▶Begriffe Bedrohung, Risiko, Sicherheitsmaßnahme, Sicherheitsziel und -anforderung definiert und erklärt ▶Bedrohungsmodellierung mit STRIDE präsentiert ▶Security Twin Peaks kennengelernt 27 / 33 Weiterführende Literatur 28 / 33 Weiterführende Literatur ▶IT-Sicherheit – Konzepte - Verfahren - Protokolle, Kapitel 1 von Eckert (2023) ▶Security Engineering: A Guide to Building Dependable Distributed Systems, Kapitel 1 von Anderson (2020) ▶Uncover Security Design Flaws Using The STRIDE Approach7 ▶Demystifying the threat modeling process, von Torr (2005) ▶A descriptive study of Microsoft’s threat modeling technique, von Scandariato, Wuyts und Joosen (2015) ▶OWASP Threat Modeling Process8 ▶Threat Modeling at Scale9 7https://learn.microsoft.com/en-us/archive/msdn-magazine/2006/november/uncover-security-design-f laws-using-the-stride-approach, aufgerufen am 15. April 2025 8https://owasp.org/www-community/Threat_Modeling_Process, aufgerufen am 15. April 2025 9https://safecode.org/wp-content/uploads/2023/06/Threat_Modeling_at_Scale_6.21.23.pdf, aufgerufen am 15. April 2025 29 / 33 Literatur I Anderson, R. (2020). Security Engineering: A Guide to Building Dependable Distributed Systems (3. Aufl.). John Wiley & Sons Inc. https://www.cl.cam.ac.uk/~rja14/book.html (siehe S. 29). BSI-Standard 200-2. (2017). BSI-Standard 200-2 – IT-Grundschutz-Methodik. https://www.bsi.bund.de/SharedDocs/ Downloads/DE/BSI/Grundschutz/BSI_Standards/standard_200_2. pdf?__blob=publicationFile&v=2 (siehe S. 9). CC. (2022a). Common Criteria Part 1: Introduction and general model. https: //www.commoncriteriaportal.org/files/ccfiles/CC2022PART1R1.pdf (siehe S. 23). CC. (2022b). Common Criteria Part 2: Security functional requirements. https: //www.commoncriteriaportal.org/files/ccfiles/CC2022PART2R1.pdf (siehe S. 23). 30 / 33 Literatur II CC. (2022c). Common Criteria Part 3: Security assurance requirements. https: //www.commoncriteriaportal.org/files/ccfiles/CC2022PART3R1.pdf (siehe S. 23). CC. (2022d). Common Criteria Part 4: Pre-defined packages of security requirements. https: //www.commoncriteriaportal.org/files/ccfiles/CC2022PART5R1.pdf (siehe S. 23). CC. (2022e). Common Criteria Part 5: Framework for the specification of evaluation methods and activities. https: //www.commoncriteriaportal.org/files/ccfiles/CC2022PART4R1.pdf (siehe S. 23). Eckert, C. (2023). IT-Sicherheit: Konzepte - Verfahren - Protokolle (11. Aufl.). De Gruyter Oldenbourg. (Siehe S. 29). 31 / 33 Literatur III Haley, C. B., Laney, R., Moffett, J. D., & Nuseibeh, B. (2008).Security Requirements Engineering: A Framework for Representation and Analysis. IEEE Transactions on Software Engineering, 34(1), 133–153 (siehe S. 22). Heyman, T., Yskout, K., Scandariato, R., Schmidt, H., & Yu, Y. (2011).The Security Twin Peaks. Proceedings of the International Symposium on Engineering Secure Software and Systems (ESSoS), LNCS 6542, 167–180 (siehe S. 24). ISO/IEC 27000. (2018). Information technology – Security techniques – Information security management systems – Overview and vocabulary. https://www.iso.org/standard/73906.html (siehe S. 6, 16, 18). ISO/IEC 27001. (2022). Information technology – Security techniques – Information security management systems – Requirements. https://www.iso.org/standard/27001 (siehe S. 25). 32 / 33 Literatur IV Scandariato, R., Wuyts, K., & Joosen, W. (2015).A descriptive study of Microsoft’s threat modeling technique. Requirements Engineering, 20, 163–180 (siehe S. 29). Shannon, C. (1949).Communication Theory of Secrecy Systems. Bell System Technical Journal, 28(4), 656–715 (siehe S. 6). Shostack, A. (2014). Threat Modeling: Designing for Security. Wiley. (Siehe S. 9, 10). Sindre, G., & Opdahl, A. L. (2001).Capturing Security Requirements through Misuse Cases. Proceedings of the Norwegian Informatics Conference (NIK) (siehe S. 9). Torr, P. (2005).Demystifying the threat modeling process. IEEE Security & Privacy, 3(5), 66–70. https://doi.org/10.1109/MSP.2005.119 (siehe S. 29). 33 / 33 Informationssicherheit – SoSe 2025 Angriff, Hacker, Penetration Testing Prof. Dr. Holger Schmidt holger.schmidt004[at]fh-dortmund.de Fachhochschule Dortmund Fachbereich Informatik Professur für IT-Sicherheit, Informatik 13. März 2025, 07:31:50 1 / 24 Themen & Lernziele 2 / 24 Themen ▶Passiver/aktiver Angriff ▶Angreifertypen ▶Grundlagen Penetration testing ▶Live Demo: Metasploit 3 / 24 Lernziele Die Studierenden sind in der Lage, ▶die Begriffe Angriff und Hacker zu definieren und zu erklären. ▶Grundlagen Penetration testing zu beschreiben ▶Metasploit für Schwachstellenanalyse anzuwenden 4 / 24 Terminologie: Angriff, Hacker 5 / 24 Angriff / Attack „attempt to destroy, expose, alter, disable, steal or gain unauthorized access to or make unauthorized use of an asset“ ISO/IEC 27000, 2018 ▶Realisierung einer Bedrohung ▶Sowohl ein nicht autorisierter Zugriff als auch ein Zugriffsversuch auf ein System werden als Angriff bezeichnet. ▶Aufteilung in passive und aktive Angriffe. ▶Passive Angriffe beschreiben eine unautorisierte Informationsgewinnung und können z. B. einen Verlust der Vertraulichkeit zur Folge haben. ▶Aktive Angriffe umfassen die unautorisierte Modifikation von Datenobjekten und richten sich vor allem gegen die Integrität und Verfügbarkeit von IT-Systemen. 6 / 24 Hackers ▶Begriff eingeführt durch Levy, 1984 ▶Hackerethik, z. B. vom CCC1 bzw. als 35C3 Video2 ▶White Hat Hacking bzw. Ethical Hacking bzw. Penetration Testing ▶Organisiert, z. B. jährliche Treffen ▶DEF CON Convention3 ▶Chaos Communication Congress4 ▶Black Hat Conference5 1https://www.ccc.de/de/hackerethik, aufgerufen am 13. März 2025 2https://media.ccc.de/v/35c3-10011-hackerethik_-_eine_einfuhrung, aufgerufen am 13. März 2025 3https://defcon.org/, aufgerufen am 13. März 2025 4https://events.ccc.de/congress/, aufgerufen am 13. März 2025 5https://www.blackhat.com/, aufgerufen am 13. März 2025 7 / 24 Vergleich Black/Grey/White Hat Hacker Hacker Typen Black Hat Grey Hat White Hat Ver- iden- tifizie- ren Bedingungslos (ggf. illegal!) Bedingungslos (ggf. illegal!) Nur mit Erlaubnis wund- aus- nutzen Bedingungslos (illegal!) Nur mit Er- laubnis Nur mit Erlaubnis barkeit veröf- fentli- chen Öffentlichkeit, mit Exploit Nur Hersteller, Problembehe- bung gegen Bezahlung Nein, bis Problem behoben Motivation eigener Vor- teil, Schädi- gung Dritter Risikoreduktion, Bezahlung Bezahlung Fähigkeiten Technisch sehr versiert 8 / 24 Weitere Differenzierung von Angreifer-Typen I ▶Differenzierung zwischen Interne Angreifer (syn. Innentäter) meist Mitarbeiter oder extern beauftragte Personen mit Vertrauensstatus, die Interna für Angriff nutzen Externe Angreifer Personen ohne Vertrauensbeziehung, Vernetzung (Internet) und Digitalisierung, unterliegt steigender Kriminalisierung ▶Skript Kiddie als Stereotyp für Angreifer mit geringem technischen Kompetenzen, dafür mit viel Zeit, häufig Jugendliche, Nutzung frei verfügbarer Exploits 9 / 24 Weitere Differenzierung von Angreifer-Typen II ▶Wirtschaftsspionage Sehr hoch technisierter Angreifer bzw. Team von Angreifern, Angriffe mit großem Aufwand (monetär, zeitlich, Ausrüstung) gezielt auf Unternehmen, Ziel ist meist Erlangung vertraulicher Informationen ▶Geheimdienste Enthüllungen des ehemaligen NSA-Mitarbeiters Edward Snowden zeigen flächendeckende Überwachung internationaler Telekommunikationsverbindungen durch Geheimdienste, häufig ist Überwachung gleichzeitig Wirtschaftsspionage ▶Angriff im Bereich Wirtschaftsspionage und Geheimdienste häufig Advanced Persistent Threat (APT), d. h. längerfristig andauernde Bedrohung 10 / 24 Passive Angriffe – Beispiele ▶Sniffing-Angriffe (syn. eavesdropping, wiretapping) Mitschneiden von Datenverkehr oder Abhören von Telefonleitungen zum Ausspähen von Interna, z. B. Passwörter. ▶Portscans Ermittlung geöffneter Ports für Dienste, häufig vorbereitende Aktivität für weitergehenden Angriff ▶Idle-Scans Ebenfalls zur Ermittlung aktiver Dienste, jedoch ohne dabei die angreifende IP-Adresse bekanntzugeben. Portscan mittels Nmap unter Linux – Foto selbst erstellt 11 / 24 Aktive Angriffe – Beispiele I ▶Spoofing-Angriffe (syn. Maskierungsangriffe) basieren auf Vortäuschung einer falschen Identität, z. B. falsche E-Mail-Adresse oder gezielt angepasste MAC-Adresse ▶Denial-of-Service-Angriffe (DoS) zur Einschränkung der Verfügbarkeit von Systemen bzw. Diensten, z. B. bewusste Überlastung des Netzwerkverkehr, sodass normale Erreichbarkeit nicht gewährleistet ist High Orbit Ion Cannon für DoS-Angriffe6 – Foto selbst erstellt 6https://sourceforge.net/projects/high-orbit-ion-cannon/, aufgerufen am 13. März 2025 12 / 24 Aktive Angriffe – Beispiele II ▶Man-in-the-middle-Angriffe Angreifer befindet sich zwischen zwei Kommunikationspartnern, Datenverkehr kann eingesehen und manipuliert werden, physischer Zugang häufig nicht erforderlich ▶Pufferüberlaufangriff Unzureichende Prüfung von Eingaben erlaubt Überschreiben bestimmter Speicherbereiche, sodass ggf. Ausführung von Schadcode möglich ▶Social Engineering Nicht-technische Angriffe, bei denen Angreifer ein Opfer z. B. zur Preisgabe sensibler Informationen bewegt,", "source": "infoSicherheit_merged.pdf", "start": 4000, "end": 5200}
{"text": "häufig ist Überwachung gleichzeitig Wirtschaftsspionage ▶Angriff im Bereich Wirtschaftsspionage und Geheimdienste häufig Advanced Persistent Threat (APT), d. h. längerfristig andauernde Bedrohung 10 / 24 Passive Angriffe – Beispiele ▶Sniffing-Angriffe (syn. eavesdropping, wiretapping) Mitschneiden von Datenverkehr oder Abhören von Telefonleitungen zum Ausspähen von Interna, z. B. Passwörter. ▶Portscans Ermittlung geöffneter Ports für Dienste, häufig vorbereitende Aktivität für weitergehenden Angriff ▶Idle-Scans Ebenfalls zur Ermittlung aktiver Dienste, jedoch ohne dabei die angreifende IP-Adresse bekanntzugeben. Portscan mittels Nmap unter Linux – Foto selbst erstellt 11 / 24 Aktive Angriffe – Beispiele I ▶Spoofing-Angriffe (syn. Maskierungsangriffe) basieren auf Vortäuschung einer falschen Identität, z. B. falsche E-Mail-Adresse oder gezielt angepasste MAC-Adresse ▶Denial-of-Service-Angriffe (DoS) zur Einschränkung der Verfügbarkeit von Systemen bzw. Diensten, z. B. bewusste Überlastung des Netzwerkverkehr, sodass normale Erreichbarkeit nicht gewährleistet ist High Orbit Ion Cannon für DoS-Angriffe6 – Foto selbst erstellt 6https://sourceforge.net/projects/high-orbit-ion-cannon/, aufgerufen am 13. März 2025 12 / 24 Aktive Angriffe – Beispiele II ▶Man-in-the-middle-Angriffe Angreifer befindet sich zwischen zwei Kommunikationspartnern, Datenverkehr kann eingesehen und manipuliert werden, physischer Zugang häufig nicht erforderlich ▶Pufferüberlaufangriff Unzureichende Prüfung von Eingaben erlaubt Überschreiben bestimmter Speicherbereiche, sodass ggf. Ausführung von Schadcode möglich ▶Social Engineering Nicht-technische Angriffe, bei denen Angreifer ein Opfer z. B. zur Preisgabe sensibler Informationen bewegt, häufig durch Vorgabe einer falschen Identität bzw. Rolle (z. B. Systemadministrator des Unternehmens) 13 / 24 Penetration Testing 14 / 24 Penetration testing ▶Aktivität in Software- bzw. Systementwicklung ▶Ziele: ▶Erkennung von Schwachstellen und Validierung ihrer Ausnutzbarkeit ▶Risikobewertung ▶Standards & Best Practices (Auswahl): ▶OWASP Web Security Testing Guide (WSTG)7 ▶Open Source Security Testing Methodology Manual (OSSTMM)8 ▶Penetration Testing Execution Standard (PTES)9 ▶Ähnlich wie bei funktionalem Testen garantiert Bestehen von Penetrationstests keine 100% IT-Sicherheit. 7https://owasp.org/www-project-web-security-testing-guide/, aufgerufen am 13. März 2025 8https://www.isecom.org/OSSTMM.3.pdf, aufgerufen am 13. März 2025 9http://www.pentest-standard.org/, aufgerufen am 13. März 2025 15 / 24 Penetration testing Arten ▶Blackbox: als externer Angreifer agieren; keine internen Informationen über das System bekannt ▶Whitebox: vollständiger Zugriff auf das System, einschließlich Quellcode, Administratorkonto usw. ▶Graybox: Mischung aus Black- und Whitebox, z. B. Zugang zum Benutzerkonto und nur einigen Informationen 16 / 24 Penetration testing Vorgehensweise nach PTES 1. Vorbereitung: Vertrag, Regeln, Notfallvereinbarung, usw. 2. Sammlung von Informationen 3. Bedrohungsmodellierung 4. Schwachstellenanalyse: aktive/passive Erkennung 5. Entwicklung von Exploits 6. Nachbereitung: CVE, CVSS 7. Berichterstattung: standardisierte Protokolle (write-ups) 17 / 24 Penetration testing vs. Red/Blue team ▶Red team nutzt Pentesting Methoden und Tools ▶Red team verhält sich wie echter Angreifer, um ein bestimmtes Ziel zu erreichen, z. B. Zugang zu einem bestimmten Computer ▶Red team typischerweise Blackbox pentesting, extern und mit Überraschungsmoment ▶Blue team ist reguläres Personal für Sicherheitsvorfälle 18 / 24 Beispiel: Rapid7 Metasploit ▶Rapid7 Metasploit10 für Red Teams ▶Identifikation und Analyse von Schwachstellen ▶Entwicklung und Ausführung von Exploits ▶Open Source Software, Community-getrieben ▶Fortgeschrittene Funktionalität kostenpflichtig 10https://www.metasploit.com/, aufgerufen am 13. März 2025 19 / 24 Zusammenfassung 20 / 24 Zusammenfassung ▶Begriffe Angriff und Hacker definiert und erklärt ▶Grundlagen Penetration testing präsentiert ▶Live Demo: Metasploit 21 / 24 Weiterführende Literatur 22 / 24 Weiterführende Literatur ▶IT-Sicherheit – Konzepte - Verfahren - Protokolle, Kapitel 1 von Eckert (2023) ▶Security Engineering: A Guide to Building Dependable Distributed Systems, Kapitel 1 von Anderson (2020) ▶Metasploit Unleashed11 11https://www.offsec.com/metasploit-unleashed/, aufgerufen am 13. März 2025 23 / 24 Literatur I Anderson, R. (2020). Security Engineering: A Guide to Building Dependable Distributed Systems (3. Aufl.). John Wiley & Sons Inc. https://www.cl.cam.ac.uk/~rja14/book.html (siehe S. 23). Eckert, C. (2023). IT-Sicherheit: Konzepte - Verfahren - Protokolle (11. Aufl.). De Gruyter Oldenbourg. (Siehe S. 23). ISO/IEC 27000. (2018). Information technology – Security techniques – Information security management systems – Overview and vocabulary. https://www.iso.org/standard/73906.html (siehe S. 6). Levy, S. (1984). Hackers: Heroes of the Computer Revolution. Doubleday. (Siehe S. 7). 24 / 24 Informationssicherheit – SoSe 2025 Standards & OWASP Prof. Dr. Holger Schmidt holger.schmidt004[at]fh-dortmund.de Fachhochschule Dortmund Fachbereich Informatik Professur für IT-Sicherheit, Informatik 13. März 2025, 07:32:13 1 / 27 Themen & Lernziele 2 / 27 Themen ▶Einleitung Standards und Best Practices ▶OWASP Top 10 ▶OWASP Software Assurance Maturity Model (SAMM) ▶OWASP Application Security Verification Standard (ASVS) ▶OWASP Testing Project 3 / 27 Lernziele Die Studierenden sind in der Lage, ▶die Bedeutung von Standards für die Informationssicherheit einzuschätzen. ▶die Organisation von OWASP Best Practices als Projekte zu verstehen. ▶ausgewählte OWASP Projekte zu beschreiben. 4 / 27 Standards und Best Practices 5 / 27 Einleitung ▶Gewährleistung von Mindeststandards und Vergleichbarkeit hinsichtlich Informationssicherheit durch Standards und Best Practices. ▶Bereitstellung von Vorgehensweisen zur effizienten Absicherung von Systemen und Infrastrukturen. ▶Gewährleistung der Einhaltung etwaiger gesetzlicher und regulatorischer Anforderungen. ▶Nachweis durch Zertifizierung von z. B. Unternehmen und Produkten. 6 / 27 Beispiele ▶Standards ▶Common Criteria for Information Technology Security Evaluation (Common Criteria)1 ▶ISO/IEC 27000-Reihe2 ▶IT-Grundschutz3 ▶Best Practices ▶OWASP (Open Worldwide Application Security Project)4, z. B. SAMM (Software Assurance Maturity Model)5 1https://commoncriteriaportal.org/, aufgerufen am 13. März 2025 2https://www.iso.org/isoiec-27001-information-security.html, aufgerufen am 13. März 2025 3https://www.bsi.bund.de/DE/Themen/Unternehmen-und-Organisationen/Standards-und-Zertifizierung/I T-Grundschutz/it-grundschutz_node.html, aufgerufen am 13. März 2025 4https://www.owasp.org/, aufgerufen am 13. März 2025 5https://owaspsamm.org/, aufgerufen am 13. März 2025 7 / 27 Entwicklung und Veröffentlichung ▶Entwickler und Herausgeber von Standards sind typischerweise nationale oder internationale, staatliche oder unabhängige Organisationen, z. B. : ▶Joint Technical Committee 1 „Information Security“ (JTC 1) wird aus International Organization for Standardization (ISO) und International Electrotechnical Commission (IEC) gebildet und ist international für Bereich IT-Sicherheit zuständig. ▶Innerhalb von JTC 1 ist das Subcommittee 27 „IT security techniques“ zuständig, welches in Working groups, z. B. „WG 2 Cryptography and security mechanisms“, organisiert ist. ▶Best Practices sind hingegen typischweise durch eine Interessensgemeinschaft entwickelt, häufig getrieben durch Unternehmen. 8 / 27 Stand der Technik ▶Mittels Standardisierung wird ein Stand der Technik definiert (mit juristischer Bedeutung). ▶Die Einhaltung von Standards und Best Practices wird typischerweise bestimmt durch ▶Gesetze, z. B. Datenschutz-Grundverordnung (DS-GVO)6 ▶Regulatorische, oft branchenspezifische Anforderungen, z. B. Payment Card Industry Data Security Standard (PCI-DSS)7 ▶Nationale, staatliche Organisationen, z. B. Institute of Electrical and Electronics Engineers (IEEE) und National Institute of Standards and Technology (NIST) 6https://eur-lex.europa.eu/legal-content/DE/TXT/?uri=CELEX:32016R0679, aufgerufen am 13. März 2025 7https://docs-prv.pcisecuritystandards.org/Software%20Security/Standard/PCI-Secure-Software-Standar d-v1_2.pdf, aufgerufen am 13. März 2025 9 / 27 OWASP Projekte 10 / 27 Open Worldwide Application Security Project (OWASP) ▶https://www.owasp.org/, aufgerufen am 13. März 2025 ▶Stifung, frei, offen, nicht Profit-getrieben, Entwickler-orientiert ▶Best Practices organisiert in Projekten ▶Reifegrade: Flagship, Production, Lab und Incubator ▶Standardisierte Organisation ▶Untereinander verknüpft ▶Bücher, Tools, Cheatsheets, etc. 11 / 27 OWASP Projekte Übersicht Application Security Wayfinder8 8https://owasp.org/projects/, aufgerufen am 13. März 2025 12 / 27 OWASP Top 10 I ▶Risikokategorien basierend auf CWE ▶Auswahl basierend auf Umfrage adressiert an Entwickler und Spezialisten für IT-Sicherheit von Anwendungen, CVSS Werte (insb. Exploit und Impact) ▶Datensatz umfasst mehr als 500 000 betrachtete Anwendungen ▶Nutzung für OWASP Software Assurance Maturity Model (SAMM) und OWASP Application Security Verification Standard (ASVS) 13 / 27 OWASP Top 10 II A01 Broken Access Control A02 Cryptographic Failures A03 Injection A04 Insecure Design A05 Security Misconfiguration 14 / 27 OWASP Top 10 III A06 Vulnerable and Outdated Components A07 Identification and Authentication Failures A08 Software and Data Integrity Failures A09 Security Logging and Monitoring Failures A10 Server Side Request Forgery (SSRF) 15 / 27 OWASP Software Assurance Maturity Model (SAMM) Project I ▶https://owaspsamm.org/, aufgerufen am 13. März 2025 ▶Einrichtung oder Verbesserung eines Modells für IT-Sicherheit von Anwendungen ▶Benchmarking ▶Ist- und Soll-Analysen ▶Drei Reifegrade: Maturity Level (MR) 1-3 16 / 27 OWASP Software Assurance Maturity Model (SAMM) Project II Abbildung aus S. 13, OWASP SAMM – Version", "source": "infoSicherheit_merged.pdf", "start": 5000, "end": 6200}
{"text": "Entwickler-orientiert ▶Best Practices organisiert in Projekten ▶Reifegrade: Flagship, Production, Lab und Incubator ▶Standardisierte Organisation ▶Untereinander verknüpft ▶Bücher, Tools, Cheatsheets, etc. 11 / 27 OWASP Projekte Übersicht Application Security Wayfinder8 8https://owasp.org/projects/, aufgerufen am 13. März 2025 12 / 27 OWASP Top 10 I ▶Risikokategorien basierend auf CWE ▶Auswahl basierend auf Umfrage adressiert an Entwickler und Spezialisten für IT-Sicherheit von Anwendungen, CVSS Werte (insb. Exploit und Impact) ▶Datensatz umfasst mehr als 500 000 betrachtete Anwendungen ▶Nutzung für OWASP Software Assurance Maturity Model (SAMM) und OWASP Application Security Verification Standard (ASVS) 13 / 27 OWASP Top 10 II A01 Broken Access Control A02 Cryptographic Failures A03 Injection A04 Insecure Design A05 Security Misconfiguration 14 / 27 OWASP Top 10 III A06 Vulnerable and Outdated Components A07 Identification and Authentication Failures A08 Software and Data Integrity Failures A09 Security Logging and Monitoring Failures A10 Server Side Request Forgery (SSRF) 15 / 27 OWASP Software Assurance Maturity Model (SAMM) Project I ▶https://owaspsamm.org/, aufgerufen am 13. März 2025 ▶Einrichtung oder Verbesserung eines Modells für IT-Sicherheit von Anwendungen ▶Benchmarking ▶Ist- und Soll-Analysen ▶Drei Reifegrade: Maturity Level (MR) 1-3 16 / 27 OWASP Software Assurance Maturity Model (SAMM) Project II Abbildung aus S. 13, OWASP SAMM – Version 29, lizensiert unter CC BY-SA 4.010 9https://drive.google.com/file/d/1cI3Qzfrly_X89z7StLWI5p_Jfqs0-OZv/view?usp=sharing, aufgerufen am 13. März 2025 10https://creativecommons.org/licenses/by-sa/4.0/ 17 / 27 OWASP SAMM Overview Abbildung aus S. 15, OWASP SAMM – Version 211, lizensiert unter CC BY-SA 4.012 11https://drive.google.com/file/d/1cI3Qzfrly_X89z7StLWI5p_Jfqs0-OZv/view?usp=sharing, aufgerufen am 13. März 2025 12https://creativecommons.org/licenses/by-sa/4.0/ 18 / 27 OWASP SAMM Threat Assessment Overview Abbildung aus S. 85, OWASP SAMM – Version 213, lizensiert unter CC BY-SA 4.014 13https://drive.google.com/file/d/1cI3Qzfrly_X89z7StLWI5p_Jfqs0-OZv/view?usp=sharing, aufgerufen am 13. März 2025 14https://creativecommons.org/licenses/by-sa/4.0/ 19 / 27 OWASP Application Security Verification Standard (ASVS) Project I ▶https://www.owasp.org/index.php/Category: OWASP_Application_Security_Verification_Standard_Project, aufgerufen am 13. März 2025 ▶Anleitung, Audit, Metrik, Vertragsbasis ▶Anwendungskontext: Finanzwesen, Gesundheitswesen, etc. ▶Anpassbarkeit: Level 1-3 (gem. Anwendungsfall) ▶Umfang: Architektur/Entwurf, Authentisierung, Sessions, Zugriffskontrolle, Ein-/Ausgabe, Fehlerbehandlung, Schutz persistierter Daten, Kommunikation, Konfiguration, Business Logik, Dateien, Web Dienste, Konfiguration, etc. 20 / 27 OWASP Application Security Verification Standard (ASVS) Project II Abbildung aus S. 23, OWASP Application Security Verification Standard 4.0.315, lizensiert unter CC BY 3.016 15https://github.com/OWASP/ASVS/raw/v4.0.3/4.0/OWASP%20Application%20Security%20Verification%20 Standard%204.0.3-en.pdf, aufgerufen am 13. März 2025 16https://creativecommons.org/licenses/by-sa/3.0/ 21 / 27 OWASP Testing Project I ▶https://www.owasp.org/index.php/OWASP_Testing_Project, aufgerufen am 13. März 2025 ▶Anleitung, Testfälle, Tools ▶Umfang wie ASVS, z. B. „Testing for weak cryptography“ 22 / 27 OWASP Testing Project II Abbildung aus S. 40, OWASP Testing Guide 4.217, lizensiert unter CC BY-SA 4.018 17https://github.com/OWASP/wstg/releases/download/v4.2/wstg-v4.2.pdf, aufgerufen am 13. März 2025 18https://creativecommons.org/licenses/by-sa/4.0/ 23 / 27 Zusammenfassung 24 / 27 Zusammenfassung ▶Bedeutung von Standards und Best Practices für die Informationssicherheit kennengelernt ▶Organisation von OWASP Best Practices als Projekte gelernt ▶OWASP Top 10, SAMM, ASVS, Testing Projekt dargestellt 25 / 27 Weiterführende Literatur 26 / 27 Weiterführende Literatur ▶OWASP Projekte ▶Juice Shop (https://owasp.org/www-project-juice-shop/, aufgerufen am 13. März 2025) ▶Cheat Sheets (https://cheatsheetseries.owasp.org/, aufgerufen am 13. März 2025) ▶Dependency-track (https://dependencytrack.org/, aufgerufen am 13. März 2025) 27 / 27 Informationssicherheit – SoSe 2025 Recht & DSGVO Prof. Dr. Holger Schmidt holger.schmidt004[at]fh-dortmund.de Fachhochschule Dortmund Fachbereich Informatik Professur für IT-Sicherheit, Informatik 13. März 2025, 07:32:47 1 / 25 Themen & Lernziele 2 / 25 Themen ▶Rechtliche Rahmenbedingungen in Deutschland ▶Europäische Datenschutz-Grundverordnung 3 / 25 Lernziele Die Studierenden sind in der Lage, ▶Informationssicherheit im Kontext der deutschen IT-Sicherheitsgesetze zu erklären. ▶grundlegende Inhalte der europäischen Datenschutz-Grundverordnung wiederzugeben und anzuwenden. 4 / 25 Rechtliche Rahmenbedingungen in Deutschland 5 / 25 BSI-Gesetz „Sicherheit in der Informationstechnik im Sinne dieses Gesetzes bedeutet die Einhaltung bestimmter Sicherheitsstandards, die die Verfügbarkeit, Unversehrtheit oder Vertraulichkeit von Informationen betreffen, durch Sicherheitsvorkehrungen 1. in informationstechnischen Systemen, Komponenten oder Prozessen oder 2. bei der Anwendung von informationstechnischen Systemen, Komponenten oder Prozessen.“ Legaldefinition der IT-Sicherheit im Gesetz zur Errichtung des Bundesamtes für Sicherheit in der Informationstechnik (BSI) (BSI-Gesetz) vom 14. August 2009 (BGBl. I S. 2821)1 1https://www.bgbl.de/xaver/bgbl/start.xav?startbk=Bundesanzeiger_BGBl&jumpTo=bgbl109s2821.pdf, aufgerufen am 13. März 2025 6 / 25 IT-Sicherheitsgesetz 2.0 ▶Weiterentwicklung des BSI-Gesetzes2 ▶Zuletzt geändert am 21.05.2021 (BGBl. I S. 1122) durch zweites Gesetz zur Erhöhung der Sicherheit informationstechnischer Systeme (IT-Sicherheitsgesetz 2.0)3 ▶Kritische Infrastruktur im Fokus: Betreiber nachweispflichtig bzgl. Einhaltung von Standards, Meldepflicht bei Störungen 2https://www.bsi.bund.de/DE/Das-BSI/Auftrag/BSI-Gesetz/bsi-gesetz_node.html, aufgerufen am 13. März 2025 3https://www.bgbl.de/xaver/bgbl/start.xav?startbk=Bundesanzeiger_BGBl&jumpTo=bgbl121s1122.pdf, aufgerufen am 13. März 2025 7 / 25 Strafrecht ▶Strafrecht ist hauptsächlich im Strafgesetzbuch (StGB) geregelt. ▶Rechtsnormen mittels derer bestimmte Verhaltensweisen verboten werden. (Keine Strafe ohne Gesetz.) ▶Spezifische Computerdelikte (Auswahl) ▶§ 202a StGB – Ausspähen von Daten ▶§ 263a StGB – Computerbetrug ▶§§ 269, 270 StGB – Fälschung beweiserheblicher Daten ▶§ 274 StGB – Urkundenunterdrückung ▶§ 303a StGB – Datenveränderung ▶§ 303b StGB – Computersabotage Vgl. Reinhard et al., 2007 8 / 25 202a StGB – Ausspähen von Daten (1) „Wer unbefugt sich oder einem anderen Zugang zu Daten, die nicht für ihn bestimmt und die gegen unberechtigten Zugang besonders gesichert sind, unter Überwindung der Zugangssicherung verschafft, wird mit Freiheitsstrafe bis zu drei Jahren oder mit Geldstrafe bestraft. (2) Daten im Sinne des Absatzes 1 sind nur solche, die elektronisch, magnetisch oder sonst nicht unmittelbar wahrnehmbar gespeichert sind oder übermittelt werden.“4 ▶Nur besonders gesicherte Daten sind betroffen. (Beispielsweise mittels physischer Schlösser oder per Verschlüsselung bzw. Passwörtern.) ▶Daten im Allgemeinen sind gemeint, unabhängig davon, ob es sich um Geheimnisse handelt. Vgl. Reinhard et al., 2007 4http://www.gesetze-im-internet.de/stgb/__202a.html, aufgerufen am 13. März 2025 9 / 25 303a StGB – Datenveränderung (1) „Wer rechtswidrig Daten (§ 202a Abs. 2) löscht, unterdrückt, unbrauchbar macht oder verändert, wird mit Freiheitsstrafe bis zu zwei Jahren oder mit Geldstrafe bestraft. (2) Der Versuch ist strafbar. (3) ...“5 ▶Schutz der Verfügungsgewalt des Berechtigten über Informationen, die in Form von Daten vorgehalten werden. ▶Umfasst die Löschung wie auch das Unbrauchbarmachen von Daten durch z. B. Entzug der Zugangsberechtigungen mittels eines Passwortes. Vgl. Reinhard et al., 2007 5http://www.gesetze-im-internet.de/stgb/__303a.html, aufgerufen am 13. März 2025 10 / 25 Strafrecht – Anwendung In welchen der nachfolgenden Situation liegt aus Ihrer Sicht ein Straftatbestand im Sinne der vorgestellten Paragraphen des StGB vor? ▶Ein Angreifer schleust eine Malware (Ransomware) in ein Computersystem ein und verschlüsselt alle persönlichen Daten des Opfers. Eine Entschlüsselung wird nach anonymer Zahlung eines mittleren dreistelligen Betrags in Aussicht gestellt. ▶Daten des Portals zur Studienorganisation sind über eine nicht-geschützte Schnittstelle (Website zur Administration der Datenbank) verfügbar. Diese Website enthält weder ein Login noch einen Disclaimer. Findige Studierende haben die Website entdeckt und die Datenbank kopiert. 11 / 25 Datenschutz in Europa 12 / 25 Datenschutz – Einleitung ▶Grundlage bildet das Recht auf informationelle Selbstbestimmung (Volkszählungsurteil des Bundesverfassungsgerichtes von 19836). ▶Ziel ist der Schutz des Persönlichkeitsrechts und somit personenbezogener Daten. ▶Jeder Mensch kann selbst über die Verwendung und Preisgabe ihn betreffender Daten entscheiden. ▶Geschützt werden also nicht Daten, sondern die Freiheit der Menschen, selbst zu entscheiden, wer was wann und bei welcher Gelegenheit über sie weiß. Vgl. Reinhard et al., 2007 6https://web.archive.org/web/20101116085553/http: //zensus2011.de/fileadmin/material/pdf/gesetze/volkszaehlungsurteil_1983.pdf, aufgerufen am 13. März 2025 13 / 25 Datenschutz – Gesetzgebung in Europa ▶Die Europäische Datenschutz-Grundverordnung (DSGVO)7 ist nach der Übergangsphase von zwei Jahren ab dem 25. Mai 2018 europaweit geltendes Recht. ▶Die DSGVO löst eine seit 1995 geltende EU-Richtlinie 95/46/EG8 ab und ersetzt nationale Datenschutzgesetze (z. B. Bundesdatenschutzgesetz (BDSG)9) durch unmittelbar geltendes EU-Recht. 7https://eur-lex.europa.eu/legal-content/DE/TXT/?uri=CELEX:32016R0679, aufgerufen am 13. März 2025 8https://eur-lex.europa.eu/legal-content/DE/TXT/?uri=CELEX:31995L0046, aufgerufen am 13. März 2025 9https://web.archive.org/web/20180401002313/https://www.gesetze-im-internet.de/bdsg_1990/, aufgerufen am 13. März 2025 14 / 25 Personenbezogene Daten nach DSGVO Personenbezogene Daten sind nach Art. 4 DSGVO alle Daten „...die sich auf eine identifizierte oder identifizierbare natürliche Person beziehen", "source": "infoSicherheit_merged.pdf", "start": 6000, "end": 7200}
{"text": "(Website zur Administration der Datenbank) verfügbar. Diese Website enthält weder ein Login noch einen Disclaimer. Findige Studierende haben die Website entdeckt und die Datenbank kopiert. 11 / 25 Datenschutz in Europa 12 / 25 Datenschutz – Einleitung ▶Grundlage bildet das Recht auf informationelle Selbstbestimmung (Volkszählungsurteil des Bundesverfassungsgerichtes von 19836). ▶Ziel ist der Schutz des Persönlichkeitsrechts und somit personenbezogener Daten. ▶Jeder Mensch kann selbst über die Verwendung und Preisgabe ihn betreffender Daten entscheiden. ▶Geschützt werden also nicht Daten, sondern die Freiheit der Menschen, selbst zu entscheiden, wer was wann und bei welcher Gelegenheit über sie weiß. Vgl. Reinhard et al., 2007 6https://web.archive.org/web/20101116085553/http: //zensus2011.de/fileadmin/material/pdf/gesetze/volkszaehlungsurteil_1983.pdf, aufgerufen am 13. März 2025 13 / 25 Datenschutz – Gesetzgebung in Europa ▶Die Europäische Datenschutz-Grundverordnung (DSGVO)7 ist nach der Übergangsphase von zwei Jahren ab dem 25. Mai 2018 europaweit geltendes Recht. ▶Die DSGVO löst eine seit 1995 geltende EU-Richtlinie 95/46/EG8 ab und ersetzt nationale Datenschutzgesetze (z. B. Bundesdatenschutzgesetz (BDSG)9) durch unmittelbar geltendes EU-Recht. 7https://eur-lex.europa.eu/legal-content/DE/TXT/?uri=CELEX:32016R0679, aufgerufen am 13. März 2025 8https://eur-lex.europa.eu/legal-content/DE/TXT/?uri=CELEX:31995L0046, aufgerufen am 13. März 2025 9https://web.archive.org/web/20180401002313/https://www.gesetze-im-internet.de/bdsg_1990/, aufgerufen am 13. März 2025 14 / 25 Personenbezogene Daten nach DSGVO Personenbezogene Daten sind nach Art. 4 DSGVO alle Daten „...die sich auf eine identifizierte oder identifizierbare natürliche Person beziehen ...“10. ▶Identifikation passiert durch „...direkt oder indirekt, insbesondere mittels Zuordnung zu einer Kennung wie einem Namen, zu einer Kennnummer, zu Standortdaten, zu einer Online-Kennung oder zu einem oder mehreren besonderen Merkmalen ...“10. ▶Solche Kennungen müssen „...Ausdruck der physischen, physiologischen, genetischen, psychischen, wirtschaftlichen, kulturellen oder sozialen Identität dieser natürlichen Person ...“10 sein. ▶Beispiele: Namen, Adressen, Gesundheitsdaten, Kontonummern, IP-Adressen 10Artikel 4 in https://eur-lex.europa.eu/legal-content/DE/TXT/?uri=CELEX:32016R0679, aufgerufen am 13. März 2025 15 / 25 Geldbußen und Zertifizierung nach DSGVO ▶Deutliche Erhöhung des Rahmens für Geldbußen: bis zu 20.000.000¤ bzw. bei Unternehmen bis zu 4% des gesamten weltweit erzielten Jahresumsatzes des vorangegangenen Geschäftsjahres ▶Art. 42 und 43 DSGVO legen rechtlichen Grundstein für europäisch einheitliche Akkreditierungs- und Zertifizierungsverfahren, die dazu dienen, die Einhaltung der DSGVO bei Verarbeitungsvorgängen nachzuweisen. 16 / 25 Grundsätze der DSGVO I Art. 5 Abs. 1 DSGVO beschreibt „Grundregeln“ für die Verarbeitung von personenbezogenen Daten DSGVO: ▶Rechtmäßigkeit der Verarbeitung (konkretisiert in Art. 6 DSGVO: Verbot mit Erlaubnisvorbehalt, Rechtsgrundlage, Einwilligung) ▶Verarbeitung nach Treu und Glauben: Redlichkeit, Anständigkeit ▶Transparenz: Auskunftsrecht nach Art. 15 Abs. 1 DSGVO, data protection by design11, data protection by default ▶Zweckbindung 11ISO 31700, https://www.iso.org/standard/84977.html, aufgerufen am 13. März 2025 17 / 25 Grundsätze der DSGVO II I ▶Integrität und Vertraulichkeit (konkretisiert in Art. 32 DSGVO: geeignete technische und organisatorische Maßnahmen) ▶Richtigkeit der Datenverarbeitung (konkretisiert in Art. 16 DSGVO: Unverzügliche Berichtigung) ▶Datenminimierung (früher „Datenvermeidung und Datensparsamkeit“ nach BDSG) ▶Speicherbegrenzung (zeitlich, Archivierung ausgeschlossen) 18 / 25 IT-Sicherheit in der DSGVO ▶Schutzbedarf richtet sich nach ▶Stand der Technik, ▶Umsetzungskosten, ▶Eintrittswahrscheinlichkeit und ▶Risiko „...für die Rechte und Freiheiten natürlicher Personen ...“12. ▶„...geeignete technische und organisatorische Maßnahmen, um ein dem Risiko angemessenes Schutzniveau zu gewährleisten ...“12 ▶Konkret verpflichtend: Pseudonymisierung, Verschlüsselung, Backups 12Artikel 32 in https://eur-lex.europa.eu/legal-content/DE/TXT/?uri=CELEX:32016R0679, aufgerufen am 13. März 2025 19 / 25 IT-Sicherheit in der DSGVO – PDCA-Zyklus Ä n d er u n g a n U m g e b u n g R is ik e n b e w er te n M a ß n a h m e n N a c h w ei s e er br in g e n S c h ut z b e d ar f fe st st el le n P r o z e s s e n , T e c h ni k i m pl e m e n ti e r e n Abbildung selbst erstellt 20 / 25 Zusammenfassung 21 / 25 Zusammenfassung ▶Verankerung der Informationssicherheit im deutschen Recht definiert ▶Grundlagen der europäischen Datenschutz-Grundverordnung eingeführt 22 / 25 Weiterführende Literatur 23 / 25 Weiterführende Literatur ▶IT-Sicherheit – Konzepte - Verfahren - Protokolle, Kapitel 1.3.3 von Eckert (2023) ▶Handbuch Datenschutz und IT-Sicherheit von Schläger und Thode (2022) 24 / 25 Literatur I Eckert, C. (2023). IT-Sicherheit: Konzepte - Verfahren - Protokolle (11. Aufl.). De Gruyter Oldenbourg. (Siehe S. 24). Reinhard, T., Pohl, L., & Capellaro, H.-C. (2007). IT-Sicherheit und Recht: Rechtliche und technisch-organisatorische Aspekte für Unternehmen. Erich Schmidt Verlag. (Siehe S. 8–10, 13). Schläger, U., & Thode, J.-C. (2022). Handbuch Datenschutz und IT-Sicherheit (2. Aufl.). Erich Schmidt Verlag GmbH & Co. KG Berlin. (Siehe S. 24). 25 / 25 Informationssicherheit – SoSe 2025 Symmetrische kryptographische Verfahren: Grundlagen, AES Prof. Dr. Holger Schmidt holger.schmidt004[at]fh-dortmund.de Fachhochschule Dortmund Fachbereich Informatik Professur für IT-Sicherheit, Informatik 18. März 2025, 10:39:38 1 / 45 Themen & Lernziele 2 / 45 Themen ▶Kerckhoffsches Prinzip ▶Alice-Bob-Mallory-Modell ▶Grundlegende Angriffsarten ▶Schlüssellängen ▶One-Time-Pad ▶Advanced Encryption Standard (AES) ▶PKCS#7 Padding ▶CBC und CTR Modi 3 / 45 Lernziele Die Studierenden sind in der Lage, ▶grundlegende Begriffe der symmetrischen Kryptographie zu differenzieren und zu erklären. ▶AES, CTR, CBC und PKCS#7 zu erklären und anzuwenden. 4 / 45 Motivation Kryptographie ist alltäglich: HTTPS mit (a)symmetrischen Verfahren, Schlüsselaustausch, Hashing 5 / 45 Kryptographie Symmetrische Verschlüsselung: Grundlagen Dieser Abschnitt basiert auf Schmeh, 2016, Teil 1 – Kapitel 4.1 und Teil 2 – Kapitel 7. Aufgrund der Präsentation als Folien und Notizen sind die Texte der Quelle typischerweise paraphrasiert. 6 / 45 Symmetrische Verschlüsselung ▶Schutzziel: Vertraulichkeit ▶Algorithmus in den ein geheimer Schlüssel mit einfließt ▶Ver-/Entschlüsselungsalgorithmus (Cipher, Chiffre) Abbildung 4-1 aus Schmeh, 2016 7 / 45 Kerckhoffs Prinzip Die Sicherheit eines Verschlüsselungsalgorithmus basiert auf der Geheimhaltung des Schlüssels, nicht auf der Geheimhaltung des Algorithmus. Gegenteil: Security by Obscurity 8 / 45 Klartext, Geheimtext, Schlüssel ▶m ist der Klartext, e der Verschlüsselungsalgorithmus, d der Entschlüsselungsalgorithmus, c der Geheimtext, k der geheime Schlüssel ▶Verschlüsselungsalgorithmus: e(m, k) = c ▶Entschlüsselungsalgorithmus: d(c, k) = m Dies ist ein unverschlüsselter Text. Dies ist ein unverschlüsselter Text. KJdFsfd5hb 8Hf60Bd43 nf5bJFDS4gb Klartext Klartext Geheimtext Schlüssel Schlüssel Abbildung 4-2 aus Schmeh, 2016 9 / 45 Alice-Bob-Mallory-Modell Alice Mallory Bob Angelehnt an Abbildung 2-1 aus Schmeh, 2016 10 / 45 Angriffe ▶Voraussetzung: Verschlüsselungsalgorithmus ist bekannt. ▶Kennt Mallory den Klartext nicht, dann sprechen wir von einem Ciphertext-Only Angriff. ▶Kennt Mallory den Klartext und versucht, für das Entschlüsseln weiterer Nachrichten den Schlüssel zu erfahren, dann sprechen wir von einem Known-Plaintext Angriff. ▶Will Mallory den Schlüssel herausfinden und hat dabei die Möglichkeit, den Klartext selbst zu wählen, so sprechen wir von einem Chosen-Plaintext Angriff. ▶Mallory hat die Möglichkeit den Schlüssel durch ausprobieren herauszufinden. Wir sprechen dann von einem Brute-Force Angriff (welcher auf einem Ciphertext-Only Angriff aufbaut). 11 / 45 Eigenschaften von symmetrischen kryptographischen Verfahren ▶Kerckhoffs Prinzip ▶Es darf keinen besseren Angriff als Brute Force geben. ▶Das Verfahren muss ein Zufallsorakel (bzw. Konfusion) bilden, d. h. es darf keinen erkennbaren (statistischen) Zusammenhang zwischen Eingabe (Klartext und Schlüssel) und Ausgabe (Geheimtext) geben. ▶Avalanche-Effekt bzw. (Diffusion): Änderung eines Klartext-Bits führt im Durchschnitt zur Änderung der Hälfte der Geheimtext-Bits 12 / 45 Schlüssellängen ▶Wir betrachten einen symmetrischen Verschlüsselungsalgorithmus, bei dem Brute Force der beste Angriff ist. ▶Bei 56 Bit (wie beim veralteten Data Encryption Standard (DES) (FIPS-46-3, 1999)) liegt der Brute Force Rekord bei 22 Stunden (Kumar, Paar, Pelzl, Pfeiffer, Rupp & Schimmler, 2006). ▶Mit jedem Bit verdoppelt sich der Aufwand für Brute Force. ▶Bei 128 Bit gibt es 2128 = 3, 4 · 1038 Schlüssel. Mallory im Glück Wenn Mallory 100 spezielle Computer verwendet, die jeweils 100 Milliarden Schlüssel pro Sekunde durchprobieren können (z. B. Copacobana und Rivyera von", "source": "infoSicherheit_merged.pdf", "start": 7000, "end": 8200}
{"text": "sprechen wir von einem Known-Plaintext Angriff. ▶Will Mallory den Schlüssel herausfinden und hat dabei die Möglichkeit, den Klartext selbst zu wählen, so sprechen wir von einem Chosen-Plaintext Angriff. ▶Mallory hat die Möglichkeit den Schlüssel durch ausprobieren herauszufinden. Wir sprechen dann von einem Brute-Force Angriff (welcher auf einem Ciphertext-Only Angriff aufbaut). 11 / 45 Eigenschaften von symmetrischen kryptographischen Verfahren ▶Kerckhoffs Prinzip ▶Es darf keinen besseren Angriff als Brute Force geben. ▶Das Verfahren muss ein Zufallsorakel (bzw. Konfusion) bilden, d. h. es darf keinen erkennbaren (statistischen) Zusammenhang zwischen Eingabe (Klartext und Schlüssel) und Ausgabe (Geheimtext) geben. ▶Avalanche-Effekt bzw. (Diffusion): Änderung eines Klartext-Bits führt im Durchschnitt zur Änderung der Hälfte der Geheimtext-Bits 12 / 45 Schlüssellängen ▶Wir betrachten einen symmetrischen Verschlüsselungsalgorithmus, bei dem Brute Force der beste Angriff ist. ▶Bei 56 Bit (wie beim veralteten Data Encryption Standard (DES) (FIPS-46-3, 1999)) liegt der Brute Force Rekord bei 22 Stunden (Kumar, Paar, Pelzl, Pfeiffer, Rupp & Schimmler, 2006). ▶Mit jedem Bit verdoppelt sich der Aufwand für Brute Force. ▶Bei 128 Bit gibt es 2128 = 3, 4 · 1038 Schlüssel. Mallory im Glück Wenn Mallory 100 spezielle Computer verwendet, die jeweils 100 Milliarden Schlüssel pro Sekunde durchprobieren können (z. B. Copacobana und Rivyera von Kumar et al., 2006) und Mallory mit viel Glück nach 1% Durchprobieren von Schlüsseln erfolgreich ist, dann benötigt er 3, 4 · 1023 Sekunden, d. h. 1016 Jahre. Wie alt ist das Universum? 13 / 45 Schlüssellängen / Brute-Force Schlüssellänge Anzahl der Schlüssel Dauer Brute-Force 40 Bit 1,1 ×1012 1,3 Sekunden 56 Bit 7,1 ×1016 24 Stunden 64 Bit 1,8 ×1019 256 Tage 80 Bit 1,2 ×1024 45.965 Jahre 128 Bit 3,4 ×1038 1,3 ×1019 Jahre 192 Bit 6,3 ×1057 2,4 ×1038 Jahre 256 Bit 1,2 ×1077 4,4 ×1057 Jahre ▶„Sicherheitsaufschlag“ ▶Viele Angriffe funktionieren bei kürzeren Schlüsseln besser 14 / 45 One-Time-Pad ▶Zufälliger Schlüssel, der genauso lang wie der Klartext ist ▶Klartext bitweise XOR-verknüpft mit Schlüssel ergibt Geheimtext ▶Das One-Time-Pad ist sicher (Shannon, 1949). ▶Praktische Probleme: ▶Schlüssellänge = Klartextlänge ▶Produktion von reinem Zufall in ausreichender Menge 15 / 45 Strom- und Blockchiffre Stromchiffre Startwert Schlüssel (seed) generator Pseudozufalls- Klartext Geheimtext Abbildung 16-1 aus Schmeh, 2016 Blockchiffre ▶zerlegt Klartext in Blöcke gleicher, fester Länge. ▶verschlüsselt blockweise abhängig von Block Modus oder erzeugt eine Stromchiffre 16 / 45 Kryptographie Advanced Encryption Standard (AES) Dieser Abschnitt basiert auf Schmeh, 2016, Teil 2 – Kapitel 10. Aufgrund der Präsentation als Folien und Notizen sind die Texte der Quelle typischerweise paraphrasiert. 17 / 45 Advanced Encryption Standard (AES) ▶Blockchiffre, SP-Chiffre ▶Ende der 1990er von Vincent Rijmen und Joan Daemen im Rahmen eines NIST-Wettbewerbs entwickelt ▶Vom NIST standardisiert (FIPS-197, 2023) ▶128 Bit Blocklänge ▶128 (10 Runden), 192 (12 Runden) oder 256 (14 Runden) Bit Schlüssellänge 18 / 45 Advanced Encryption Standard (AES) – Repräsentation von Bytes ▶128 Bit Klartextblock wird spaltenweise in eine 4 × 4-Matrix M überführt: M =     b00 b01 b02 b03 b10 b11 b12 b13 b20 b21 b22 b23 b30 b31 b32 b33     ▶Jedes Byte bij wird als Element des Galois-Körpers1 F28 und damit in der Form a7x7 + a6x6 + a5x5 + a4x4 + a3x3 + a2x2 + a1x1 + a0 mit ai ∈{0, 1} = F2 repräsentiert. ▶Die Polynomdarstellung lässt sich mithilfe der Koeffizientenwerte als Bit-Folge a7a6 . . . a0 repräsentieren. 1Ein Galois-Körper Fq ist ein Körper mit einer endlichen Anzahl von q = pn Elementen, mit p Primzahl und n ∈N. p heißt Charakteristik von Fq. Grundlagen zu algebraischen Strukturen befinden sich im Anhang. 19 / 45 Advanced Encryption Standard (AES) – Funktionsweise 1. Schlüsselaufbereitung (Erzeugung von Rundenschlüsseln) 2. AddRoundKey (Whitening) 3. Wiederholte (9-, 11-, 13-fache) Ausführung von 3.1. SubBytes (Substitution via S-Box, verändert die bij) 3.2. ShiftRows (Zeilenweise Permutation, verändert die Struktur von M) 3.3. MixColumns (Spaltenweise Permutation, verändert sowohl die Struktur von M als auch die bij) 3.4. AddRoundKey (XOR mit Rundenschlüssel, verändert die bij) 4. Abschließend wird nochmal wiederholt ausgeführt (jedoch ohne MixColumns) Alle Teiloperationen sind invertierbar, daher ist AES invertierbar. 20 / 45 Advanced Encryption Standard (AES) – Beispiel Eingabe Berechnung des ersten, mit AES verschlüsselten Byte (erste Zeile, erste Spalte) ohne AddRoundKey am Rundenende für folgenden Block: Klartext L 0. Rundenschlüssel (Whitening zu Beginn bereits angewandt):     1B 31 03 14 35 38 44 54 42 23 23 33 70 51 44 55     21 / 45 Advanced Encryption Standard (AES) – Beispiel SubBytes SubBytes entspricht einer byte-weisen Substitution via S-Box (FIPS-197, 2023, S. 14, Table 4) SubBytes(1B) = AF SubBytes(38) = 07 SubBytes(23) = 26 SubBytes(55) = FC 22 / 45 Advanced Encryption Standard (AES) – Beispiel ShiftRows ShiftRows entspricht einer byte-weisen Zeilenrotation nach links (FIPS-197, 2023, S. 14, 5.1.2)     AF . . . . . . . . . 07 . . . . . . . . . 26 . . . . . . . . . FC . . . . . . . . .     23 / 45 Advanced Encryption Standard (AES) – Beispiel MixColums I MixColums entspricht einer Multiplikation (von links) mit Spaltenmixmatrix (FIPS-197, 2023, S. 15, 5.1.3) (2 · AF) ⊕(3 · 07) ⊕(1 · 26) ⊕(1 · FC) ▶Ergebnis ist gesuchtes, erstes AES verschlüsseltes Byte (vor abschließendem Whitening und nach Anwendung erster Runde) ▶Multiplikation mit 1 entspricht Identität, also trivial 24 / 45 Advanced Encryption Standard (AES) – Beispiel MixColums II (2 · AF) = 000000102 · 101011112 = x · (x7 + x5 + x3 + x2 + x + 1) = x8 + x6 + x4 + x3 + x2 + x ▶Reduktion (XOR oder Polynomdivision) mittels irreduziblem Polynom, da Polynomgrad > 7 x8 + x6 + x4 + x3 + x2 + x ≡x6 + x2 −1 (mod x8 + x4 + x3 + x + 1) 2 ▶Umrechnung des Polynoms ergibt: x6 + x2 −1 = 010001012 = 45 25 / 45 Advanced Encryption Standard (AES) – Beispiel MixColums III (3 · 07) = 000000112 · 000001112 = (x + 1) · (x2 + x + 1) = x3 + 1 // (2xn wird zu 0) ▶Das Polynom hat Grad 3 und muss daher nicht reduziert werden. ▶Umrechnung des Polynoms ergibt: x3 + 1 = 000010012 = 09 ▶Ergebnis: 45 ⊕09 ⊕26 ⊕FC = 96 2a ≡b (mod m) bzw. gesprochen: „a ist kongruent b modulo m“ bedeutet a mod m = b mod m für a, b ∈Z, m ∈N 26 / 45 Advanced Encryption Standard (AES) – Schlüsselaufbereitung ' ' ' ' Zerlegung in Spalten Angelehnt an Abbildung 8-1 aus Schmeh, 2016 ▶A′ = A ⊕SubBytes( RotWord(D)) ⊕Rcon[1] ▶B′ = A′ ⊕B ▶C′ = B′ ⊕C ▶D′ = C′ ⊕D 27 / 45 Advanced Encryption Standard (AES) – Kryptoanalyse ▶Brute Force aufgrund von 128 Bit Schlüssellänge nicht praktikabel ▶Es existieren Angriffe gegen 7 Runden bei 128 Bit, 8 Runden bei 192 Bit und 9 Runden bei 256 Bit Schlüssellänge (Ferguson, Kelsey, Lucks, Schneier, Stay, Wagner & Whiting, 2001). ▶Brute Force ist nicht der beste Angriff auf AES (Bogdanov, Khovratovich & Rechberger, 2011). ▶Kein Angriff mit praktischer Bedeutung bekannt 28 / 45 PKCS#7 Padding ▶Problem: Klartext ggf. kein ganzzahliges Vielfaches von Blocklänge ▶Lösung: Klartext wird aufgefüllt (Padding) ▶PKCS#7", "source": "infoSicherheit_merged.pdf", "start": 8000, "end": 9200}
{"text": "+ 1) · (x2 + x + 1) = x3 + 1 // (2xn wird zu 0) ▶Das Polynom hat Grad 3 und muss daher nicht reduziert werden. ▶Umrechnung des Polynoms ergibt: x3 + 1 = 000010012 = 09 ▶Ergebnis: 45 ⊕09 ⊕26 ⊕FC = 96 2a ≡b (mod m) bzw. gesprochen: „a ist kongruent b modulo m“ bedeutet a mod m = b mod m für a, b ∈Z, m ∈N 26 / 45 Advanced Encryption Standard (AES) – Schlüsselaufbereitung ' ' ' ' Zerlegung in Spalten Angelehnt an Abbildung 8-1 aus Schmeh, 2016 ▶A′ = A ⊕SubBytes( RotWord(D)) ⊕Rcon[1] ▶B′ = A′ ⊕B ▶C′ = B′ ⊕C ▶D′ = C′ ⊕D 27 / 45 Advanced Encryption Standard (AES) – Kryptoanalyse ▶Brute Force aufgrund von 128 Bit Schlüssellänge nicht praktikabel ▶Es existieren Angriffe gegen 7 Runden bei 128 Bit, 8 Runden bei 192 Bit und 9 Runden bei 256 Bit Schlüssellänge (Ferguson, Kelsey, Lucks, Schneier, Stay, Wagner & Whiting, 2001). ▶Brute Force ist nicht der beste Angriff auf AES (Bogdanov, Khovratovich & Rechberger, 2011). ▶Kein Angriff mit praktischer Bedeutung bekannt 28 / 45 PKCS#7 Padding ▶Problem: Klartext ggf. kein ganzzahliges Vielfaches von Blocklänge ▶Lösung: Klartext wird aufgefüllt (Padding) ▶PKCS#7 Padding ist in RFC 56523 standardisiert. ▶Byte-weises Padding ▶Wert der Padding-Bytes entspricht Anzahl fehlender Bytes, z. B. fehlen zwei Bytes so wird mit zwei Bytes mit Wert 02h aufgefüllt ▶Falls Klartext ganzzahliges Vielfaches von Blocklänge, dann wird Block mit 16 00h Bytes angehängt 3https://www.rfc-editor.org/rfc/rfc5652#section-6.3, 18. März 2025 29 / 45 Counter (CTR) Modus Standard (NIST SP 800-38A, 2001) Funktionalität iv bestehe aus nonce|counter mit counter = 0. Dann gilt: c = c0|c1| · · · = e(iv, k) ⊕m0|e(nonce|counter + 1, k) ⊕m1| . . . bzw. m = m0|m1| · · · = c0 ⊕e(iv, k)|c1 ⊕e(nonce|counter + 1, k)| . . . Anwendungshinweise Strombasiert, dadurch Geheim- gleich Klartextlänge und nur Verschlüsselungsfunktion für Ver-/Entschlüsselung notwendig Wertebereich des Counter muss ausreichend groß sein nonce (number used once) ist Zufallszahl, die nach Nutzung des Counter Wertebereichs erneuert werden muss 30 / 45 Cipher Block Chaining (CBC) Modus Standard (NIST SP 800-38A, 2001) Funktionalität Sei iv eine nonce. Dann gilt: c = c0|c1| · · · = e(m0 ⊕iv, k)|e(m1 ⊕c0, k)| . . . bzw. m = m0|m1| · · · = d(c0, k) ⊕iv|d(c1, k) ⊕c0| . . . Anwendungshinweise Geheimtexte mehrerer identischer Klartextblöcke sind i. A. nicht gleich Klartextmuster im Geheimtext nicht sichtbar Keine Wiederverwendung von nonce unter gleichem Schlüssel Padding oracle Angriffe (Vaudenay, 2002), Padre4 4https://github.com/glebarez/padre, 18. März 2025 31 / 45 Fallstricke und Anwendungshinweise ▶DES (FIPS-46-3, 1999) nicht verwenden ▶ECB (NIST SP 800-38A, 2001) nicht verwenden ▶PKCS#55 und ZeroByte-Padding (ISO/IEC 9797-1, ISO/IEC 10118-1) nicht verwenden 5https://www.rfc-editor.org/rfc/rfc1423, 18. März 2025 32 / 45 Quantencomputer ▶Quantencomputer basiert auf Quantenmechanik ▶Bisher existiert keine praktikable Implementierung eines Quantencomputers6. ▶Unentscheidbarkeit unbeeinflusst ▶Bisher existiert kein Beweis, dass Quantencomputer prinzipiell schneller als gewöhnliche Computer sind. ▶Wissenschaft ist sich einig7, dass Existenz von Quantencomputer, die praktisch relevante Probleme lösen, nur eine Frage der Zeit ist 6https://www.bsi.bund.de/DE/Themen/Unternehmen-und-Organisationen/Informationen-und-Empfehlun gen/Quantentechnologien-und-Post-Quanten-Kryptografie/Entwicklungsstand-Quantencomputer/entwicklu ngsstand-quantencomputer_node.html, aufgerufen am 18. März 2025 7https://www.bsi.bund.de/DE/Themen/Unternehmen-und-Organisationen/Informationen-und-Empfehlun gen/Quantentechnologien-und-Post-Quanten-Kryptografie/quantentechnologien-und-quantensichere-krypt ografie_node.html, aufgerufen am 18. März 2025 33 / 45 Quantencomputer und symmetrische Kryptographie ▶Vorbereitung für Quantencomputer-Zeitalter bereits jetzt, aufgrund „store now, decrypt later“ und langwieriger Migration8 ▶Symmetrische Verfahren durch Grover-Algorithmus (Grover, 1996) bedroht, womit Brute Force auf 2n Schlüssel in 2 n 2 Schritten möglich ▶D. h. AES 128/192 Bit nicht sicher, 256 Bit jedoch langfristig als sicher angesehen9 8https://www.bsi.bund.de/SharedDocs/Downloads/EN/BSI/Crypto/PQC-joint-statement.pdf?__blob=publ icationFile&v=5, aufgerufen am 18. März 2025 9https://www.bsi.bund.de/SharedDocs/Downloads/DE/BSI/Publikationen/Broschueren/Kryptografie-qua ntensicher-gestalten.pdf?__blob=publicationFile&v=6, aufgerufen am 18. März 2025 34 / 45 Zusammenfassung 35 / 45 Zusammenfassung ▶Grundlegende Begriffe der symmetrischen Kryptographie definiert ▶AES, PKCS#7, CTR und CBC vorgestellt 36 / 45 Weiterführende Literatur 37 / 45 Weiterführende Literatur ▶Kryptografie – Verfahren - Protokolle - Infrastrukturen, Kapitel 8 und 10 von Schmeh (2016) ▶IT-Sicherheit – Konzepte - Verfahren - Protokolle, Kapitel 7.5.5 von Eckert (2023) ▶https://www.cryptool.org/en/cto/aes-animation, aufgerufen am 18. März 2025 38 / 45 Literatur I Bogdanov, A., Khovratovich, D., & Rechberger, C. (2011).Biclique Cryptanalysis of the Full AES. Proceedings of the 17th International Conference on The Theory and Application of Cryptology and Information Security, 344–371 (siehe S. 28). Eckert, C. (2023). IT-Sicherheit: Konzepte - Verfahren - Protokolle (11. Aufl.). De Gruyter Oldenbourg. (Siehe S. 38). Ferguson, N., Kelsey, J., Lucks, S., Schneier, B., Stay, M., Wagner, D., & Whiting, D. (2001).Improved Cryptanalysis of Rijndael. Fast Software Encryption: 7th International Workshop, FSE 2000 New York, NY, USA, April 10–12, 2000 Proceedings, 213–230 (siehe S. 28). FIPS-197. (2023). Federal Information Processing Standards Publication (FIPS 197). Advanced Encryption Standard (AES). https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.197-upd1.pdf (siehe S. 18, 22–24). 39 / 45 Literatur II FIPS-46-3. (1999). Federal Information Processing Standards Publication (FIPS 46-3). Data Encryption Standard (DES). https://csrc.nist.gov/publications/fips/fips46-3/fips46-3.pdf (siehe S. 13, 32). Grover, L. K. (1996).A Fast Quantum Mechanical Algorithm for Database Search. Proceedings of the Twenty-eighth Annual ACM Symposium on Theory of Computing, 212–219 (siehe S. 34). Kumar, S., Paar, C., Pelzl, J., Pfeiffer, G., Rupp, A., & Schimmler, M. (2006).How to Break DES for ¤ 8,980. International Workshop on Special-Purpose Hardware for Attacking Cryptographic Systems — SHARCS’06, Cologne, Germany (siehe S. 13). NIST SP 800-38A. (2001). NIST Special Publication 800-38A. Recommendation for Block Cipher Modes of Operation – Methods and Techniques. https://nvlpubs.nist.gov/nistpubs/Legacy/SP/ nistspecialpublication800-38a.pdf (siehe S. 30–32). 40 / 45 Literatur III Schmeh, K. (2016). Kryptografie – Verfahren - Protokolle - Infrastrukturen (6. Aufl.). dpunkt.verlag. (Siehe S. 6, 7, 9, 10, 16, 17, 27, 38). Shannon, C. (1949).Communication Theory of Secrecy Systems. Bell System Technical Journal, 28(4), 656–715 (siehe S. 15). Vaudenay, S. (2002).Security Flaws Induced by CBC Padding - Applications to SSL, IPSEC, WTLS .... Proceedings of the International Conference on the Theory and Applications of Cryptographic Techniques: Advances in Cryptology, 534–546 (siehe S. 31). 41 / 45 Anhang Algebraische Strukturen 42 / 45 Gruppen Gruppe Eine Gruppe (G, •, e) besteht aus einer Menge G, einer Operation • : G × G →G und einem Element e ∈G, sodass folgende Axiome erfüllt sind: G1 (g • h) • k = g • (h • k) für alle g, h, k ∈G (Assoziativgesetz), G2 g • e = e • g = g für alle g ∈G (Neutrales Element) und G3 Zu jedem g ∈G gibt es ein h ∈G mit g • h = h • g = e (Inverses Element). Gilt außerdem g • h = h • g für alle g, h ∈G, so heißt G abelsch oder kommutativ. Ist G endlich, so heißt |G| die Ordnung der Gruppe G. 43 / 45 Ringe Ring Ein Ring (R, +, 0, ·, 1) besteht aus einer Menge R, zwei Operationen + : R × R →R sowie · : R × R →R und zwei Elementen 0, 1 ∈R mit 0 ̸= 1, sodass folgende Axiome erfüllt sind: R1 (R, +, 0) ist eine abelsche Gruppe, R2 (x · y) · z = x · (y · z) für alle x, y, z ∈R (· ist assoziativ), R3 x · 1 = 1 · x = x für alle x ∈R (Einselement von ·) und R4 x · (y + z) = x · y + x · z und (x + y) · z = x · z + y · z für alle x, y, z", "source": "infoSicherheit_merged.pdf", "start": 9000, "end": 10200}
{"text": "k ∈G (Assoziativgesetz), G2 g • e = e • g = g für alle g ∈G (Neutrales Element) und G3 Zu jedem g ∈G gibt es ein h ∈G mit g • h = h • g = e (Inverses Element). Gilt außerdem g • h = h • g für alle g, h ∈G, so heißt G abelsch oder kommutativ. Ist G endlich, so heißt |G| die Ordnung der Gruppe G. 43 / 45 Ringe Ring Ein Ring (R, +, 0, ·, 1) besteht aus einer Menge R, zwei Operationen + : R × R →R sowie · : R × R →R und zwei Elementen 0, 1 ∈R mit 0 ̸= 1, sodass folgende Axiome erfüllt sind: R1 (R, +, 0) ist eine abelsche Gruppe, R2 (x · y) · z = x · (y · z) für alle x, y, z ∈R (· ist assoziativ), R3 x · 1 = 1 · x = x für alle x ∈R (Einselement von ·) und R4 x · (y + z) = x · y + x · z und (x + y) · z = x · z + y · z für alle x, y, z ∈R (Distributivität). Gilt außerdem x · y = y · x für alle x, y ∈R, so heißt R ein kommutativer Ring. 44 / 45 Körper und Galois-Körper Körper Ein Körper (eng. field) ist ein kommutativer Ring, in dem jedes Element außer der 0 invertierbar ist. Galois-Körper Ein Galois-Körper Fq ist ein Körper mit einer endlichen Anzahl q = pn von Elementen, wobei p eine Primzahl und n ∈N sind. p heißt Charakteristik von Fq. 45 / 45 Informationssicherheit – SoSe 2025 Kryptographische Verfahren: Hashing & MAC Prof. Dr. Holger Schmidt holger.schmidt004[at]fh-dortmund.de Fachhochschule Dortmund Fachbereich Informatik Professur für IT-Sicherheit, Informatik 13. März 2025, 07:34:19 1 / 30 Themen & Lernziele 2 / 30 Themen ▶Grundlagen Hashing und MAC ▶Grundlegende Angriffsarten und Kryptoanalyse ▶Merkle-Damgård-Konstruktion ▶SHA-2 Familie ▶SHA-3 Familie 3 / 30 Lernziele Die Studierenden sind in der Lage, ▶Grundlagen der Themen Hashing und MAC zu differenzieren und zu erklären. ▶SHA-2 und SHA-3 zu erklären und anzuwenden. 4 / 30 Kryptographie Kryptographische Hashfunktionen Dieser Abschnitt basiert auf Schmeh, 2016, Teil 2 – Kapitel 16. Aufgrund der Präsentation als Folien und Notizen sind die Texte der Quelle typischerweise paraphrasiert. 5 / 30 Kryptographische Hashfunktionen I ▶Schutzziel: Integrität ▶H ist die Hashfunktion, h der Hashwert, m das zu hashende Dokument (Urbild) ▶Hashfunktion: H(m) = h (deterministisch) ▶Anwendung z. B. im Kontext digitaler Signaturen Dies ist ein beliebiger Text. Urbild kryptografische Hashfunktion Hashwert (z.B. 160 Bit) Abbildung 16-1 aus Schmeh, 2016 6 / 30 Kryptographische Hashfunktionen II ▶h hat eine feste Länge (abhängig von der Hashfunktion), z. B. 256 Bit ▶m hat eine beliebige Länge ▶Nichtkryptographische Hashfunktionen: ▶4-stellige natürliche Zahl ergänzt um eine weitere Stelle als Hash ▶z. B. Quersumme der 4 Stellen als Hashwert ▶10.000 Urbilder gegenüber 10 Hashwerten führt dazu, dass mehreren Urbildern der gleiche Hashwert zugeordnet wird (Kollision) ▶Kryptographische Hashfunktionen sind so konstruiert, dass Angreifer keine Kollisionen verursachen können. 7 / 30 Kryptographische Hashfunktionen III Entwurfsziele: ▶Jeder Hashwert ist gleichwahrscheinlich. ▶Chaos, d. h. kippt ein Bit des Klartextes, dann kippen durchschnittlich die Hälfte aller Bits des Hashwerts. ▶Surjektivität, d. h. alle Hashwerte können erzeugt werden. ▶Effiziente Berechenbarkeit ▶Kompression 8 / 30 Kryptographische Hashfunktionen IV Angriffe: ▶Urbild-Angriff: Finde zu einem vorgegebenen Hashwert hv eine Nachricht m die denselben Hashwert (d. h. hv = H(m)) ergibt. ▶Zweites-Urbild-Angriff: Finde zu einer vorgegebenen Nachricht m eine andere Nachricht m′, sodass sich für beide Nachrichten der gleiche Hashwert (d. h. H(m) = H(m′)) ergibt. ▶Kollisionsangriff: Finde zwei beliebige verschiedene Nachrichten m, m′ mit gleichem Hashwert (d. h. H(m) = H(m′)). ▶Hashfunktionen, die gegen Urbild-Angriffe resistent sind, sind auch gegen Zweites-Urbild-Angriffe resistent. Resistenz gegen Kollisionsangriffe ist dadurch jedoch nicht garantiert. 9 / 30 Kryptographie Message Authentication Code (MAC) Dieser Abschnitt basiert auf Schmeh, 2016, Teil 2 – Kapitel 18.1. Aufgrund der Präsentation als Folien und Notizen sind die Texte der Quelle typischerweise paraphrasiert. 10 / 30 Message Authentication Code (MAC) ▶Schutzziele: Integrität und Authentizität ▶Schlüsselabhängige Hashfunktion ▶M ist die MAC Funktion, v der MAC-Wert, m das zu schützende Dokument, k der Schlüssel ▶MAC Wert berechnen: MAC(m, k) = v ▶Basierend auf Hashfunktion (HMAC) gem. ISO/IEC 9797-2/3 bzw. Chiffre (CMAC) gem. ISO/IEC 9797-1 11 / 30 Kryptographie SHA-2 Familie Dieser Abschnitt basiert auf Schmeh, 2016, Teil 2 – Kapitel 16.3. Aufgrund der Präsentation als Folien und Notizen sind die Texte der Quelle typischerweise paraphrasiert. 12 / 30 SHA (Secure Hash)-2 Familie ▶Kryptographische Hashfunktionen ▶Vom NIST im Jahr 2000 erstmals veröffentlicht (FIPS-180-4, 2015) ▶Spezifiziert in RFC 6234 (https://www.rfc-editor.org/rfc/rfc6234, aufgerufen am 13. März 2025) ▶Große praktische Bedeutung: TLS, IPSec, PGP, S/MIME ▶Urbilder < 264 Bit: SHA-224 m. Hashwertlänge 224 Bit, SHA-256 m. Hashwertlänge 256 Bit ▶Urbilder < 2128 Bit: SHA-384 m. Hashwertlänge 384 Bit, SHA-512 m. Hashwertlänge 512 Bit, SHA-512/224 m. Hashwertlänge 224 Bit, SHA-512/256 m. Hashwertlänge 256 Bit 13 / 30 SHA-2 ist Merkle-Damgård Konstruktion IV Hash f f f f Block 3 Block 2 Block 1 Block n Padding Daten Abbildung aus Tremmel, 2021 ▶SHA-224, SHA-256: 512 Bit Blocklänge, interne Verarbeitung von 32 Bit Wörtern ▶SHA-384, SHA-512 Varianten: 1024 Bit Blocklänge, interne Verarbeitung von 64 Bit Wörtern 14 / 30 SHA-224, SHA-256 Rundenfunktion Wt K t Ch Ma Σ1 Σ0 A B C D E F G H A B C D E F G H SHA-224, SHA-256 Rundenfunktion, https://en.wikipedia.org/wiki/SHA-2, aufgerufen am 13. März 2025, lizensiert unter CC BY 3.01 1https://creativecommons.org/licenses/by-sa/3.0/ 15 / 30 SHA-224, SHA-256 Rundenfunktion: Operationen und Konstanten ▶Ch(E, F, G) = (E ∧F) ⊞32 (¬E ∧G) ▶Ma(A, B, C) = (A ∧B) ⊞32 (A ∧C) ⊞32 (B ∧C) ▶Σ0(A) = (A >>> 2) ⊞32 (A >>> 13) ⊞32 (A >>> 22) ▶Σ1(E) = (E >>> 6) ⊞32 (E >>> 11) ⊞32 (E >>> 25) 16 / 30 SHA-2 – Kryptoanalyse ▶SHA-2 Familie nicht anfällig für SHA-12 Geburtstagsangriff ▶Urbild-Angriffe (Khovratovich, Rechberger & Savelieva, 2012) und Kollisionsangriffe (Lamberger & Mendel, 2011) für Runden-reduzierte Varianten ▶Length extension attacks (Duong & Rizzo, 2009) 2https://tools.ietf.org/html/rfc3174, aufgerufen am 13. März 2025 17 / 30 Kryptographie SHA-3 Familie Dieser Abschnitt basiert auf Schmeh, 2016, Teil 2 – Kapitel 17.3. Aufgrund der Präsentation als Folien und Notizen sind die Texte der Quelle typischerweise paraphrasiert. 18 / 30 SHA-3 (Keccak)-Algorithmus ▶Kryptographische Hashfunktion ▶Ende der 2010er von Guido Bertoni, Joan Daemen, Michaël Peeters und Gilles Van Assche im Rahmen eines NIST-Wettbewerbs entwickelt ▶Vom NIST standardisiert (FIPS-202, 2015) ▶Keccak/SHA-3-Familie mit 224, 256, 384, 512 Bits ▶Noch selten in der Praxis eingesetzt 19 / 30 SHA-3 (Keccak)-Algorithmus – Status I Status von Keccak ist (5 × 5 × 64)-Bits Array A 0,4,0 A 1,4,0 A 2,4,0 A 3,4,0 A 4,4,0 A 0,3,0 A 0,2,0 A 0,1,0 A 0,0,0 A 1,3,0 A 1,2,0 A 1,1,0 A 1,0,0 A 2,3,0 A 2,2,0 A 2,1,0 A 2,0,0 A 3,3,0 A 3,1,0 A 3,2,0 A 3,0,0 A 4,3,0 A 4,2,0 A 4,1,0 A 4,0,0 A 4,0,63 A 4,4,63 A 0,4,63 Abbildung 16-6 aus Schmeh, 2016 20 / 30 SHA-3 (Keccak)-Algorithmus – Status II ▶Statusgröße von 1600 Bits ▶Senkrechter 5-Bit Block heißt Spalte, ein waagerechter Reihe. ▶Ein nach hinten gehender 64-Bits Block heißt Wort. ▶Die Differenz zwischen Status und Blocklänge heißt Kapazität. ▶Je", "source": "infoSicherheit_merged.pdf", "start": 10000, "end": 11200}
{"text": "& Rizzo, 2009) 2https://tools.ietf.org/html/rfc3174, aufgerufen am 13. März 2025 17 / 30 Kryptographie SHA-3 Familie Dieser Abschnitt basiert auf Schmeh, 2016, Teil 2 – Kapitel 17.3. Aufgrund der Präsentation als Folien und Notizen sind die Texte der Quelle typischerweise paraphrasiert. 18 / 30 SHA-3 (Keccak)-Algorithmus ▶Kryptographische Hashfunktion ▶Ende der 2010er von Guido Bertoni, Joan Daemen, Michaël Peeters und Gilles Van Assche im Rahmen eines NIST-Wettbewerbs entwickelt ▶Vom NIST standardisiert (FIPS-202, 2015) ▶Keccak/SHA-3-Familie mit 224, 256, 384, 512 Bits ▶Noch selten in der Praxis eingesetzt 19 / 30 SHA-3 (Keccak)-Algorithmus – Status I Status von Keccak ist (5 × 5 × 64)-Bits Array A 0,4,0 A 1,4,0 A 2,4,0 A 3,4,0 A 4,4,0 A 0,3,0 A 0,2,0 A 0,1,0 A 0,0,0 A 1,3,0 A 1,2,0 A 1,1,0 A 1,0,0 A 2,3,0 A 2,2,0 A 2,1,0 A 2,0,0 A 3,3,0 A 3,1,0 A 3,2,0 A 3,0,0 A 4,3,0 A 4,2,0 A 4,1,0 A 4,0,0 A 4,0,63 A 4,4,63 A 0,4,63 Abbildung 16-6 aus Schmeh, 2016 20 / 30 SHA-3 (Keccak)-Algorithmus – Status II ▶Statusgröße von 1600 Bits ▶Senkrechter 5-Bit Block heißt Spalte, ein waagerechter Reihe. ▶Ein nach hinten gehender 64-Bits Block heißt Wort. ▶Die Differenz zwischen Status und Blocklänge heißt Kapazität. ▶Je größer die Kapazität, desto (mutmaßlich) sicherer ist Keccak. ▶Die Länge des Hashwerts beträgt die Hälfte der Kapazität. ▶Soll der Hashwert 224 Bits haben, dann muss die Kapazität 448 Bits betragen. ▶Daraus folgt die Blocklänge von 1152 Bits, d. h. das Urbild wird in Blöcke dieser Länge zerlegt (ggfs. mit Padding). 21 / 30 SHA-3 (Keccak)-Algorithmus – Keccak-Schwamm Blocklänge Kapazität Urbildblock Urbildblock Urbildblock Hashwert Status Status Status Abbildung 16-7 aus Schmeh, 2016 22 / 30 SHA-3 (Keccak)-Algorithmus – Kompressionsfunktion ▶Kompressionsfunktion mit 24 Runden mit jeweils 5 Teilrunden: Θ Berechnung von Paritätsbits der Spalten und XOR-Verknüpfung mit benachbarten Spalten. ρ Rotation der Wörter des Status. π Permutation der Wörter des Status. χ XOR-Verknüpfung der Bits einer Reihe. ι XOR-Verknüpfung des Status mit einer Konstante (welche sich in jeder Runde ändert) ▶Runden 1-3 und 5 linear (Diffusion), Runde 4 nicht linear (Konfusion) 23 / 30 Fallstricke und Anwendungshinweise ▶SHA-1 (und erst recht nicht noch ältere Verfahren wie z. B. MD5, spezifiziert in RFC 13213) nicht verwenden ▶SHA-2 bzw. SHA-3 224er Variante nicht verwenden, siehe BSI TR-02102-14 3https://www.rfc-editor.org/rfc/rfc1321, 13. März 2025 4https://www.bsi.bund.de/SharedDocs/Downloads/DE/BSI/Publikationen/TechnischeRichtlinien/TR0210 2/BSI-TR-02102.pdf, 13. März 2025 24 / 30 Zusammenfassung 25 / 30 Zusammenfassung ▶Grundlagen Hashing und MAC definiert ▶SHA-2 und SHA-3 vorgestellt 26 / 30 Weiterführende Literatur 27 / 30 Weiterführende Literatur ▶Kryptografie – Verfahren - Protokolle - Infrastrukturen, Kapitel 16, 17.3 und 18.1 von Schmeh (2016) ▶IT-Sicherheit – Konzepte - Verfahren - Protokolle, Kapitel 8.1 von Eckert (2023) 28 / 30 Literatur I Duong, T., & Rizzo, J. (2009, September). Flickr’s API Signature Forgery Vulnerability. https://archive.org/details/pdfy-HaRR7XMfTOb_RrU0 (siehe S. 17). Eckert, C. (2023). IT-Sicherheit: Konzepte - Verfahren - Protokolle (11. Aufl.). De Gruyter Oldenbourg. (Siehe S. 28). FIPS-180-4. (2015). Federal Information Processing Standards Publication (FIPS 180-4). Secure Hash Standard (SHS). https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf (siehe S. 13). FIPS-202. (2015). Federal Information Processing Standards Publication (FIPS 202). SHA-3 Standard: Permutation-Based Hash and Extendable-Output Functions. https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf (siehe S. 19). 29 / 30 Literatur II Khovratovich, D., Rechberger, C., & Savelieva, A. (2012).Bicliques for Preimages: Attacks on Skein-512 and the SHA-2 Family. FSE, 7549, 244–263. https://doi.org/10.1007/978-3-642-34047-5_15 (siehe S. 17). Lamberger, M., & Mendel, F. (2011). Higher-Order Differential Attack on Reduced SHA-256. https://eprint.iacr.org/2011/037 (siehe S. 17). Schmeh, K. (2016). Kryptografie – Verfahren - Protokolle - Infrastrukturen (6. Aufl.). dpunkt.verlag. (Siehe S. 5, 6, 10, 12, 18, 20, 22, 28). Tremmel, S. (2021).Deterministisches Chaos. c’t Magazin für Computer und Technik, (7), 64–67 (siehe S. 14). 30 / 30 Informationssicherheit – SoSe 2025 Asymmetrische kryptographische Verfahren: Grundlagen, DH, RSA, ECC, Digitale Signaturen Prof. Dr. Holger Schmidt holger.schmidt004[at]fh-dortmund.de Fachhochschule Dortmund Fachbereich Informatik Professur für IT-Sicherheit, Informatik 18. März 2025, 10:41:15 1 / 60 Themen & Lernziele 2 / 60 Themen ▶Schlüsselaustauschproblem ▶Grundlegende Angriffsarten und Kryptoanalyse ▶DH ▶RSA ▶Digitale Signaturen ▶ECC 3 / 60 Lernziele Die Studierenden sind in der Lage, ▶Grundlagen der asymmetrischen Kryptographie zu differenzieren und zu erklären. ▶DH, RSA, digitale Signaturen, ECC zu erklären und anzuwenden. 4 / 60 Kryptographie Asymmetrische Verschlüsselung 5 / 60 Schlüsselaustauschproblem ▶Schlüsselaus- tauschpro- blem ▶Manueller Schlüssel- austausch ▶Schlüssel- austausch mit Authen- tifizierung ▶Asymme- trische Kryptogra- phie 2 Teilnehmer 1 Schlüssel 3 Teilnehmer 3 Schlüssel 4 Teilnehmer 6 Schlüssel 5 Teilnehmer 10 Schlüssel Abbildung 11-1 aus Schmeh, 2016 6 / 60 Asymmetrische Verschlüsselung I ▶Problem: Alice möchte Bob eine geheime Nachricht senden. ▶Bob übergibt an Alice ein geöffnetes Vorhängeschloss. ▶Bob behält den Schlüssel für sich allein. Foto selbst erstellt 7 / 60 Asymmetrische Verschlüsselung II ▶Alice legt die geheime Nachricht in eine Schatulle. ▶Alice verschließt die Schatulle mit dem Vorhängeschloss. ▶Alice sendet die verschlossene Schatulle an Bob ▶Bob besitzt als einziger den passenden Schlüssel und kann die Schatulle aufschließen, um dann die geheime Nachricht zu lesen. Fotos selbst erstellt 8 / 60 Asymmetrische Verschlüsselung III ▶Schutzziel: u. a. Vertraulichkeit ▶Algorithmen in die ein öffentlicher Schlüssel („geöffnetes Vorhängeschloss“) und ein privater Schlüssel („Schlüssel“) mit einfließt ▶m ist der Klartext, e der Verschlüsselungsalgorithmus, d der Entschlüsselungsalgorithmus, c der Geheimtext, a der öffentliche Schlüssel, x der private Schlüssel ▶Verschlüsselungsalgorithmus: e(m, a) = c ▶Entschlüsselungsalgorithmus: d(c, x) = m 9 / 60 Asymmetrische Verschlüsselung IV Dies ist ein unverschlüsselter Text. Dies ist ein unverschlüsselter Text. KJdFsfd5hb 8Hf60Bd43 nf5bJFDS4gb Klartext Klartext Geheimtext öffentlicher Schlüssel privater Schlüssel Abbildung 11-2 aus Schmeh, 2016 10 / 60 Exkurs: Mathematische Grundlagen – Existenz inverses Element Wir beschäftigen uns mit Modulo-Rechnung, da diese typischerweise sehr einfach durchführbar ist, ihre Umkehrung ist jedoch sehr aufwändig. ▶Wir betrachten also Modulo-Division bzw. Modulo-Multiplikation: b a ≡b · a−1 (mod n). ▶Wir betrachten n ∈N für das alle ganzen Zahlen zwischen 1 und n −1 ein inverses Element (mod n) haben. ▶Das ist der Fall, wenn alle Zahlen zwischen 1 und n −1 teilerfremd zu n sind. ▶Diese Anforderung ist genau dann erfüllt, wenn n eine Primzahl ist. ▶Die ganzen Zahlen zwischen 1 und p −1 bilden mit der Modulo-Multiplikation eine Gruppe mit 1 als neutralem Element, die wir Z∗ p(·, 1) nennen1. 1Z∗= Z \\ {0} 11 / 60 Exkurs: Mathematische Grundlagen – Untergruppe und Generator ▶Eine Untergruppe ist eine Teilmenge einer Gruppe, die selbst wieder eine Gruppe ist (mit derselben Verknüpfung und demselben neutralen Element). ▶Die Anzahl der Elemente einer Untergruppe von Z∗ p(·, 1) teilt immer p −1. ▶Nimmt man ein beliebiges a ∈Z∗ p(·, 1) und betrachtet {a, a2, a3, . . . , ap−1 (mod p)}, dann erhält man eine Untergruppe. a ist Generator der Untergruppe. ▶Jede Untergruppe von Z∗ p(·, 1) hat einen Generator (und damit auch Z∗ p(·, 1) selbst). 12 / 60 Exkurs: Mathematische Grundlagen – Diskreter Logarithmus ▶Die Gleichung ax ≡b (mod p) ist immer lösbar, wenn a ein Generator von Z∗ p(·, 1) und b ∈Z∗ p(·, 1) ist. ▶Anders ausgedrückt: Der diskrete Logarithmus in Z∗ p(·, 1) existiert immer, wenn die Basis ein Generator von Z∗ p(·, 1) ist. 13 / 60 Einwegfunktion und Falltürfunktion ▶Eine Funktion, deren Umkehrung nur sehr aufwändig zu berechnen ist, nennt man Einwegfunktion. ▶Eine Einwegfunktion, die eine „versteckte Abkürzung“ (z. B. mithilfe eines Schlüssels) enthält, wird Falltürfunktion genannt. 14 / 60 Diskreter Logarithmus und Faktorisierungsproblem Diskreter Logarithmus: ▶Die diskrete Exponentialfunktion ab (mod n) ist als", "source": "infoSicherheit_merged.pdf", "start": 11000, "end": 12200}
{"text": "1) nennen1. 1Z∗= Z \\ {0} 11 / 60 Exkurs: Mathematische Grundlagen – Untergruppe und Generator ▶Eine Untergruppe ist eine Teilmenge einer Gruppe, die selbst wieder eine Gruppe ist (mit derselben Verknüpfung und demselben neutralen Element). ▶Die Anzahl der Elemente einer Untergruppe von Z∗ p(·, 1) teilt immer p −1. ▶Nimmt man ein beliebiges a ∈Z∗ p(·, 1) und betrachtet {a, a2, a3, . . . , ap−1 (mod p)}, dann erhält man eine Untergruppe. a ist Generator der Untergruppe. ▶Jede Untergruppe von Z∗ p(·, 1) hat einen Generator (und damit auch Z∗ p(·, 1) selbst). 12 / 60 Exkurs: Mathematische Grundlagen – Diskreter Logarithmus ▶Die Gleichung ax ≡b (mod p) ist immer lösbar, wenn a ein Generator von Z∗ p(·, 1) und b ∈Z∗ p(·, 1) ist. ▶Anders ausgedrückt: Der diskrete Logarithmus in Z∗ p(·, 1) existiert immer, wenn die Basis ein Generator von Z∗ p(·, 1) ist. 13 / 60 Einwegfunktion und Falltürfunktion ▶Eine Funktion, deren Umkehrung nur sehr aufwändig zu berechnen ist, nennt man Einwegfunktion. ▶Eine Einwegfunktion, die eine „versteckte Abkürzung“ (z. B. mithilfe eines Schlüssels) enthält, wird Falltürfunktion genannt. 14 / 60 Diskreter Logarithmus und Faktorisierungsproblem Diskreter Logarithmus: ▶Die diskrete Exponentialfunktion ab (mod n) ist als Einwegfunktion selbst für sehr große Werte von a, b und n leicht berechenbar. ▶Die Umkehrung, d. h. der diskrete Logarithmus und damit die Berechnung von b bei gegebener Basis a, Modul n und gewünschtem Ergebnis, verhält sich entgegengesetzt: die Berechnungszeit liegt für große Werte über der Lebensdauer unseres Universums. Faktorisierungsproblem: ▶Die Multiplikation zweier Primzahlen n = p · q ist für sehr große Werte leicht berechenbar. ▶Die Umkehrung, d. h. die Bestimmung der Faktoren p und q mithilfe von n, verhält sich entgegengesetzt: die Berechnungszeit liegt für große Werte über der Lebensdauer unseres Universums. 15 / 60 Kryptographie Diffie-Hellman Schlüsselaustausch Dieser Abschnitt basiert auf Schmeh, 2016, Teil 2 – Kapitel 13. Aufgrund der Präsentation als Folien und Notizen sind die Texte der Quelle typischerweise paraphrasiert. 16 / 60 Diffie-Hellman Schlüsselaustausch I ▶Public-Key-Verfahren ▶Verwendung des diskreten Logarithmus zur Lösung des Schlüsselaustauschproblems ▶Von Whittfield Diffie und Martin Hellman Mitte der 1970er entwickelt (Diffie & Hellman, 1976) ▶Spezifiziert in Public Key Cryptography Standards (PKCS)#3 v1.4 (https://www.teletrust.de/fileadmin/files/oid/oid_pkcs-3v1-4.pdf, aufgerufen am 18. März 2025) 17 / 60 Diffie-Hellman Schlüsselaustausch II ▶Alice und Bob einigen sich auf eine Primzahl p und g ∈N mit g Generator von Z∗ p(·, 1). ▶p und g sind öffentlich (können also unverschlüsselt kommuniziert werden). ▶Alice wählt außerdem x ∈N mit 1 < x < p und Bob wählt y ∈N mit 1 < y < p. 1. Alice berechnet a := gx mod p und sendet a an Bob. 2. Bob berechnet b := gy mod p und sendet b an Alice. 3. Alice berechnet k1 := bx mod p. 4. Bob berechnet k2 := ay mod p. Es gilt k1 = k2. 18 / 60 Diffie-Hellman Schlüsselaustausch III ▶Mallory kann die Kommunikation abhören, jedoch k1 bzw. k2 nicht bestimmen, denn dazu müsste Mallory x oder y kennen, also den diskreten Logarithmus a ≡gx mod p bzw. b ≡gy mod p lösen. ▶Diskrete Exponentialfunktion ist Einwegfunktion (jedoch keine Falltürfunktion) mit diskretem Logarithmus als Umkehrfunktion. ▶a ist der öffentliche und x der private (geheime) Schlüssel von Alice. ▶b ist der öffentliche und y der private (geheime) Schlüssel von Bob. 19 / 60 Diffie-Hellman Schlüsselaustausch – Kryptoanalyse ▶Brute Force ist nicht der beste Angriff auf das Diffie-Hellman-Schlüsselaustauschverfahren, denn der diskrete Logarithmus lässt sich schneller berechnen. ▶Durch Werte ab 3000 Bit für p ist kein praktikabler Angriff auf das Diffie-Hellman-Schlüsselaustauschverfahren bekannt2. ▶Die Wahl von g beeinflußt die Sicherheit des Verfahrens: Die Untergruppe sollte möglichst groß sein; das wird durch die Wahl eines Generators der Untergruppe gewährleistet. ▶Man-in-the-Middle Angriff ist möglich, wird in der Praxis jedoch durch Public-Key-Infrastrukturen bzw. Authentifikation verhindert. 2https://www.bsi.bund.de/SharedDocs/Downloads/DE/BSI/Publikationen/TechnischeRichtlinien/TR0210 2/BSI-TR-02102.pdf, 18. März 2025 20 / 60 Kryptographie RSA-Algorithmus Dieser Abschnitt basiert auf Schmeh, 2016, Teil 2 – Kapitel 13. Aufgrund der Präsentation als Folien und Notizen sind die Texte der Quelle typischerweise paraphrasiert. 21 / 60 RSA-Algorithmus ▶Asymmetrischer Verschlüsselungsalgorithmus ▶Von Ron Rivest, Adi Shamir und Leonard Adleman Ende der 1970er entwickelt (Rivest, Shamir & Adleman, 1978) ▶Spezifiziert in RFC 8017 (https://www.rfc-editor.org/rfc/rfc8017, aufgerufen am 18. März 2025) ▶Verschlüsselung entspricht einer Modulo-Exponentation und Entschlüsselung einem Modulo-Wurzelziehen. 22 / 60 Erzeugung RSA-Schlüsselpaar – Öffentlicher Schlüssel I Szenario: Bob möchte eine Nachricht m verschlüsseln, sodass nur Alice diese entschlüsseln kann. Dazu muss Alice zunächst ein RSA Schlüsselpaar erzeugen. Für die Verschlüsselung ist dann Alice öffentlicher Schlüssel notwendig, für die Entschlüsselung Alice privater Schlüssel. 1. Alice wählt zufällig zwei große Primzahlen p und q mit p ̸= q aus. ▶Wichtig: zufällige Auswahl von p und q, beide gleiche Größenordnung - jedoch nicht dicht beieinander liegend 2. Alice berechnet den RSA-Modulus n = p · q. ▶Die Sicherheit von RSA ist insbesondere dadurch gegeben, dass die Wiederherstellung von p und q (d. h. Primfaktorzerlegung von n) nur aus dem RSA-Modulus n nicht praktikabel ist. ▶n beziffert die RSA-Schlüssellänge. 23 / 60 Erzeugung RSA-Schlüsselpaar – Öffentlicher Schlüssel II 3. Alice berechnet die Eulersche φ-Funktion φ(n) = (p −1)(q −1). ▶φ-Funktion gibt an, wie viele Zahlen x ∈N mit 0 < x < n zu n teilerfremd sind, z. B. φ(3) = 2, denn 1 und 2 sind zu 3 teilerfremd (1 ist als trivialer Teiler teilerfremd zu allen x ∈N). ▶Die Gleichung φ(n) = (p −1)(q −1) gilt nur für Primzahlen p und q, d. h. nur dann lässt sich φ(n) einfach berechnen. ▶Die Primzahlen p und q werden nach der Berechnung von φ(n) sicher gelöscht. 4. Alice wählt zufällig eine Zahl e mit 2 < e < φ(n), die teilerfremd zu φ(n) ist. ▶n und e bilden zusammen Alice öffentlichen Schlüssel. ▶In der Praxis ist e eine kleine und konstante Zahl, z. B. 216 + 1 = 65537, damit die Verschlüsselung performant durchgeführt werden kann. 24 / 60 RSA-Verschlüsselung mit öffentlichem Schlüssel Die Verschlüsselung der Nachricht m erfolgt durch Modulo-Potenzieren der Nachricht m mit dem Exponenten e und basierend auf dem RSA-Modulus n. 1. Alice gibt Ihren öffentlichen Schlüssel (n, e) bekannt. 2. Damit m überhaupt verschlüsselt werden kann, muss m in eine natürliche Zahl y umgewandelt werden, mit ▶y < n, da y ∈Zn sein muss. Tritt der Fall y ≥n ein, dann muss blockweise verschlüsselt werden. ▶ye > n, da sonst y durch Wurzelziehen (mit polynomialen Aufwand) aus ye ermittelt werden kann. 3. Bob verschlüsselt damit die umgewandelte Nachricht y wie folgt: c ≡ye (mod n). c ist der Geheimtext, den er an Alice übergibt. Es gilt natürlich c ∈Zn. ▶Damit ist das Modulo-Potenzieren eine Falltürfunktion, wobei die Falltürinformation die Faktorisierung des Modulus ist. 25 / 60 Erzeugung RSA-Schlüsselpaar – Privater Schlüssel Um das Modulo-Potenzieren rückgängig zu machen und aus dem Geheimtext c wieder die umgewandelte Nachricht y zu erhalten, wird die Modulo-Wurzel gezogen. Dazu wird das modulare Inverse d von e bzgl. des RSA-Modulus n genutzt. 1. Ausgehend von c ≡ye (mod n) heißt y die e-te Wurzel von c bzgl. dem RSA-Modulus n. 2. Alice berechnet (mit dem erweiterten euklidischen Algorithmus) d ≡e−1 (mod φ(n)). (n, d) bildet Alice privaten Schlüssel. ▶Das modulare Inverse d existiert, da e und φ(n) teilerfremd sind. ▶Das modulare Inverse d lässt sich nur einfach berechnen, wenn φ(n) bekannt", "source": "infoSicherheit_merged.pdf", "start": 12000, "end": 13200}
{"text": "Schlüssel (n, e) bekannt. 2. Damit m überhaupt verschlüsselt werden kann, muss m in eine natürliche Zahl y umgewandelt werden, mit ▶y < n, da y ∈Zn sein muss. Tritt der Fall y ≥n ein, dann muss blockweise verschlüsselt werden. ▶ye > n, da sonst y durch Wurzelziehen (mit polynomialen Aufwand) aus ye ermittelt werden kann. 3. Bob verschlüsselt damit die umgewandelte Nachricht y wie folgt: c ≡ye (mod n). c ist der Geheimtext, den er an Alice übergibt. Es gilt natürlich c ∈Zn. ▶Damit ist das Modulo-Potenzieren eine Falltürfunktion, wobei die Falltürinformation die Faktorisierung des Modulus ist. 25 / 60 Erzeugung RSA-Schlüsselpaar – Privater Schlüssel Um das Modulo-Potenzieren rückgängig zu machen und aus dem Geheimtext c wieder die umgewandelte Nachricht y zu erhalten, wird die Modulo-Wurzel gezogen. Dazu wird das modulare Inverse d von e bzgl. des RSA-Modulus n genutzt. 1. Ausgehend von c ≡ye (mod n) heißt y die e-te Wurzel von c bzgl. dem RSA-Modulus n. 2. Alice berechnet (mit dem erweiterten euklidischen Algorithmus) d ≡e−1 (mod φ(n)). (n, d) bildet Alice privaten Schlüssel. ▶Das modulare Inverse d existiert, da e und φ(n) teilerfremd sind. ▶Das modulare Inverse d lässt sich nur einfach berechnen, wenn φ(n) bekannt ist. 3. φ(n) wird nach Erzeugung des privaten Schlüssels sicher gelöscht. 26 / 60 RSA-Entschlüsselung mit privatem Schlüssel 1. Alice kann c entschlüsseln, indem sie y ≡cd (mod n) berechnet. Alice berechnet also die e-te Wurzel von c bzgl. dem RSA-Modulus n, indem sie die d-te Potenz berechnet. ▶Es gilt für alle y < n und e, d wie oben definiert: (ye)d ≡y (mod n). Daher lässt sich der Klartext mit dem modularen Inversen d berechnen. 2. Mallory kann das nicht, denn er kann d nicht ermitteln ohne φ(n) zu kennen, wofür die die Faktorisierung von n notwendig ist. Die Primfaktorzerlegung ist jedoch unter den zuvor genannten Bedingungen praktisch unmöglich durchzuführen. 27 / 60 RSA-Algorithmus – Beispiel 1. Alice wählt p = 5 und q = 17 und berechnet n = 5 · 17 = 85. 2. Alice wählt 3 ∈N, die teilerfremd zu φ(85) = 64 ist. 85 und 3 bilden zusammen Alice öffentlichen Schlüssel. 3. Alice berechnet d = 3−1 ≡43 (mod 64) (denn 3 · 43 ≡1 (mod 64)). 85 und 43 bilden zusammen Alice privaten Schlüssel. 4. Bob kennt Alice öffentlichen Schlüssel und verschlüsselt damit einen Klartext m = 2 wie folgt: c = 23 ≡8 (mod 85) ist der Geheimtext, den er an Alice sendet. Bei der Berechnung hat Bob den privaten Schlüssel von Alice nicht benutzt. 5. Alice kann 8 mit ihrem privaten Schlüssel entschlüsseln, indem sie m = 843 ≡2 (mod 85) berechnet. 28 / 60 RSA-Algorithmus – Kryptoanalyse I ▶RSA ist ein Verfahren mit variabler Schlüssellänge (Alice kann n wählen). ▶Wesentliche Angriffstypen: ▶Public-Key-Only Angriff: Mallory kennt nur den öffenlichen Schlüssel von Alice. ▶Chosen-Ciphertext Angriff: Mallory kann einen Geheimtext wählen und diesen von Alice entschlüsseln lassen. ▶Faktorisierungsangriff, d. h. Berechnung der Primzahlen p und q aus n, ist für große Werte praktisch aussichtslos. 29 / 60 RSA-Algorithmus – Kryptoanalyse II ▶Aufgrund des Mooreschen Gesetzes sind RSA-Moduli mit 100 Dezimalstellen (ursprünglich von Rivest et al., 1978 empfohlen) längst nicht mehr sicher. ▶RSA-Factoring-Challenge zahlte bis 2007 Preisgelder für Faktorisierungen. Heutige Community erreichte zuletzt z. B. Faktorisierung von RSA-250 (829 Bit) in 2700 Prozessorjahren auf einem Intel Xeon Gold 6130 (16 Kerne, 2,1 GHz) (https://lists.gforge.inr ia.fr/pipermail/cado-nfs-discuss/2020-February/001166.html, aufgerufen am 18. März 2025). ▶Schlüssellängen ab 3000 Bit gelten aktuell praktisch als sicher3. 3https://www.bsi.bund.de/SharedDocs/Downloads/DE/BSI/Publikationen/TechnischeRichtlinien/TR0210 2/BSI-TR-02102.pdf, 18. März 2025 30 / 60 RSA-Algorithmus – Kryptoanalyse III ▶Wahl von p, q, e und n sowie komplizierte mathematische Berechnung bieten größere Angriffsfläche (im Vergleich zu z. B. AES). ▶Low-Exponent-Angriff beruht auf der Verwendung kleiner Werte für e (typisch sind 3 und 17) und die Verschlüsselung des gleichen Klartexts für e verschiedene Empfänger. Gegenmaßnahmen: größere Werte für e (z. B. 65537), in RFC 8017 durch spezielle Aufbereitung von Klartexten. ▶Zu kleine Klartexte erlauben ebenfalls Angriffe auf RSA, daher ist immer ein Padding zu benutzen, z. B. Optimal Asymmetric Encryption Padding (OAEP) (siehe RFC 8017). ▶Verschiedene Angriffe die sich Implementierungsfehler zu nutze machen 31 / 60 Kryptographie Elliptische Kurven 32 / 60 Elliptische Kurven / Elliptic Curve Cryptography (ECC) Abbildung selbst erstellt ▶Problem: klassische asymmetrische Verfahren (z. B. RSA) erfordern große Schlüssellängen und Berechnungen sind daher aufwändig ▶Elliptische Kurve erfüllt folgende (kurze) Weierstraß-Gleichung: y2 = x3 + ax + b ▶Elliptische Kurven bilden abelsche Gruppe bzgl. Punktaddition. 33 / 60 Inverser Punkt auf elliptischer Kurve • P • −P Abbildung selbst erstellt ▶−P ist inverser Punkt zu P ▶∀P|P + (−P) = ∞ist neutrales Element 34 / 60 Addition zweier verschiedener Punkte auf elliptischer Kurve • P •Q • • P + Q Abbildung selbst erstellt ▶Eine Gerade mit zwei Schnittpunkten P, Q, P ̸= Q mit elliptischer Kurve hat einen dritten, welcher gespiegelt an x-Achse die Summe P + Q ergibt (Sekantenregel). ▶Das Verfahren lässt sich mit weiteren Punkten fortsetzen. 35 / 60 Selbst-Addition eines Punktes auf elliptischer Kurve •P• • 2P Abbildung selbst erstellt ▶Gilt P = Q, so sind zwei Fälle möglich: 1. P + P = 2P falls Tangente durch P elliptische Kurve erneut schneidet 2. P + P = ∞anderenfalls ▶Schnittpunkt Tangente an Punkt P, dann Spiegelung an x-Achse (Tangentenregel) 36 / 60 Analogie zum diskreten Logarithmus ▶k-fache Addition kP = P + P + · · · + P = Q ▶Für ausgewählte elliptische Kurven gilt: p von Zp sowie k ausreichend groß gewählt, so ist es schwierig (praktisch unmöglich) ausgehend von Q auf k zu schließen. ▶Da das Problem wesentlich schwieriger als diskreter Logarithmus und Primzahlfaktorisierung in Galois-Körpern ist, kommt ECC mit deutlich kleineren Schlüsseln aus, z. B. bietet ein 256 Bit ECC-Schlüssel ein ähnliches Sicherheitsniveau wie ein 3072 Bit RSA-Schlüssel. ▶Eine populäre elliptische Kurve ist Curve25519 (spezifiziert in RFC 77484). 4https://tools.ietf.org/html/rfc7748, aufgerufen am 18. März 2025 37 / 60 Diffie-Hellman Schlüsselaustausch mit ECC Elliptic-curve Diffie–Hellman (ECDH) (NIST SP 800-56A Revision 3, 2018) Alice und Bob einigen sich auf eine elliptische Kurve durch Festlegung der Koeffizienten a und b sowie auf einen Punkt P. 1. Alice berechnet AP und sendet den Wert an Bob. 2. Bob berechnet BP und sendet den Wert an Alice. 3. Alice berechnet k1 = BP · A. 4. Bob berechnet k2 = AP · B. Es gilt k1 = k2 (nur X-Koordinate). 38 / 60 Kryptographie Hybridverfahren 39 / 60 Hybridverfahren I Symmetrische Verschlüsselung ist wesentlich schneller als asymmetrische Verschlüsselung. Dies ist ein unverschlüsselter Text. Dies ist ein unverschlüsselter Text. KJdFsfd5hb 8Hf60Bd43 nf5bJFDS4gb Klartext Klartext Geheimtext geheimer Schlüssel geheimer Schlüssel verschlüsselt geheimer Schlüssel privater Schlüssel öffentlicher Schlüssel Abbildung 11-4 aus Schmeh, 2016 40 / 60 Hybridverfahren II TLS arbeitet mit cipher suites, z. B. TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 ECDHE steht für Diffie-Hellman Schlüsselaustausch mit ECC RSA wird genutzt für ein Authentifikationsverfahren, damit man-in-the-middle Angriffe auf das Diffie-Hellman Verfahren praktisch ausgeschlossen sind AES für Nutzdatenverschlüsselung, hier mit 256 Bit Schlüsseln GCM steht für Galois/Counter mode (NIST SP 800-38D, 2007), ein Block Modus der bei der Nutzdatenverschlüsselung zusätzlich Authentizität gewährleistet SHA384 wird für ein HMAC Verfahren und dieses als Basis für eine PRF (Pseudo-Random Function) genutzt, mit der z. B. aus dem ECDHE-Schlüssel ein master secret abgeleitet wird. 41 / 60 Kryptographie Digitale Signaturen 42 / 60", "source": "infoSicherheit_merged.pdf", "start": 13000, "end": 14200}
{"text": "und b sowie auf einen Punkt P. 1. Alice berechnet AP und sendet den Wert an Bob. 2. Bob berechnet BP und sendet den Wert an Alice. 3. Alice berechnet k1 = BP · A. 4. Bob berechnet k2 = AP · B. Es gilt k1 = k2 (nur X-Koordinate). 38 / 60 Kryptographie Hybridverfahren 39 / 60 Hybridverfahren I Symmetrische Verschlüsselung ist wesentlich schneller als asymmetrische Verschlüsselung. Dies ist ein unverschlüsselter Text. Dies ist ein unverschlüsselter Text. KJdFsfd5hb 8Hf60Bd43 nf5bJFDS4gb Klartext Klartext Geheimtext geheimer Schlüssel geheimer Schlüssel verschlüsselt geheimer Schlüssel privater Schlüssel öffentlicher Schlüssel Abbildung 11-4 aus Schmeh, 2016 40 / 60 Hybridverfahren II TLS arbeitet mit cipher suites, z. B. TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 ECDHE steht für Diffie-Hellman Schlüsselaustausch mit ECC RSA wird genutzt für ein Authentifikationsverfahren, damit man-in-the-middle Angriffe auf das Diffie-Hellman Verfahren praktisch ausgeschlossen sind AES für Nutzdatenverschlüsselung, hier mit 256 Bit Schlüsseln GCM steht für Galois/Counter mode (NIST SP 800-38D, 2007), ein Block Modus der bei der Nutzdatenverschlüsselung zusätzlich Authentizität gewährleistet SHA384 wird für ein HMAC Verfahren und dieses als Basis für eine PRF (Pseudo-Random Function) genutzt, mit der z. B. aus dem ECDHE-Schlüssel ein master secret abgeleitet wird. 41 / 60 Kryptographie Digitale Signaturen 42 / 60 Digitale Signaturen ▶Nachweis der Echtheit eines digitalen Dokuments ▶Analog zur eigenhändigen „Unterschrift“: ▶nicht zu fälschen ▶verifizierbar ▶nicht übertragbar auf andere Dokumente ▶dazugehöriges Dokument nicht unbemerkt veränderbar Dies ist ein unverschlüsselter Text. Klartext KJdFsf d5HBt ? ja ? nein privater Schlüssel öffentlicher Schlüssel digitale Signatur Verifikations- ergebnis Abbildung 12-1 aus Schmeh, 2016 43 / 60 Digitale Signaturen – Rechtliche Rahmenbedingungen ▶Europäische electronic IDentification, Authentication and trust Services (eIDAS)5 seit dem 01. Juli 2016 europaweit geltendes Recht ▶Harmonisierung des Binnenmarkts für Signatur, Siegel und Zeitstempel in EU und europäischer Freihandelsassoziation (EFTA) ▶Signaturerstellungseinheiten müssen nach Common Criteria zertifiziert sein 5https://eur-lex.europa.eu/eli/reg/2014/910/oj, aufgerufen am 18. März 2025 44 / 60 Digitale Signaturen – PGP und S/MIME ▶Pretty Good Privacy (PGP) spezifiziert in RFC 2440 (https://www.rfc-editor.org/rfc/rfc2440, aufgerufen am 18. März 2025) ▶Web of Trust durch transitive Vertrauensbeziehungen (Signieren von öffentlichen Schlüsseln) ▶Secure / Multipurpose Internet Mail Extensions (S/MIME) spezifiziert in RFC 2633 (https://www.rfc-editor.org/rfc/rfc2633, aufgerufen am 18. März 2025) ▶S/MIME basiert auf X.509 Zertifikaten spezifiziert in RFC 5280 (https://www.rfc-editor.org/rfc/rfc5280, aufgerufen am 18. März 2025) ▶Zertifikat beinhaltet öffentlichen Schlüssel und wird von ausgebener Stelle beglaubigt ▶Streng hierarchisch strukturierte Public Key Infrastrukturen (PKI) mit Wurzelzertifikat 45 / 60 Digitale Signaturen – Basierend auf RSA ▶Schutzziele: Authentizität, Integrität, Nicht-Abstreitbarkeit ▶Algorithmen in die ein öffentlicher und ein privater Schlüssel einfließen (z. B. RSA) ▶m ist das zu schützende Dokument, a der öffentliche Schlüssel, x der private Schlüssel, u der Signaturalgorithmus, s die Signatur, v der Verifikationsalgorithmus ▶Signaturalgorithmus: u(m, x) = s ▶Verifikationsalgorithmus: v(a, s) = m′ (Signatur s ist echt, falls m = m′) ▶Statt direkt m zu signieren, wird typischerweise ein Hashwert von m erzeugt und dieser signiert. 46 / 60 Digitale Signaturen – RSA vs. ECDSA ▶Bei Verwendung von RSA für digitale Signaturen ähnliche Angriffe wie bei RSA-Verschlüsselung möglich ▶Digitale Signaturen basierend auf ECC: ▶Digital Signature Standard (DSS) (FIPS-186-5, 2023) basiert u. a. auf Elliptic Curve Digital Signature Algorithm (ECDSA) ▶Vorteile gegenüber RSA: ▶kürzere Schlüssel bei vergleichbarer Sicherheit ▶performanter aufgrund kürzerer Schlüssel ▶Nachteile gegenüber RSA: ▶kein Message Recovery ▶kein Verschlüsselungsalgorithmus ▶komplexere Implementierung ▶zusätzlicher Zufall notwendig 47 / 60 Fallstricke und Anwendungshinweise ▶Schlüssellängen ab 3000 Bit bzw. bei ECC 250 Bit verwenden, siehe BSI TR-02102-16 ▶Nicht mehr Digital Signature Algorithm (DSA) (FIPS-186-5, 2023), sondern stattdessen RSA, ECDSA oder Edwards-Curve Digital Signature Algorithm (EdDSA)7 für digitale Signaturen verwenden ▶Nicht mehr DH, sondern stattdessen ECC-basiertes Schlüsselaustauschprotokoll verwenden (siehe NIST SP 800-56A Revision 3, 2018) 6https://www.bsi.bund.de/SharedDocs/Downloads/DE/BSI/Publikationen/TechnischeRichtlinien/TR0210 2/BSI-TR-02102.pdf, 18. März 2025 7https://www.rfc-editor.org/rfc/rfc8032, aufgerufen am 18. März 2025 48 / 60 Post-Quanten-Kryptographie I ▶Asymmetrische kryptographische Verfahren durch Quantencomputer bedroht, z. B. Shor-Algorithmus (Shor, 1997) zur Primzahlfaktorisierung in Polynomialzeit ▶Auch auf diskretem Logarithmus und elliptischen Kurven beruhende Verfahren sind bedroht. ▶Post-Quanten-Kryptographie (PQC) beschäftigt sich mit asymmetrischen kryptographischen Verfahren für die selbst Quantencomputer keine Bedrohung darstellen. 49 / 60 Post-Quanten-Kryptographie II ▶PQC Verfahren basieren auf mathematischen Problemen, die für Quantencomputer schwierig zu lösen sind: ▶Module-Lattice-Based Key-Encapsulation Mechanism Standard (ML-KEM) (FIPS-203, 2024) als Alternative zu DH bzw. ECDH ▶Module-Lattice-Based Digital Signature Standard (ML-DSA) (FIPS-204, 2024) als Alternative zu DSA bzw. ECDSA ▶Stateless Hash-Based Digital Signature Standard (SLH-DSA) (FIPS-205, 2024) als Alternative zu DSA bzw. ECDSA ▶Implementierungen bereits verfügbar, z. B. BouncyCastle8 8https://www.bouncycastle.org/resources/latest-nist-pqc-standards-and-more-bouncy-castle-java-1-79/, 18. März 2025 50 / 60 Zusammenfassung 51 / 60 Zusammenfassung ▶Grundlagen asymmetrische Kryptographie definiert ▶DH, RSA, digitale Signaturen, ECC vorgestellt 52 / 60 Weiterführende Literatur 53 / 60 Weiterführende Literatur ▶Kryptografie – Verfahren - Protokolle - Infrastrukturen, Kapitel 13, 14, 15.1 und 20 von Schmeh (2016) ▶IT-Sicherheit – Konzepte - Verfahren - Protokolle, Kapitel 7.6, 7.7, 8.2 von Eckert (2023) ▶Verschlüsseln mit elliptischen Kurven9 ▶Choosing safe curves for elliptic-curve cryptography10 ▶The impact of quantum computers in cybersecurity11 ▶Post-Quantum Cryptography12 9https://www.heise.de/blog/Verschluesseln-mit-elliptischen-Kurven-5026753.html, aufgerufen am 18. März 2025 10https://safecurves.cr.yp.to/, aufgerufen am 18. März 2025 11https://media.ccc.de/v/37c3-12034-the_impact_of_quantum_computers_in_cybersecurity, aufgerufen am 18. März 2025 12https://csrc.nist.gov/projects/post-quantum-cryptography,aufgerufenam18.\\protect~M\\protectärz2025 54 / 60 Literatur I Diffie, W., & Hellman, M. E. (1976).New Directions in Cryptography. IEEE Transactions on Information Theory, 22(6), 644–654 (siehe S. 17). Eckert, C. (2023). IT-Sicherheit: Konzepte - Verfahren - Protokolle (11. Aufl.). De Gruyter Oldenbourg. (Siehe S. 54). FIPS-186-5. (2023). Federal Information Processing Standards Publication (FIPS 186-5). Digital Signature Standard (DSS). https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.186-5.pdf (siehe S. 47, 48). FIPS-203. (2024). Federal Information Processing Standards Publication (FIPS 203). Module-Lattice-Based Key-Encapsulation Mechanism Standard. https://doi.org/10.6028/NIST.FIPS.203 (siehe S. 50). FIPS-204. (2024). Federal Information Processing Standards Publication (FIPS 204). Module-Lattice-Based Digital Signature Standard. https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.204.pdf (siehe S. 50). 55 / 60 Literatur II FIPS-205. (2024). Federal Information Processing Standards Publication (FIPS 205). Stateless Hash-Based Digital Signature Standard. https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.205.pdf (siehe S. 50). NIST SP 800-38D. (2007). NIST Special Publication 800-38D. Recommendation for Block Cipher Modes of Operation: Galois/Counter Mode (GCM) and GMAC. https://nvlpubs.nist.gov/ nistpubs/Legacy/SP/nistspecialpublication800-38d.pdf (siehe S. 41). NIST SP 800-56A Revision 3. (2018). NIST Special Publication 800-56A Revision 3 Recommendation for Pair-Wise Key-Establishment Schemes Using Discrete Logarithm Cryptography. https: //nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800- 56Ar3.pdf (siehe S. 38, 48). 56 / 60 Literatur III Rivest, R. L., Shamir, A., & Adleman, L. (1978).A Method for Obtaining Digital Signatures and Public-key Cryptosystems. Communications of the ACM, 21(2), 120–126 (siehe S. 22, 30). Schmeh, K. (2016). Kryptografie – Verfahren - Protokolle - Infrastrukturen (6. Aufl.). dpunkt.verlag. (Siehe S. 6, 10, 16, 21, 40, 43, 54). Shor, P. W. (1997).Polynomial-Time Algorithms for Prime Factorization and Discrete Logarithms on a Quantum Computer. SIAM Journal on Computing, 26(5), 1484–1509 (siehe S. 49). 57 / 60 Anhang RSA-Algorithmus FAQ 58 / 60 RSA-Algorithmus – FAQ I ▶Falls p und q keine Primzahlen sind, dann ergeben sich Probleme: ▶Die Bedingung, dass p und q Primzahlen sind, ist nicht erfüllt, sodass die Anwendung der Formel φ(n) = (p −1)(q −1) falsche Ergebnisse liefert. In der Folge arbeiten Ver- und Entschlüsselung nicht mehr so zusammen, dass sich z. B. ein Geheimtext korrekt entschlüsseln lässt. Selbst ausprobieren: Wähle p = 24, q = 19, e = 41, m = 6. ▶Die allgemeine Berechnungsformel von φ(x) basiert auf der Primfaktorzerlegung von x. Wenn also p und q keine Primzahlen sind, dann ergibt die Primfaktorzerlegung entsprechend mehr als zwei Primfaktoren. Folglich kann die Primfaktorzerlegung wesentlich einfacher sein, z. B. bei geraden Zahlen, Zahlen die mit 5 enden, etc. ▶Trotzdem kann RSA auch mit einem RSA-Modulus funktionieren, der sich", "source": "infoSicherheit_merged.pdf", "start": 14000, "end": 15200}
{"text": "Digital Signatures and Public-key Cryptosystems. Communications of the ACM, 21(2), 120–126 (siehe S. 22, 30). Schmeh, K. (2016). Kryptografie – Verfahren - Protokolle - Infrastrukturen (6. Aufl.). dpunkt.verlag. (Siehe S. 6, 10, 16, 21, 40, 43, 54). Shor, P. W. (1997).Polynomial-Time Algorithms for Prime Factorization and Discrete Logarithms on a Quantum Computer. SIAM Journal on Computing, 26(5), 1484–1509 (siehe S. 49). 57 / 60 Anhang RSA-Algorithmus FAQ 58 / 60 RSA-Algorithmus – FAQ I ▶Falls p und q keine Primzahlen sind, dann ergeben sich Probleme: ▶Die Bedingung, dass p und q Primzahlen sind, ist nicht erfüllt, sodass die Anwendung der Formel φ(n) = (p −1)(q −1) falsche Ergebnisse liefert. In der Folge arbeiten Ver- und Entschlüsselung nicht mehr so zusammen, dass sich z. B. ein Geheimtext korrekt entschlüsseln lässt. Selbst ausprobieren: Wähle p = 24, q = 19, e = 41, m = 6. ▶Die allgemeine Berechnungsformel von φ(x) basiert auf der Primfaktorzerlegung von x. Wenn also p und q keine Primzahlen sind, dann ergibt die Primfaktorzerlegung entsprechend mehr als zwei Primfaktoren. Folglich kann die Primfaktorzerlegung wesentlich einfacher sein, z. B. bei geraden Zahlen, Zahlen die mit 5 enden, etc. ▶Trotzdem kann RSA auch mit einem RSA-Modulus funktionieren, der sich in mehr als zwei Primfaktoren zerlegen lässt (Multi-Prime RSA in RFC 8017). Dabei sind dann weitere Bedingungen zu erfüllen, z. B. das kein Faktor zu kurz ist, kein Mehrfachvorkommen eines Faktors, etc. 59 / 60 RSA-Algorithmus – FAQ II ▶Die RSA-Schlüssellänge ist nicht direkt vergleichbar mit Schlüssellängen bei der symmetrischen Verschlüsselung, da nicht jede Zahl mit einer RSA-Schlüssellänge von k Bit ein RSA-Modulus ist, z. B. eine RSA-Schlüssellänge von 1024 Bit führt nicht zu 21024 Schlüsseln, da nicht jede 1024 Bit Zahl ein RSA-Modulus ist. Um einen Vergleich herstellen zu können, betrachtet man die Anzahl notwendiger Operationen für die entsprechende Primfaktorzerlegung des RSA-Modulus, z. B. für 1024 Bit RSA-Schlüssellänge sind das ca. 273 Operationen. ▶Die Berechnung der Primzahlen p und q erfolgt mit probabilistischen Primzahltests wie z. B. dem Fermat-Test. Die Archillesferse dieses Tests ist, dass Charmicael-Zahlen den Test bestehen, welche keine Primzahlen sind. Eine Verbesserung in dieser Hinsicht ist z. B. der Miller-Rabin-Test. 60 / 60 Informationssicherheit – SoSe 2025 Zugriffskontrolle Prof. Dr. Holger Schmidt holger.schmidt004[at]fh-dortmund.de Fachhochschule Dortmund Fachbereich Informatik Professur für IT-Sicherheit, Informatik 13. März 2025, 07:35:48 1 / 29 Themen & Lernziele 2 / 29 Themen ▶Klassische Zugriffskontrollmodelle: DAC, MAC, RBAC ▶Berechtigungsrichtlinien: Zugriffskontrollmatrix, ACL, Capabilities ▶Weitergehende Zugriffskontrollmodelle, insb. ABAC, ReBAC, Chinese-Wall, Bell-LaPadula 3 / 29 Lernziele Die Studierenden sind in der Lage, ▶Zugriffskontrollmodelle zu differenzieren und zu erklären. ▶Berechtigungsrichtlinien als Zugriffskontrollmatrix, ACL und Capabilities zu modellieren. ▶Linux Dateisystemberechtigungen zu analysieren und zu erstellen. 4 / 29 Zugriffskontrolle 5 / 29 Zugriffskontrolle Objekt fordert Zugriff an Subjekt gewährt Zugriff auf Zugriffs- kontrolle spezifiziert Zusammenhang (Subjekt, Objekt, Zugriffsrechte) bezieht sich auf Berechtigungs- richtlinie Zugriffsrechte z. B. lesen, schreiben, ausführen, löschen z. B. Benutzer ID, Prozess ID z. B. Datei, Verzeichnis, IP z. B. Zugriffskontrollmatrix, Capability, ACL Abbildung selbst erstellt 6 / 29 Zugriffskontrollmatrix-Modell ▶Zugriffskontrollmatrix legt fest, welche Operationen (Zugriffsrechte) Domänen (Subjekte) auf Objekten ausführen dürfen. ▶Beispiel: Linux nutzt Domänen User, Group und Other mit Operationen Read, Write und Execute auf Objekt Datei. Figure 17.5 aus Silberschatz et al., 2018 Linux Zugriffstabelle, entspricht Spalte in Zugriffskontrollmatrix; Tabelle selbst erstellt 7 / 29 Access Control Lists (ACL) bill.doc edit.exe fun.com Alice {x} {r, x} Bob {r, w} {x} {r, w, x} Tabelle selbst erstellt ▶Objekt im Fokus ▶Spaltenweise Betrachtung von Zugriffskontrollmatrix ▶ACL ist Menge der Zugriffsrechte aller Subjekte für ein Objekt ▶z. B. bill.doc: {Bob: r, w} und exit.exe: {Alice: x}, {Bob: x} und fun.com: {Alice: r, x}, {Bob: r, w, x} ▶Vorteil: Ressourcenschonend (Speicher) bei umfangreicher Zugriffskontrollmatrix ▶Nachteil: unübersichtlich 8 / 29 Capabilities bill.doc edit.exe fun.com Alice {x} {r, x} Bob {r, w} {x} {r, w, x} Tabelle selbst erstellt ▶Subjekt im Fokus ▶Zeilenweise Betrachtung von Zugriffskontrollmatrix ▶Capability ist Menge der Zugriffsrechte eines Subjektes für alle Objekte ▶z. B. Alice: {edit.exe: x}, {fun.com: r, x} und Bob: {bill.doc: r, w}, {edit.exe: x}, {fun.com: r, w, x} ▶Vorteile: Delegation von Zugriffsrechten durch Kopieren von Capabilities, Löschen von Subjekten durch Löschen von Capabilities ▶Nachteile: unübersichtlich, Ändern von Zugriffrechten für mehrere Objekte aufwändig 9 / 29 Least Privilege & Deny by Default Entwurfsprinzipien nach Smith (2012) Least privilege ▶Subjekten wird eine minimale Menge von Zugriffsrechten für Objekte gewährt, die für ihre Aufgabenerfüllung unbedingt erforderlich sind. ▶Beispiel: als Benutzer können nur Programme beendet werden, die zuvor von diesem Benutzer gestartet wurden Deny by default ▶Gewährung keiner Zugriffrechte, außer denen, die durch Berechtigungsrichtlinie gefordert sind ▶Beispiel: Voreinstellung bei Firewalls (jeglicher Netzwerkverkehr verboten, bis auf zu spezifizierende Ausnahmen) 10 / 29 Role-Based Access Control (RBAC) ▶RBAC (Ferraiolo & Kuhn, 1992) bindet Privilegien (Zugriffsrechte) an Rollen. ▶Ein Subjekt kann eine oder mehrere Rollen besitzen. ▶Vorteil: Rechteverwaltung einfach Figure 17.10 aus Silberschatz et al., 2018 11 / 29 Discretionary Access Control (DAC) ▶Bei DAC basiert die Zugriffskontrolle darauf, welches Subjekt in Besitz eines Objektes ist. Subjekte bestimmen die Zugriffsrechte ihrer Objekte selbst. ▶Vorteile: einfach, Delegation ▶Nachteil: z. B. Besitzer einer Datei kann Zugriffsrechte selbst verändern, was häufig zu Verwundbarkeiten führt 12 / 29 Linux Dateisystemberechtigungen ▶Implementierung von DAC (und RBAC) ▶Es gibt drei Gruppen (wie Rollen): ▶User, Group, Other ▶Sowie drei Zugriffsrechte: ▶(r)ead, (w)rite, e(x)ecute ▶Datei wird Gruppe sowie Besitzer nach dem Schema group:user zugeordnet Tabelle selbst erstellt > ls −l −rwxr −x−−x 1 user group 0 01. Jan 00:00 scr ipt . sh Änderung von Zugriffsrechten Mit chmod können die Zugriffsrechte angepasst werden. Mit z. B. chmod 751 script.sh hat nur der Besitzer alle Berechtigungen, Gruppenmit- glieder dürfen die Datei nicht verändern und alle anderen nur ausführen. 13 / 29 setuid Bit ▶Für Ausführung Vereinigung der Berechtigungen von Besitzer und aufrufenden Subjekt mittels (s)etuid Bit ▶Z. B. Programm mount ausführbar durch Mitglieder der Gruppe user, Besitzer ist root > ls −l −rwsr −xr −x 1 root user 43096 01. Jan 00:00 mount ▶Nur für Binärdateien, nicht für Skripte ▶Schwachstellen in entsprechenden Programmen oft ausgenutzt im Rahmen von lokalen Angriffen, um Privilegien zu erweitern 14 / 29 Linux ACLs ▶Implementierung von DAC (und RBAC) ▶Subjekte können zusätzlich zum Besitzer, besitzender Gruppe und andere auch keine, eine oder mehrere benannte Benutzer und Gruppen sein ▶Ermöglicht gezielte Berechtigungen für weitere Benutzer ohne weitere Gruppen erstellen zu müssen ▶Abhängig von Dateisystem (ext4 typischerweise aktiviert) ▶setfacl für Vergabe bzw. Löschung, getfacl für Abfrage von Berechtigungen > getfacl s cript . sh # f i l e : s c ript . sh user : : rwx # owner : user1 group : : r −x # group : group1 other :: −−x 15 / 29 Linux ACLs: Beispiel I user1 möchte nicht, dass user2, der ebenfalls in der Gruppe group1 ist, script.sh lesen kann. user1 möchte einer weiteren Gruppe group2 Schreib- und Leserechte einräumen. > setfacl −m u : user2 : −, g : group2 : rw script . sh > ls −l s c ri p t . sh −rwxr −x−−x+ 1 user group 0 01. Jan 00:00 script . sh 16 / 29 Linux ACLs: Beispiel II > getfacl s c r i pt . sh # f i l e : s c ri p t . sh # owner : user1 # group : group1 user : :", "source": "infoSicherheit_merged.pdf", "start": 15000, "end": 16200}
{"text": "ACLs ▶Implementierung von DAC (und RBAC) ▶Subjekte können zusätzlich zum Besitzer, besitzender Gruppe und andere auch keine, eine oder mehrere benannte Benutzer und Gruppen sein ▶Ermöglicht gezielte Berechtigungen für weitere Benutzer ohne weitere Gruppen erstellen zu müssen ▶Abhängig von Dateisystem (ext4 typischerweise aktiviert) ▶setfacl für Vergabe bzw. Löschung, getfacl für Abfrage von Berechtigungen > getfacl s cript . sh # f i l e : s c ript . sh user : : rwx # owner : user1 group : : r −x # group : group1 other :: −−x 15 / 29 Linux ACLs: Beispiel I user1 möchte nicht, dass user2, der ebenfalls in der Gruppe group1 ist, script.sh lesen kann. user1 möchte einer weiteren Gruppe group2 Schreib- und Leserechte einräumen. > setfacl −m u : user2 : −, g : group2 : rw script . sh > ls −l s c ri p t . sh −rwxr −x−−x+ 1 user group 0 01. Jan 00:00 script . sh 16 / 29 Linux ACLs: Beispiel II > getfacl s c r i pt . sh # f i l e : s c ri p t . sh # owner : user1 # group : group1 user : : rwx user : user2 : −−− group : : r −x group : group2 : rw mask : : rw− other :: −−x ▶Maske (mask) legt die maximalen Rechte fest, die ein anderer Benutzer als der Besitzer oder eine Gruppe haben kann. ▶ACLs werden von oben nach unten abgearbeitet. ▶Die erste zutreffende Regel gilt. 17 / 29 Mandatory Access Control (MAC) ▶MAC verhält sich gegensätzlich zu DAC: Subjekte haben keinen Einfluss auf Zugriffsrechte ▶Zentrale Instanz realisiert Zugriffskontrolle basierend auf Berechtigungsrichtlinie (Policy). ▶Vorteile: Nachteil von DAC ausgeräumt ▶Nachteil: kompliziert (Policy-Spezifikation) 18 / 29 SELinux Policy Beispiel ▶Security-Enhanced Linux (SELinux)1 ist eine Implementierung von MAC (und RBAC) im Linux-Kernel mithilfe von Policies. ▶In Kombination mit RBAC policy_module ( admin_logs_policy , 1 . 0 ) gen_require ( ` type sysadm_r ; ' ) # Allow system admin to l i s t the contents of /var/log logging_list_logs ( sysadm_r ) 1https://github.com/SELinuxProject, aufgerufen am 13. März 2025 19 / 29 Firewall ▶Firewall trennt vertrauenswürdige Domäne von nicht vertrauenswürdiger Domäne durch Filterung bzw. Blockierung von Netzwerkverkehr zwischen diesen Domänen ▶Netfilter2 ist Linux Firewall/Paketfilter mit nftables3 ▶Regelwerk besteht aus Tabellen (table), Chains (chain), Regeln ▶Tabellen kategorisieren Regeln, z. B. filter für Paketfilterung ▶Chains sind Container für Regeln und steuern Reihenfolge der Anwendung von Regeln ▶nft list ruleset gibt das aktive Regelwerk aus. ▶nft flush ruleset löscht alle Tabellen, Chains und Regeln. 2https://www.netfilter.org/, abgerufen am 13. März 2025 3https://www.netfilter.org/projects/nftables/index.html, abgerufen am 13. März 2025 20 / 29 Netfilter/nftables Beispiel #!/ usr/sbin/ nft −f flush ruleset # Tabelle mit Namen f i l t e r von Typ inet table inet f i l t e r { # Kette mit Namen input chain input { # type f i l t e r Netzwerkverkehr wird g e f i l t e r t # hook input eingehender Netzwerkverkehr wird g e f i l t e r t # policy drop setzt deny by default um type f i l t e r hook input p r i o r i t y 0; policy drop ; # TCP−Verbindungen auf Standard −Port FTP sind erlaubt tcp dport ftp accept } } 21 / 29 Attribute-Based Access Control (ABAC) ▶ABAC (NIST SP 800-162, 2019) bindet Zugriffsrechte an Attribute von Subjekten und Objekten, z. B. Rolle, Projekt, Tageszeit, MAC Adresse. ▶D. h. Zugriffsrecht wird durch Attribute mit einem Kontext versehen ▶Mittlerweile verbreitet, z. B. in Frameworks wie Spring Security4 ▶Vorteile: Role explosion Problem von RBAC ausgeräumt, meist einfacher zu verwalten als RBAC, Zugriffsrechte fein justierbar (Least Privilege) ▶Im Allgemeinen sollte (falls anwendbar) ABAC der Vorzug vor RBAC gegeben werden. 4https://dzone.com/articles/simple-attribute-based-access-control-with-spring, aufgerufen am 13. März 2025 22 / 29 Weitere Zugriffskontrollmodelle Relationship-Based Access Control (ReBAC) von Gates (2007) basiert auf Beziehungen (über Subjekte und Objekte), angewandt in sozialen Netzwerken Chinese-Wall Modell von Brewer und Nash (1989) realisiert kommerzielle Strategie, angewandt im Finanzsektor Bell-LaPadula von Bell und LaPadula (1973) Hierarchie-orientiert, angewandt im militärischen Bereich 23 / 29 Zusammenfassung 24 / 29 Zusammenfassung ▶Grundlagen Zugriffskontrolle erklärt ▶Spezifikation Berechtigungsrichtlinien gelernt ▶Klassische und weitergehende Zugriffskontrollmodelle vorgestellt 25 / 29 Weiterführende Literatur 26 / 29 Weiterführende Literatur ▶IT-Sicherheit – Konzepte - Verfahren - Protokolle, Kapitel 6 von Eckert (2023) ▶OWASP Authorization Cheat Sheet5 ▶Security Engineering: A Guide to Building Dependable Distributed Systems, Kapitel 6 von Anderson (2020) ▶A Survey Of Access Control Models6 5https://cheatsheetseries.owasp.org/cheatsheets/Authorization_Cheat_Sheet.html, aufgerufen am 13. März 2025 6https://csrc.nist.gov/csrc/media/events/privilege-management-workshop/documents/pvm-model-surve y-aug26-2009.pdf, aufgerufen am 13. März 2025 27 / 29 Literatur I Anderson, R. (2020). Security Engineering: A Guide to Building Dependable Distributed Systems (3. Aufl.). John Wiley & Sons Inc. https://www.cl.cam.ac.uk/~rja14/book.html (siehe S. 27). Bell, D. E., & LaPadula, L. J. (1973). Secure Computer Systems: Mathematical Foundations and Model. Mitre Corporation. (Siehe S. 23). Brewer, D. F. C., & Nash, M. J. (1989).The Chinese Wall Security Policy. IEEE Symposium on Security and Privacy, 206–214 (siehe S. 23). Eckert, C. (2023). IT-Sicherheit: Konzepte - Verfahren - Protokolle (11. Aufl.). De Gruyter Oldenbourg. (Siehe S. 27). Ferraiolo, D. F., & Kuhn, D. R. (1992).Role-Based Access Controls. 15th National Computer Security Conference, 554–563. https://csrc.nist.gov/CSRC/media/Publications/conference- paper/1992/10/13/role-based-access- controls/documents/ferraiolo-kuhn-92.pdf (siehe S. 11). 28 / 29 Literatur II Gates, C. E. (2007).Access Control Requirements for Web 2.0 Security and Privacy. IEEE Security and Privacy Workshop on Web 2.0 Security and Privacy (siehe S. 23). NIST SP 800-162. (2019). NIST Special Publication 800-162. Guide to ABAC Definition and Considerations. https: //nvlpubs.nist.gov/nistpubs/specialpublications/NIST.SP.800- 162.pdf (siehe S. 22). Silberschatz, A., Galvin, P. B., & Gagne, G. (2018). Operating System Concepts (10th). John Wiley & Sons, Inc. (Siehe S. 7, 11). Smith, R. E. (2012).A Contemporary Look at Saltzer and Schroeder’s 1975 Design Principles. IEEE Security & Privacy, 10(6), 20–25 (siehe S. 10). 29 / 29 Informationssicherheit – SoSe 2025 Authentifikation: Grundlagen, Passwörter, Argon2 Prof. Dr. Holger Schmidt holger.schmidt004[at]fh-dortmund.de Fachhochschule Dortmund Fachbereich Informatik Professur für IT-Sicherheit, Informatik 13. März 2025, 07:36:26 1 / 39 Themen & Lernziele 2 / 39 Themen ▶Authentifikationsmethoden ▶n-Faktor Authentifikation ▶Entropie ▶Linux Passwortdatenbanken ▶Angriffsarten für Passwörter ▶Argon2 3 / 39 Lernziele Die Studierenden sind in der Lage, ▶Grundlagen der Authentifikation, insb. passwortbasierte Authentifikation und zugehörige Angriffsarten zu differenzieren und zu erklären. ▶Authentifikationsmethoden hinsichtlich Entropie zu analysieren. ▶Funktionalität von Passwortdatenbanken (Salt, Argon2) zu implementieren. 4 / 39 Authentizität ▶Im täglichen Leben: Sie authentisieren einen Freund, wenn Sie sich treffen oder miteinander telefonieren. ▶Weitere Beispiele: Geheimzahl am Geldautomaten, Grenzkontrolle mit Ausweis ▶Überprüfung der Echtheit (Authentizität) ▶Einseitige und gegenseitige Authentifikation ▶n-Faktor Authentifikation 5 / 39 Terminologie ▶Authentifikation (Authentifizierung) beschreibt die Überprüfung, ob jemand derjenige ist, der er vorgibt zu sein. ▶Authentisierung (Authentikation) beschreibt den gleichen Vorgang aus der Sicht des Überprüften. ▶Authorisierung hat eine andere Bedeutung (siehe Zugriffs- und Informationsflußkontrolle). ▶Identifikation (Identifizierung) beschreibt die Angabe eines Namens für ein Individuum. ▶Typischerweise passiert zunächst eine Identifikation und dann eine Authentifikation. 6 / 39 Authentifikationsmethoden ▶Wissen (etwas, was man weiß): Passwörter, Geheimzahlen, persönliche Informationen ▶Besitz (etwas, was man hat): Ausweis, RFID, Smartcard ▶Eigenschaft (etwas, was man ist): Unterschrift, Fingerabdruck 7 / 39 Passwörter 8 / 39 Passwörter ▶Authentifikation durch Wissen ▶Große praktische Bedeutung: Betriebssysteme, Web, WLAN-Protokolle WPA2 und WPA3 (Wi-Fi Protected Access), verschlüsselte Festspeicher, Archive, PGP &", "source": "infoSicherheit_merged.pdf", "start": 16000, "end": 17200}
{"text": "Lernziele 2 / 39 Themen ▶Authentifikationsmethoden ▶n-Faktor Authentifikation ▶Entropie ▶Linux Passwortdatenbanken ▶Angriffsarten für Passwörter ▶Argon2 3 / 39 Lernziele Die Studierenden sind in der Lage, ▶Grundlagen der Authentifikation, insb. passwortbasierte Authentifikation und zugehörige Angriffsarten zu differenzieren und zu erklären. ▶Authentifikationsmethoden hinsichtlich Entropie zu analysieren. ▶Funktionalität von Passwortdatenbanken (Salt, Argon2) zu implementieren. 4 / 39 Authentizität ▶Im täglichen Leben: Sie authentisieren einen Freund, wenn Sie sich treffen oder miteinander telefonieren. ▶Weitere Beispiele: Geheimzahl am Geldautomaten, Grenzkontrolle mit Ausweis ▶Überprüfung der Echtheit (Authentizität) ▶Einseitige und gegenseitige Authentifikation ▶n-Faktor Authentifikation 5 / 39 Terminologie ▶Authentifikation (Authentifizierung) beschreibt die Überprüfung, ob jemand derjenige ist, der er vorgibt zu sein. ▶Authentisierung (Authentikation) beschreibt den gleichen Vorgang aus der Sicht des Überprüften. ▶Authorisierung hat eine andere Bedeutung (siehe Zugriffs- und Informationsflußkontrolle). ▶Identifikation (Identifizierung) beschreibt die Angabe eines Namens für ein Individuum. ▶Typischerweise passiert zunächst eine Identifikation und dann eine Authentifikation. 6 / 39 Authentifikationsmethoden ▶Wissen (etwas, was man weiß): Passwörter, Geheimzahlen, persönliche Informationen ▶Besitz (etwas, was man hat): Ausweis, RFID, Smartcard ▶Eigenschaft (etwas, was man ist): Unterschrift, Fingerabdruck 7 / 39 Passwörter 8 / 39 Passwörter ▶Authentifikation durch Wissen ▶Große praktische Bedeutung: Betriebssysteme, Web, WLAN-Protokolle WPA2 und WPA3 (Wi-Fi Protected Access), verschlüsselte Festspeicher, Archive, PGP & S/MIME, Schlüsselbund ▶Erhebung zu Passwörtern1: ▶Basierend auf über 13 Milliarden öffentlich gewordenen Passwörtern ▶Beliebtestes Passwort ist „123456“mit einem Anteil von ca. 8% ▶Die TOP 10 Passwörter machen einen Anteil von knapp 22% aus. 1https://sec.hpi.de/leak-checker/statistics, aufgerufen am 13. März 2025 9 / 39 Passwortsicherheit Wie beurteilen Sie die Passwörter F9GndpVkfB44VdvwfUgTxGH7A8t und rE67AjbDCUotaju9H49sMFgYszA ? 10 / 39 Passwörter und Kerckhoffs Prinzip ▶Kommt darauf an: Wenn das zugrunde liegende System folgendes ist: ▶Wirf eine Münze. ▶„Kopf“ wird zu F9GndpVkfB44VdvwfUgTxGH7A8t ▶„Zahl“ wird zu rE67AjbDCUotaju9H49sMFgYszA ▶...dann sind die Passwörter extrem schwach, denn das System erzeugt nur zwei mögliche Ausgaben. 11 / 39 Passwörter und Entropie ▶Wir können die Anzahl der möglichen Resultate, die ein System ausgeben kann, in Entropie-Bits messen. ▶Zwei verschiedene mögliche Ausgaben lassen sich durch 1 Bit darstellen, d. h. das zuvor gezeigte System hat nur 1 Bit Entropie. ▶Wenn wir die Münze durch einen Würfel ersetzen, dann gibt es sechs verschiedene mögliche Ausgaben und das System hat ungefähr 3 Bits Entropie. ▶Jedes Bit Entropie repräsentiert eine Verdopplung der Anzahl der Möglichkeiten. ▶10 Bits Entropie repräsentieren 1024 Möglichkeiten. ▶11 Bits Entropie repräsentieren 2048 Möglichkeiten. ▶128 Bits Entropie repräsentieren 340282366920938463463374607431768211456 Möglichkeiten. 12 / 39 Entropie Entropie H = L log2N = L log N log 2 , wobei L Länge des Passworts und N Anzahl möglicher Zeichen Beispiel: Passwort mit 10 Ziffern, 26 Buchstaben (groß und klein geschrieben) resultiert in N = 62 möglichen Zeichen. Bei einer Passwortlänge von L = 4 und vollständig zufälligen Zeichen ergibt sich H = 23, 8 Bits. 13 / 39 Faktor Mensch – xkcd Webcomic – Teil 1 „Password Strength“, https://xkcd.com/936/, aufgerufen am 13. März 2025, lizensiert unter CC BY-NC 2.5.02 ▶Basiswort aus einer Liste von 216 Wörtern (16 Bits Entropie) ▶Groß- und Kleinschreibung an Wortanfang (1 Bit Entropie) ▶Ziffer aus 0 . . . 9 anhängen (4 Bits Entropie), eines aus 10 Satzzeichen (4 Bits Entropie), 3 Substitutionen/Schreibfehler (3 Bits Entropie) Von Menschen generierte Passwörter sind nicht zufällig. 2https://creativecommons.org/licenses/by-nc/2.5/ 14 / 39 Faktor Mensch – xkcd Webcomic – Teil 2 „Password Strength“, https://xkcd.com/936/, aufgerufen am 13. März 2025, lizensiert unter CC BY-NC 2.5.03 ▶Basiswort aus einer Liste von 211 (= 2048) Wörtern (11 Bits Entropie) 3https://creativecommons.org/licenses/by-nc/2.5/ 15 / 39 Diceware Diceware (https://theworld.com/~reinhold/diceware.html, aufgerufen am 13. März 2025) ▶Basiert auf Listen mit Wörtern, wobei jedem Wort 5 Ziffern aus {1, 2, 3, 4, 5, 6} vorangestellt sind ▶Die 5 Ziffern dienen als Selektor für 5 Würfelwürfe. ▶Jedes Wort erreicht ca. 13 Bits Entropie. ▶4 Diceware Wörter bieten ca. 52 Bits Entropie, d. h. ungefähr so viel wie ein 8 stelliges Passwort aus zufälligen ASCII-Zeichen (berechenbar in weniger als einem Tag). ▶7 Diceware Wörter (oder mehr) aktuell praktisch nicht berechenbar Weitere Infos zu Passwort- und Schlüssellängen: https://www.keylength.com/, aufgerufen am 13. März 2025 16 / 39 Konstruktion von Passwörtern nach NIST Standards ▶NIST zog NIST800-63 nach ca. 14 Jahren zurück (leider mitterweile nahezu überall implementiert) ▶„Memorized secret verifiers“ gem. NIST 800-63B, 2017, Sec. 5.1.1.2 ▶Minimal 8 Zeichen, maximal 64 Zeichen ▶Blacklisting (Wörterbücher, bekannte Passwörter, etc.) ▶Keine periodischen Passwörtänderungen ▶Keine Anforderungen an Passwortkomplexität (Buchstaben, Zahlen, Sonderzeichen, etc.) 17 / 39 Verwaltung und Nutzung von Passwörtern 18 / 39 Passwörter in Linux – Passwd ▶Linux Benutzerverwaltung basiert auf Dateien ▶/etc/passwd ist die zentrale Benutzerdatenbank Ein Eintrag /etc/passwd besteht aus folgenden durch : getrennte Komponenten: Benutzername Benutzername in druckbaren Zeichen Passwort Hash des Passworts oder x für einen Verweis auf /etc/shadow UID Benutzer-ID des Benutzers GID Gruppen-ID des Benutzers Info Persönliche Angaben zum Benutzer Heimatverzeichnis Privates Heimatverzeichnis des Benutzers Shell Die Shell, die nach der Anmeldung gestartet werden soll. 19 / 39 Passwörter in Linux – Beispiel Passwd its_vorlesung:x:1002:1002:its_vorlesung,42,23,0,-: /home/its_vorlesung:/bin/bash, d. h. ▶der Benutzer heißt its_vorlesung, ▶das Passwort steht in /etc/shadow, ▶UID und GID sind 1002, ▶its_vorlesung,42,23,0,- sind Infos, ▶/home/its_vorlesung ist das Heimatverzeichnis und ▶/bin/bash ist die Shell 20 / 39 Passwörter in Linux – Shadow -rw-r--r-- 1 root root 2323 Okt 24 10:16 /etc/passwd ▶D. h. root darf schreiben, jeder darf lesen ▶Dadurch sind Wörterbuchangriffe (dabei werden typische Passwörter gehasht und die Hashes zum Vergleich herangezogen) einfach durchführbar. ▶Entsprechend werden Passwörter typischerweise nicht in /etc/passwd gespeichert. ▶/etc/shadow ist die zentrale Passwortverwaltung -rw-r----- 1 root shadow 1384 Okt 24 08:07 /etc/shadow ▶D. h. root darf schreiben, Gruppe shadow darf lesen 21 / 39 Passwörter in Linux – Format Shadow Ein Eintrag in /etc/shadow besteht aus folgenden mit : getrennten Komponenten: Benutzername Benutzername in druckbaren Zeichen Passwort Hash des Passworts DOC Tag, an dem das Passwort zuletzt geändert wurde MinD Minimale Anzahl der Tage, die das Passwort gültig ist MaxD Maximale Anzahl der Tage, die das Passwort gültig ist Exp Anzahl Tage die das Passwort trotz Ablauf der MaxD noch gültig ist Dis Tag bis zu dem das Benutzerkonto gesperrt ist Res Reserve 22 / 39 Passwörter in Linux – Beispiel Shadow its_vorlesung:$6$eJEe0D4/$7gnAYeNKq5MUihn9UtyKq17qj57ZZ imeETmiSie1hTojRDBiFHi3/JUP8TYlrxYQx6R6mYrnRrx58LUs0Xd GP1:16847:0:99999:7:::, d. h. ▶der Benutzer heißt its_vorlesung, ▶dann folgt der Hash des Passworts, ▶zuletzt geändert als 16847 Tage seit dem 1.1.1970 vergangen waren, ▶ist minimal 0 Tage und maximal 99999 Tage gültig, ▶gewarnt wird 7 Tage vor Ablauf des Passworts und ▶die übrigen Werte sind nicht spezifiziert 23 / 39 Passwörter in Linux – Hashing ▶Linux verwendet crypt(3) (https://man7.org/linux/man-pages/man3/crypt.3.html, aufgerufen am 13. März 2025) der Glibc als Hashfunktion ▶crypt(3) basiert ursprünglich auf DES mit einem Klartext bestehend nur aus 0 als Eingabe; der Geheimtext ist der Hash des Passworts. 24 / 39 Passwörter in Linux – Salt ▶Es ist nicht unwahrscheinlich, dass mehrere Menschen das gleiche Passwort verwenden. ▶Ensprechend würde sich für ein solches mehrfach vergebenes Passwort der gleiche Hash ergeben. ▶Daher verwendet crypt(3) als Schlüssel das Passwort mit angehangenem zufälligen salt Wert, der ebenfalls in der /etc/shadow gespeichert wird. 25 / 39 Passwörter in Linux – Beispiel Hashing und Salt Betrachten wir nochmal das Beispiel: its_vorlesung:$ 6 $ eJEe0D4/ $ 7gnAYeNKq5MUihn9UtyKq17qj57ZZ meETmiSie1hiTojRDBiFHi3/JUP8TYlrxYQx6R6mYrnRrx58LUs0XdGP1 :16847:0:99999:7:::, wobei ▶6 spezifiziert die verwendete Hashfunktion SHA-512 ▶eJEe0D4/ ist der salt Wert ▶7gnAYeNKq5MUih ...ist der Hash 26 / 39 Passwörter in Linux – Zusammenfassung ▶Passwörter werden nicht im Klartext gespeichert ▶Passwörter werden separat verwaltet (shadow) ▶Passwörter werden gesalzen (Benutzer-individuell) und gehasht ▶Passwort-basierte Authentifikation wird basierend auf", "source": "infoSicherheit_merged.pdf", "start": 17000, "end": 18200}
{"text": "Hash des Passworts, ▶zuletzt geändert als 16847 Tage seit dem 1.1.1970 vergangen waren, ▶ist minimal 0 Tage und maximal 99999 Tage gültig, ▶gewarnt wird 7 Tage vor Ablauf des Passworts und ▶die übrigen Werte sind nicht spezifiziert 23 / 39 Passwörter in Linux – Hashing ▶Linux verwendet crypt(3) (https://man7.org/linux/man-pages/man3/crypt.3.html, aufgerufen am 13. März 2025) der Glibc als Hashfunktion ▶crypt(3) basiert ursprünglich auf DES mit einem Klartext bestehend nur aus 0 als Eingabe; der Geheimtext ist der Hash des Passworts. 24 / 39 Passwörter in Linux – Salt ▶Es ist nicht unwahrscheinlich, dass mehrere Menschen das gleiche Passwort verwenden. ▶Ensprechend würde sich für ein solches mehrfach vergebenes Passwort der gleiche Hash ergeben. ▶Daher verwendet crypt(3) als Schlüssel das Passwort mit angehangenem zufälligen salt Wert, der ebenfalls in der /etc/shadow gespeichert wird. 25 / 39 Passwörter in Linux – Beispiel Hashing und Salt Betrachten wir nochmal das Beispiel: its_vorlesung:$ 6 $ eJEe0D4/ $ 7gnAYeNKq5MUihn9UtyKq17qj57ZZ meETmiSie1hiTojRDBiFHi3/JUP8TYlrxYQx6R6mYrnRrx58LUs0XdGP1 :16847:0:99999:7:::, wobei ▶6 spezifiziert die verwendete Hashfunktion SHA-512 ▶eJEe0D4/ ist der salt Wert ▶7gnAYeNKq5MUih ...ist der Hash 26 / 39 Passwörter in Linux – Zusammenfassung ▶Passwörter werden nicht im Klartext gespeichert ▶Passwörter werden separat verwaltet (shadow) ▶Passwörter werden gesalzen (Benutzer-individuell) und gehasht ▶Passwort-basierte Authentifikation wird basierend auf einem Vergleich von Hash durchgeführt. 27 / 39 Angriffsarten und Argon2 28 / 39 Wiederherstellung von Passwörtern: Online-Angriffe Ziel Ausgehend von einem Hash und Salt soll das zugehörige Passwort wiederhergestellt werden. ▶Brute Force: Berechne nacheinander die Hashes aller möglichen Passwörter, bis der korrekte Hash gefunden ist. ▶Probleme: Laufzeit, Verwerfen von berechneten Hashes ▶Wörterbuch-Angriff: Berechne nur die Hashes von ausgewählten Passwörtern (z. B. basierend auf den TOP 10-Passwörtern) ▶Problem: Mangelhafte Passwörter-Abdeckung ▶Die vorgenannten Angriffe sind Online-Angriffe (berechnete Hashes werden verworfen). 29 / 39 Wiederherstellung von Passwörtern: Offline-Angriffe ▶Die folgenden Angriffsarten sind heute typischerweise aufgrund gesalzener Passwörter nicht mehr praktikabel. ▶Berechne nacheinander die Hashes aller möglichen Passwörter. Speichere alle Klartext-Hash-Paare in einer sortierten Tabelle. ▶Vorteil: Schnelle, binäre Suche ▶Problem: z. B. bei einer Suche über 77 mögliche Zeichen (z. B. {A −Z, a −z, 0 −9 sowie übliche Sonderzeichen}) und einem siebenstelligen Klartext ergeben sich 777 Variationen. Ausgehend von MD5, werden pro Klartext-Hash-Paar 16 Byte für den Hash und 7 Byte für den Klartext benötigt und somit insgesamt ca. 335 TB. Bei einem achtstelligen Passwort werden ca. 25 PB benötigt. ▶Rainbow Tables (Oechslin, 2003) sind Datenstrukturen, die einen Time-Memory Tradeoff erlauben. 30 / 39 Praxisrelevanz von Online-Angriffen ▶MD5, SHA-1/2/3, etc. sind universelle und hoch-performante Hashfunktionen insbesondere zum Nachweis von Datenintegrität. ▶In Verbindung mit aktueller CPU/GPU-Performance (Moore’sches Gesetz) sind Online-Angriffe praktikabel, selbst wenn gesalzene Passwörter eingesetzt werden. ▶Hashcat berechnet z. B. mit einer (!) AMD Radeon RX 6800 XT ca. 50 Milliarden MD5 Hashes pro Sekunde4 ▶Passwort Cracker5 unterstützen diese Angriffsarten. 4https://gist.github.com/epixoip/99085955a1145ff61ec83512a50421a7, aufgerufen am 13. März 2025 5https://openwall.com/john/ und https://hashcat.net/, aufgerufen am 13. März 2025 31 / 39 Härtung gegen Online-Angriffe ▶Passwortkonstruktion gem. NIST 800-63B, 2017, Sec. 5.1.1.2 (z. B. keine bekannten Passwörter) ▶Mehrfaches Hashing (typischerweise > 10.000 Iterationen) ▶Spezialisierte Hashfunktionen, z. B. Argon26 und SCrypt7 bieten Mechanismen zur Anpassung ihrer Performance und können so mit dem Moore’schen Gesetz „mithalten“. 6https://www.rfc-editor.org/rfc/rfc9106, aufgerufen am 13. März 2025 7https://www.rfc-editor.org/rfc/rfc7914, aufgerufen am 13. März 2025 32 / 39 Argon2 ▶Parameter8: ▶Passwort ▶Salt (16 Byte empfohlen) ▶Parallelisierung (Anzahl Threads) ▶Iterationen (Ausführungszeit) ▶Speichernutzung (KB) ▶Adäquate Auswahl Parameter9 ▶Argon2d besonders gehärtet gegen GPU-basierte Angriffe, Argon2i gegen Seitenkanalangriffe ▶Argon2id hybrider Ansatz, im Allgemeinen empfohlen 8https://argon2.online/, aufgerufen am 13. März 2025 9https://github.com/paragonie/argon2-refiner, aufgerufen am 13. März 2025 33 / 39 Fallstricke und Anwendungshinweise ▶Benutzer-individuelles Salt nutzen ▶Passwortkonstruktion gem. NIST 800-63B, 2017, Sec. 5.1.1.2 ▶Auf universelle Hashfunktion verzichten, stattdessen Argon2id (oder SCrypt) nutzen 34 / 39 Zusammenfassung 35 / 39 Zusammenfassung ▶Grundlagen Authentifikation präsentiert ▶Entropie im Zusammenhang mit Passwörtern erklärt ▶Linux Passwortdatenbanken und Angriffsarten gelernt ▶Argon2 vorgestellt 36 / 39 Weiterführende Literatur 37 / 39 Weiterführende Literatur ▶IT-Sicherheit – Konzepte - Verfahren - Protokolle, Kapitel 10 von Eckert (2023) ▶OWASP Password Storage Cheat Sheet10 ▶Password Hashing Competition11 10https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html, aufgerufen am 13. März 2025 11https://www.password-hashing.net/, aufgerufen am 13. März 2025 38 / 39 Literatur Eckert, C. (2023). IT-Sicherheit: Konzepte - Verfahren - Protokolle (11. Aufl.). De Gruyter Oldenbourg. (Siehe S. 38). NIST 800-63B. (2017). NIST Special Publication 800-63B. Digital Identity Guidelines – Authentication and Lifecycle Management. https: //nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800- 63b.pdf (siehe S. 17, 32, 34). Oechslin, P. (2003). Making a Faster Cryptanalytic Time-Memory Trade-Off. In D. Boneh (Hrsg.), Advances in Cryptology - CRYPTO 2003, 23rd Annual International Cryptology Conference, Santa Barbara, California, USA, August 17-21, 2003, Proceedings (S. 617–630, Bd. 2729). Springer. (Siehe S. 30). 39 / 39 Informationssicherheit – SoSe 2025 Faktor Mensch Prof. Dr. Holger Schmidt holger.schmidt004[at]fh-dortmund.de Fachhochschule Dortmund Fachbereich Informatik Professur für IT-Sicherheit, Informatik 13. März 2025, 07:37:03 1 / 32 Themen & Lernziele 2 / 32 Themen ▶Faktor Mensch in der Informationssicherheit ▶Information Security Awareness 3 / 32 Lernziele Die Studierenden sind in der Lage, ▶den Faktor Mensch in der Informationssicherheit einzuschätzen. ▶einen Zusammenhang zwischen technischer und organisatorischer Informationssicherheit herzustellen. 4 / 32 Faktor Mensch 5 / 32 xkcd Webcomic „Security“, http://xkcd.com/538/, aufgerufen am 13. März 2025, lizensiert unter CC BY-NC 2.5.01 1https://creativecommons.org/licenses/by-nc/2.5/ 6 / 32 Der Faktor Mensch I durch Sicherheitsmaßnahmen Abbildung selbst erstellt ▶Risiken nur auf tolerierbares Niveau absenkbar, wenn Gegenmaßnahmen in bestimmter Umgebung realisiert sind ▶Mensch als Teil der Umgebung beeinflußt essentiell Effektivität von Gegenmaßnahmen 7 / 32 Der Faktor Mensch II ▶Menschliches Verhalten nicht zu kontrollieren; entsprechend nur Annahmen darüber möglich ▶Mensch als Schwachstelle und damit Angriffsziel ▶Ausnutzung menschlicher Eigenschaften zur gezielten Beeinflussung menschlichen Verhaltens ▶So herbeigeführte „Ausnahmesituation“ verleitet häufig zu unterbewussten Handlungen, welche einen weitergehenden Angriff ermöglichen ▶Derartiges Social Engineering erfordert nur geringen Aufwand bei typischerweise hoher Erfolgsquote 8 / 32 Aktuelle Entwicklungen bezogen auf den Faktor Mensch I ▶Stetig steigende Anzahl erfolgreicher Angriffe auf den Faktor Mensch (so z. B. via Phishing) (Symantec, 2019) ▶Phishing eher rückläufig, Spear-Phishing nimmt zu, dabei insb. auf kleine und mittlere Unternehmen (KMU) (seit 2013 jährlich ansteigend) (Symantec, 2019) ▶Angriffe erfolgen typischerweise online (z. B. via E-Mail) und offline (z. B. via Telefon) 9 / 32 Aktuelle Entwicklungen bezogen auf den Faktor Mensch II ▶Insb. am Beispiel Phishing Verlagerung von E-Mail hin zu Social Media erkennbar (Symantec, 2019) ▶Gezielte Ausrichtung der Angriffe auf Bank- und Finanzwesen erkennbar (Proofpoint Inc., 2022) ▶Social Engineering Techniken entwickeln sich fortwährend weiter und erfolgen oft in hoher Frequenz, wodurch Angriffe schwierig abzuwehren sind. 10 / 32 Twitter Bitcoin Scam 11 / 32 Twitter Bitcoin Scam vom 15.07.20202 ▶130 Twitter Konten von Prominenten (darunter z. B. Joe Biden, Bill Gates, Elon Musk) und Firmen übernommen ▶In Minuten durch über 300 Transaktionen mehr als 100.000US$ eingenommen Screenshot eines Tweet eines kompromittierten Apple Account https://www.theverge.com/2020/7/15/21326200/elon-musk-bill-gates-twitter-hack-bit coin-scam-compromised aufgerufen am 13. März 2025 2https://en.wikipedia.org/wiki/2020_Twitter_bitcoin_scam, aufgerufen am 13. März 2025 12 / 32 Hintergrund – Koordinierter Social Engineering Angriff34 ▶Zugangsdaten für Twitter VPN von Twitter Mitarbeiter via Phone Spear Phishing erlangt ▶Internes Adminis- trationswerkzeug für Twitter Konten für Zurücksetzen der Passwörter genutzt Screenshot eines Twitter Administrationswerkzeugs https://www.vice.com/en/article/jgxd3d/twitter-insider-access-panel-account-hacks -biden-uber-bezos aufgerufen am 13. März 2025 3https://techcrunch.com/2009/07/19/the-anatomy-of-the-twitter-attack/, aufgerufen am 13. März 2025 4https://www.forbes.com/sites/louiscolumbus/2020/07/18/dissecting-the-twitter-hack-with-a-cybersecu rity-evangelist/?sh=63c5ac5647df, aufgerufen am 13. März 2025 13 / 32 Hintergrund – Phone Spear Phishing5 ▶Auswahl Twitter Mitarbeiter über LinkedIn: Recruiter-Dienste erlauben Zugriff auf Telefonnummer ▶Twitter Mitarbeiter aufgrund COVID-19 Pandemie zumeist im Home Office ▶Angreifer geben sich als Twitter Mitarbeiter aus und fordern „echte“ Twitter Mitarbeiter zur Anmeldung in gefälschtem Twitter", "source": "infoSicherheit_merged.pdf", "start": 18000, "end": 19200}
{"text": "von E-Mail hin zu Social Media erkennbar (Symantec, 2019) ▶Gezielte Ausrichtung der Angriffe auf Bank- und Finanzwesen erkennbar (Proofpoint Inc., 2022) ▶Social Engineering Techniken entwickeln sich fortwährend weiter und erfolgen oft in hoher Frequenz, wodurch Angriffe schwierig abzuwehren sind. 10 / 32 Twitter Bitcoin Scam 11 / 32 Twitter Bitcoin Scam vom 15.07.20202 ▶130 Twitter Konten von Prominenten (darunter z. B. Joe Biden, Bill Gates, Elon Musk) und Firmen übernommen ▶In Minuten durch über 300 Transaktionen mehr als 100.000US$ eingenommen Screenshot eines Tweet eines kompromittierten Apple Account https://www.theverge.com/2020/7/15/21326200/elon-musk-bill-gates-twitter-hack-bit coin-scam-compromised aufgerufen am 13. März 2025 2https://en.wikipedia.org/wiki/2020_Twitter_bitcoin_scam, aufgerufen am 13. März 2025 12 / 32 Hintergrund – Koordinierter Social Engineering Angriff34 ▶Zugangsdaten für Twitter VPN von Twitter Mitarbeiter via Phone Spear Phishing erlangt ▶Internes Adminis- trationswerkzeug für Twitter Konten für Zurücksetzen der Passwörter genutzt Screenshot eines Twitter Administrationswerkzeugs https://www.vice.com/en/article/jgxd3d/twitter-insider-access-panel-account-hacks -biden-uber-bezos aufgerufen am 13. März 2025 3https://techcrunch.com/2009/07/19/the-anatomy-of-the-twitter-attack/, aufgerufen am 13. März 2025 4https://www.forbes.com/sites/louiscolumbus/2020/07/18/dissecting-the-twitter-hack-with-a-cybersecu rity-evangelist/?sh=63c5ac5647df, aufgerufen am 13. März 2025 13 / 32 Hintergrund – Phone Spear Phishing5 ▶Auswahl Twitter Mitarbeiter über LinkedIn: Recruiter-Dienste erlauben Zugriff auf Telefonnummer ▶Twitter Mitarbeiter aufgrund COVID-19 Pandemie zumeist im Home Office ▶Angreifer geben sich als Twitter Mitarbeiter aus und fordern „echte“ Twitter Mitarbeiter zur Anmeldung in gefälschtem Twitter VPN auf ▶Abgreifen der Zugangsdaten für „echtes“ (sogar 2FA geschütztes) Twitter VPN ▶Angreifer haben somit über Twitter VPN Zugriff auf Administrationswerkzeug 5https://arstechnica.com/information-technology/2020/07/twitter-hackers-used-phone-spear-phishing-i n-mass-account-takeover/, aufgerufen am 13. März 2025 14 / 32 Hintergrund – Übernahme Twitter Konten6 ▶Angreifer nutzten Administrationswerkzeug um E-Mail-Adresse in Twitter Konten zu ändern und 2FA-Einstellungen zu widerrufen ▶Daraufhin wurde die Passwörter Zurücksetzen Funktion genutzt: 1. Telefonnummer für 2FA SMS war ursprünglich NICHT hinterlegt: Code für Zurücksetzen des Passworts ging NUR an die neue E-Mail-Adresse 2. Telefonnummer für 2FA SMS war ursprünglich hinterlegt: Code für Zurücksetzen des Passworts ging zusätzlich per SMS an hinterlegte Telefonnummer ▶Ergebnis: Twitter Konto übernommen, z. T. in Unkenntnis der Besitzer des Kontos 6https://lucky225.medium.com/the-twitter-hack-what-exactly-happened-d8740d33c1c, aufgerufen am 13. März 2025 15 / 32 Hintergrund – Forensik und Täter789 ▶FBI verhaftet drei Täter am 30.07.2020. ▶Die Angreifer wurden durch Ihre Social Media Aktivitäten (OGUsers Forum, Twitter, Discord) und Transaktionen einer Crypto Währung identifiziert. ▶Hohe Haftstrafen (mindestens 10 Jahre bzw. 3 Jahre bei jugendlichem Täter) 7https://www.wired.com/story/how-alleged-twitter-hackers-got-caught-bitcoin/, aufgerufen am 13. März 2025 8https://www.nytimes.com/2020/07/17/technology/twitter-hackers-interview.html, aufgerufen am 13. März 2025 9https://www.justice.gov/usao-ndca/pr/three-individuals-charged-alleged-roles-twitter-hack, aufgerufen am 13. März 2025 16 / 32 Analyse Auswirkungen: ▶Integritätsverlust und Übernahme von Twitter Konten ▶Monetäre Verluste (Transaktionen, Aktienkurs, etc.) und Reputationsminderung (Twitter, Betroffene) Fehlerbehebung: ▶Entfernen von Tweets, Sperrung Twitter Konten, ggf. weitere Maßnahmen Analyse: ▶Twitter Mitarbeiter authentifizieren Telefonpartner unzureichend ▶Fehler in Administrationswerkzeug erlaubt Änderung E-Mail-Adresse ohne Bestätigung an vorherige E-Mail-Adresse ▶Zugriff auf Administrationswerkzeug durch viel zu große Nutzergruppe 17 / 32 Faktor Mensch (Fortsetzung) 18 / 32 Beispiele für Angriffstechniken (auf den Faktor Mensch) I Phishing Erlangung von Informationen (z. B. Login-Daten) auf Basis der Fälschung von E-Mails oder Websites eines Unternehmens. Auf diese Weise kann auch Malware platziert werden. Spear Phishing Zustellung von z. B. E-Mails an ein gezielt gewähltes Opfer, welches durch das Öffnen eines Anhangs oder Links Malware installiert oder Informationen preisgibt. Baiting / „Verlorene“ Datenträger Auslegen vermeintlich verlorener Datenträger (z. B. USB-Sticks von konkurrierendem Unternehmen), die Finder zum Öffnen innerhalb des Firmennetzes verleiten. 19 / 32 Beispiele für Angriffstechniken (auf den Faktor Mensch) II Pretexting / Fake-IT-Support Anrufe durch angebliche Mitarbeiter aus der eigenen IT-Abteilung oder z. B. von Microsoft. Ziel: Anleitung zur Installation von Malware oder Deaktivierung von Schutzmechanismen. Soziale Netzwerke Übernahme von Identitäten (z. B. Freunden oder Arbeitskollegen) zur Ausnutzung von Vertrauen bzw. Erlangung von Insider-Informationen. Weitere Dumpster Diving (Müll durchsuchen), Shoulder Surfing („über die Schulter schauen“) 20 / 32 Beispiele für ausnutzbare menschliche Eigenschaften Neugierde kann zu kritischen Handlungen verleiten, die dann keinerlei äußere Einwirkung mehr benötigen. Angst wird häufig durch das Vortäuschen einer besonders kritischen Situation (Notfallsituation) hervorgerufen und verleitet z. B. zu schadhaften Handlungen von Angestellten. Untergebenheit / Respekt können bei Einschüchterungsversuchen via Social Engineering – z. B. beim Vortäuschen einer übergeordneten eigenen Rolle im selben Unternehmen – gezielt ausgenutzt werden. Hilfsbereitschaft kann zur falschen Unterstützung durch Angreifer gezielt missbraucht werden. Vertrauen aufbauen (z. B. vorgetäuschtes Anvertrauen von Informationen) dient oft der Vorbereitung von Social Engineering Angriffen. Vgl. (Helisch & Pokoyski, 2009) 21 / 32 Schäden durch erfolgreiche Angriffe ▶Verletzung von Schutzzielen (Verfügbarkeit, Vertraulichkeit, Integrität) ▶Materieller und/oder monetärer Schaden ▶Imageschaden ▶Datenverlust 22 / 32 Security Awareness / Sicherheitsbewusstsein Awareness is not training. The purpose of awareness presentations is simply to focus attention on security. Awareness presentations are intended to allow individuals to recognize IT security concerns and respond accordingly. (Wilson & Hash, 2003) ▶Security Awareness (Sicherheitsbewusstsein) beschreibt Wissen um Angriffstechniken und Risiken. ▶Sicherheitsmaßnahme zur Risikoreduktion ▶Adressiert nicht nur Social Engineering (primär extrinsisch), sondern auch menschliche Versäumnisse (z. B. regelmäßige Überprüfung und Anpassung von Zugängen) oder Fehlhandlungen (primär intrinsisch) 23 / 32 Security Awareness Maßnahmen ▶Security Awareness nur unter Einbeziehung menschlicher Eigenschaften herstell- und verbesserbar ▶Social Engineering Risiken nicht einzig durch technische Mittel ausreichend reduzierbar (PricewaterhouseCoopers, 2015). ▶Technische Mittel um Minimalschutz zu gewährleisten, z. B. Aktenvernichtung (Dumpster Diving), Sichtschutzfolien (Shoulder Surfing), USB ausschalten (Baiting) ▶Verankerung von Security Awareness in Sicherheitsrichtlinien 24 / 32 Security Awareness Kampagnen I ▶Kampagnen zur Steigerung der Security Awareness ▶Erfüllung von Anforderungen, z. B. bei Zertifizierung nach Standards ▶Etablierung einer Sicherheitskultur als Ziel von Security Awareness Kampagnen ▶Konsequente Einbeziehung von Mitarbeitern und Geschäftsführung 25 / 32 Security Awareness Kampagnen II Beispiel aus einer Awareness-Kampagne der Firma Microsoft; Foto selbst erstellt ▶Security Awareness Kampagnen beinhalten häufig z. B. : ▶Schulungen / Trainings (auch als E-Learning) ▶Vorträge ▶Flyer, Anleitungen, Anweisungen ▶Plakate, Poster, Banner ▶Videos und interaktive Kampagnen im Intranet Vgl. (Helisch & Pokoyski, 2009) 26 / 32 Zusammenfassung 27 / 32 Zusammenfassung ▶Mensch als essentieller Faktor in der Systemumgebung erkannt und analysiert ▶Maßnahmen zur systematischen Verbesserung der Security Awareness vorgestellt 28 / 32 Weiterführende Literatur 29 / 32 Weiterführende Literatur ▶IT-Sicherheit – Konzepte - Verfahren - Protokolle, Kapitel 1.5 von Eckert (2023) ▶IT-Grundschutz-Kompendium, insb. ORP und INF10 ▶Security Awareness – Neue Wege zur erfolgreichen Mitarbeiter-Sensibilisierung von Helisch und Pokoyski (2009) 10https: //www.bsi.bund.de/DE/Themen/Unternehmen-und-Organisationen/Standards-und-Zertifizierung/IT-Grund schutz/IT-Grundschutz-Kompendium/IT-Grundschutz-Bausteine/Bausteine_Download_Edition_node.html, aufgerufen am 13. März 2025 30 / 32 Literatur I Eckert, C. (2023). IT-Sicherheit: Konzepte - Verfahren - Protokolle (11. Aufl.). De Gruyter Oldenbourg. (Siehe S. 30). Helisch, M., & Pokoyski, D. (2009). Security Awareness – Neue Wege zur erfolgreichen Mitarbeiter-Sensibilisierung. Vieweg+Teubner. (Siehe S. 21, 26, 30). PricewaterhouseCoopers. (2015). Turnaround and transformation in cybersecurity – Key findings from The Global State of Information Security® Survey 2016 (Techn. Ber.). (Siehe S. 24). Proofpoint Inc. (2022). The Human Factor 2022 – A Proofpoint Research Report (Techn. Ber.). https://www.proofpoint.com/sites/default/files/threat- reports/pfpt-us-tr-human-factor-report.pdf (siehe S. 10). Symantec. (2019). ISTR24 – Internet Security Threat Report (Techn. Ber.). (Siehe S. 9, 10). 31 / 32 Literatur II Wilson, M., & Hash, J. (2003). NIST Special Publication 800-50 – Building an Information Technology Security Awareness and Training Program. U.S. Dept. of Commerce, National Institute of Standards; Technology. https://nvlpubs.nist.gov/nistpubs/Legacy/SP/ nistspecialpublication800-50.pdf (siehe S. 23). 32 / 32", "source": "infoSicherheit_merged.pdf", "start": 19000, "end": 20132}
